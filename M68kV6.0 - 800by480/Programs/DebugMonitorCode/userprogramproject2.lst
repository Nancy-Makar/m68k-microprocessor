680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 28 Feb 2023      Time: 23:19:37          Source: C:\CPEN412\GITHUB_STEUP\M68KV6.0 - 800BY480\PROGRAMS\DEBUGMONITORCODE\USERPROGRAMPROJECT2.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  2340      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  2220      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  2224      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  23AC 0800 
08000034  2228      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  095E      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\CPEN412\GITHUB_STEUP\M68KV6.0 - 800BY480\PROGRAMS\DEBUGMONITORCODE\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; //IMPORTANT
                      49   ; //
                      50   ; // Uncomment one of the two #defines below
                      51   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      52   ; // 0B000000 for running programs from dram
                      53   ; //
                      54   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      55   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      56   ; // building
                      57   ; //
                      58   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      59   ; // is based around Dram so #define accordingly before building
                      60   ; #define StartOfExceptionVectorTable 0x08030000
                      61   ; //#define StartOfExceptionVectorTable 0x0B000000
                      62   ; /**********************************************************************************************
                      63   ; **	Parallel port addresses
                      64   ; **********************************************************************************************/
                      65   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      66   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      67   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      68   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      69   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      70   ; /*********************************************************************************************
                      71   ; **	Hex 7 seg displays port addresses
                      72   ; *********************************************************************************************/
                      73   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      74   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      75   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      76   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      77   ; /**********************************************************************************************
                      78   ; **	LCD display port addresses
                      79   ; **********************************************************************************************/
                      80   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      81   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      82   ; /********************************************************************************************
                      83   ; **	Timer Port addresses
                      84   ; *********************************************************************************************/
                      85   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      86   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      87   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      88   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      89   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      90   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      91   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      92   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      93   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      94   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      95   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      96   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      97   ; /*********************************************************************************************
                      98   ; **	RS232 port addresses
                      99   ; *********************************************************************************************/
                     100   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     101   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     102   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     103   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     104   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     105   ; /*********************************************************************************************
                     106   ; **	PIA 1 and 2 port addresses
                     107   ; *********************************************************************************************/
                     108   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     109   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     110   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     111   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     112   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     113   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     114   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     115   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     116   ; /* SPI declarations*/
                     117   ; /*************************************************************
                     118   ; ** SPI Controller registers
                     119   ; **************************************************************/
                     120   ; // SPI Registers
                     121   ; #define SPI_Control         (*(volatile unsigned char *)(0x00408020))
                     122   ; #define SPI_Status          (*(volatile unsigned char *)(0x00408022))
                     123   ; #define SPI_Data            (*(volatile unsigned char *)(0x00408024))
                     124   ; #define SPI_Ext             (*(volatile unsigned char *)(0x00408026))
                     125   ; #define SPI_CS              (*(volatile unsigned char *)(0x00408028))
                     126   ; // these two macros enable or disable the flash memory chip enable off SSN_O[7..0]
                     127   ; // in this case we assume there is only 1 device connected to SSN_O[0] so we can
                     128   ; // write hex FE to the SPI_CS to enable it (the enable on the flash chip is active low)
                     129   ; // and write FF to disable it
                     130   ; #define   Enable_SPI_CS()             SPI_CS = 0xFE
                     131   ; #define   Disable_SPI_CS()            SPI_CS = 0xFF
                     132   ; /* end */
                     133   ; /*********************************************************************************************************************************
                     134   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     135   ; (( it's a limitation of the compiler
                     136   ; (( YOU HAVE BEEN WARNED
                     137   ; *********************************************************************************************************************************/
                     138   ; unsigned int i, x, y, z, PortA_Count;
                     139   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     140   ; /*******************************************************************************************
                     141   ; ** Function Prototypes
                     142   ; *******************************************************************************************/
                     143   ; void Wait1ms(void);
                     144   ; void Wait3ms(void);
                     145   ; void Init_LCD(void) ;
                     146   ; void LCDOutchar(int c);
                     147   ; void LCDOutMess(char *theMessage);
                     148   ; void LCDClearln(void);
                     149   ; void LCDline1Message(char *theMessage);
                     150   ; void LCDline2Message(char *theMessage);
                     151   ; int sprintf(char *out, const char *format, ...) ;
                     152   ; void ReadMemory(char* StartRamPtr, char* EndRamPtr, unsigned char FillData, int config);
                     153   ; void FillMemory(char* StartRamPtr, char* EndRamPtr, unsigned char FillData, int config);
                     154   ; int Get7HexDigits(char one, char two, char three, char four, char five, char six, char seven);
                     155   ; int Get8HexDigits(char pat);
                     156   ; int Get4HexDigits(char pat);
                     157   ; int Get2HexDigits(char pat);
                     158   ; char xtod(int c);
                     159   ; void enableWrite(void);
                     160   ; int WriteSPIChar(int c);
                     161   ; int WriteSPI(int num);
                     162   ; void pollSPI(void);
                     163   ; /*****************************************************************************************
                     164   ; **	Interrupt service routine for Timers
                     165   ; **
                     166   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     167   ; **  out which timer is producing the interrupt
                     168   ; **
                     169   ; *****************************************************************************************/
                     170   ; void Timer_ISR()
                     171   ; {
                     172   _Timer_ISR:
                     173   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  174          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  175          cmp.b     #1,D0
08000048  661A       176          bne.s     Timer_ISR_1
                     177   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  178          move.b    #3,4194354
0800004E  0040 0032 
                     179   ; PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
08000052  1039 0800  180          move.b    _Timer1Count.L,D0
08000056  2354      
08000058  5239 0800  181          addq.b    #1,_Timer1Count.L
0800005C  2354      
0800005E  13C0 0040  182          move.b    D0,4194304
08000062  0000      
                     183   Timer_ISR_1:
                     184   ; }
                     185   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000064  1039 0040  186          move.b    4194358,D0
08000068  0036      
0800006A  0C00 0001  187          cmp.b     #1,D0
0800006E  661A       188          bne.s     Timer_ISR_3
                     189   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000070  13FC 0003  190          move.b    #3,4194358
08000074  0040 0036 
                     191   ; PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
08000078  1039 0800  192          move.b    _Timer2Count.L,D0
0800007C  2356      
0800007E  5239 0800  193          addq.b    #1,_Timer2Count.L
08000082  2356      
08000084  13C0 0040  194          move.b    D0,4194308
08000088  0004      
                     195   Timer_ISR_3:
                     196   ; }
                     197   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
0800008A  1039 0040  198          move.b    4194362,D0
0800008E  003A      
08000090  0C00 0001  199          cmp.b     #1,D0
08000094  661A       200          bne.s     Timer_ISR_5
                     201   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000096  13FC 0003  202          move.b    #3,4194362
0800009A  0040 003A 
                     203   ; HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
0800009E  1039 0800  204          move.b    _Timer3Count.L,D0
080000A2  2358      
080000A4  5239 0800  205          addq.b    #1,_Timer3Count.L
080000A8  2358      
080000AA  13C0 0040  206          move.b    D0,4194320
080000AE  0010      
                     207   Timer_ISR_5:
                     208   ; }
                     209   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
080000B0  1039 0040  210          move.b    4194366,D0
080000B4  003E      
080000B6  0C00 0001  211          cmp.b     #1,D0
080000BA  661A       212          bne.s     Timer_ISR_7
                     213   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
080000BC  13FC 0003  214          move.b    #3,4194366
080000C0  0040 003E 
                     215   ; HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
080000C4  1039 0800  216          move.b    _Timer4Count.L,D0
080000C8  235A      
080000CA  5239 0800  217          addq.b    #1,_Timer4Count.L
080000CE  235A      
080000D0  13C0 0040  218          move.b    D0,4194322
080000D4  0012      
                     219   Timer_ISR_7:
080000D6  4E75       220          rts
                     221   ; }
                     222   ; }
                     223   ; /*****************************************************************************************
                     224   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     225   ; **  Add your code here to poll Status register and clear interrupt
                     226   ; *****************************************************************************************/
                     227   ; void ACIA_ISR()
                     228   ; {}
                     229   _ACIA_ISR:
080000D8  4E75       230          rts
                     231   ; /***************************************************************************************
                     232   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     233   ; **  Add your code here to poll Status register and clear interrupt
                     234   ; *****************************************************************************************/
                     235   ; void PIA_ISR()
                     236   ; {}
                     237   _PIA_ISR:
080000DA  4E75       238          rts
                     239   ; /***********************************************************************************
                     240   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     241   ; ************************************************************************************/
                     242   ; void Key2PressISR()
                     243   ; {}
                     244   _Key2PressISR:
080000DC  4E75       245          rts
                     246   ; /***********************************************************************************
                     247   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     248   ; ************************************************************************************/
                     249   ; void Key1PressISR()
                     250   ; {}
                     251   _Key1PressISR:
080000DE  4E75       252          rts
                     253   ; /************************************************************************************
                     254   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     255   ; ************************************************************************************/
                     256   ; void Wait1ms(void)
                     257   ; {
                     258   _Wait1ms:
080000E0  2F02       259          move.l    D2,-(A7)
                     260   ; int  i ;
                     261   ; for(i = 0; i < 1000; i ++)
080000E2  4282       262          clr.l     D2
                     263   Wait1ms_1:
080000E4  0C82 0000  264          cmp.l     #1000,D2
080000E8  03E8      
080000EA  6C04       265          bge.s     Wait1ms_3
080000EC  5282       266          addq.l    #1,D2
080000EE  60F4       267          bra       Wait1ms_1
                     268   Wait1ms_3:
080000F0  241F       269          move.l    (A7)+,D2
080000F2  4E75       270          rts
                     271   ; ;
                     272   ; }
                     273   ; /************************************************************************************
                     274   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     275   ; **************************************************************************************/
                     276   ; void Wait3ms(void)
                     277   ; {
                     278   _Wait3ms:
080000F4  2F02       279          move.l    D2,-(A7)
                     280   ; int i ;
                     281   ; for(i = 0; i < 3; i++)
080000F6  4282       282          clr.l     D2
                     283   Wait3ms_1:
080000F8  0C82 0000  284          cmp.l     #3,D2
080000FC  0003      
080000FE  6C0A       285          bge.s     Wait3ms_3
                     286   ; Wait1ms() ;
08000100  4EB9 0800  287          jsr       _Wait1ms
08000104  00E0      
08000106  5282       288          addq.l    #1,D2
08000108  60EE       289          bra       Wait3ms_1
                     290   Wait3ms_3:
0800010A  241F       291          move.l    (A7)+,D2
0800010C  4E75       292          rts
                     293   ; }
                     294   ; /*********************************************************************************************
                     295   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     296   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     297   ; *********************************************************************************************/
                     298   ; void Init_LCD(void)
                     299   ; {
                     300   _Init_LCD:
                     301   ; LCDcommand = 0x0c ;
0800010E  13FC 000C  302          move.b    #12,4194336
08000112  0040 0020 
                     303   ; Wait3ms() ;
08000116  4EB9 0800  304          jsr       _Wait3ms
0800011A  00F4      
                     305   ; LCDcommand = 0x38 ;
0800011C  13FC 0038  306          move.b    #56,4194336
08000120  0040 0020 
                     307   ; Wait3ms() ;
08000124  4EB9 0800  308          jsr       _Wait3ms
08000128  00F4      
0800012A  4E75       309          rts
                     310   ; }
                     311   ; /*********************************************************************************************
                     312   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     313   ; *********************************************************************************************/
                     314   ; void Init_RS232(void)
                     315   ; {
                     316   _Init_RS232:
                     317   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
0800012C  13FC 0015  318          move.b    #21,4194368
08000130  0040 0040 
                     319   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
08000134  13FC 0001  320          move.b    #1,4194372
08000138  0040 0044 
0800013C  4E75       321          rts
                     322   ; }
                     323   ; /*********************************************************************************************************
                     324   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     325   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     326   ; **  to allow the board to communicate with HyperTerminal Program
                     327   ; **
                     328   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     329   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     330   ; **  call _putch() also
                     331   ; *********************************************************************************************************/
                     332   ; int _putch( int c)
                     333   ; {
                     334   __putch:
0800013E  4E56 0000  335          link      A6,#0
                     336   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     337   _putch_1:
08000142  1039 0040  338          move.b    4194368,D0
08000146  0040      
08000148  C03C 0002  339          and.b     #2,D0
0800014C  0C00 0002  340          cmp.b     #2,D0
08000150  6702       341          beq.s     _putch_3
08000152  60EE       342          bra       _putch_1
                     343   _putch_3:
                     344   ; ;
                     345   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
08000154  202E 0008  346          move.l    8(A6),D0
08000158  C0BC 0000  347          and.l     #127,D0
0800015C  007F      
0800015E  13C0 0040  348          move.b    D0,4194370
08000162  0042      
                     349   ; return c ;                                              // putchar() expects the character to be returned
08000164  202E 0008  350          move.l    8(A6),D0
08000168  4E5E       351          unlk      A6
0800016A  4E75       352          rts
                     353   ; }
                     354   ; /*********************************************************************************************************
                     355   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     356   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     357   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     358   ; **
                     359   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     360   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     361   ; **  call _getch() also
                     362   ; *********************************************************************************************************/
                     363   ; int _getch( void )
                     364   ; {
                     365   __getch:
0800016C  4E56 FFFC  366          link      A6,#-4
                     367   ; char c ;
                     368   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     369   _getch_1:
08000170  1039 0040  370          move.b    4194368,D0
08000174  0040      
08000176  C03C 0001  371          and.b     #1,D0
0800017A  0C00 0001  372          cmp.b     #1,D0
0800017E  6702       373          beq.s     _getch_3
08000180  60EE       374          bra       _getch_1
                     375   _getch_3:
                     376   ; ;
                     377   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
08000182  1039 0040  378          move.b    4194370,D0
08000186  0042      
08000188  C0BC 0000  379          and.l     #255,D0
0800018C  00FF      
0800018E  C0BC 0000  380          and.l     #127,D0
08000192  007F      
08000194  4E5E       381          unlk      A6
08000196  4E75       382          rts
                     383   ; }
                     384   ; /******************************************************************************
                     385   ; **  Subroutine to output a single character to the 2 row LCD display
                     386   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     387   ; **  current cursor position
                     388   ; *******************************************************************************/
                     389   ; void LCDOutchar(int c)
                     390   ; {
                     391   _LCDOutchar:
08000198  4E56 0000  392          link      A6,#0
                     393   ; LCDdata = (char)(c);
0800019C  202E 0008  394          move.l    8(A6),D0
080001A0  13C0 0040  395          move.b    D0,4194338
080001A4  0022      
                     396   ; Wait1ms() ;
080001A6  4EB9 0800  397          jsr       _Wait1ms
080001AA  00E0      
080001AC  4E5E       398          unlk      A6
080001AE  4E75       399          rts
                     400   ; }
                     401   ; /**********************************************************************************
                     402   ; *subroutine to output a message at the current cursor position of the LCD display
                     403   ; ************************************************************************************/
                     404   ; void LCDOutMessage(char *theMessage)
                     405   ; {
                     406   _LCDOutMessage:
080001B0  4E56 FFFC  407          link      A6,#-4
                     408   ; char c ;
                     409   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     410   LCDOutMessage_1:
080001B4  206E 0008  411          move.l    8(A6),A0
080001B8  52AE 0008  412          addq.l    #1,8(A6)
080001BC  1D50 FFFF  413          move.b    (A0),-1(A6)
080001C0  1010       414          move.b    (A0),D0
080001C2  6714       415          beq.s     LCDOutMessage_3
                     416   ; LCDOutchar(c) ;
080001C4  122E FFFF  417          move.b    -1(A6),D1
080001C8  4881       418          ext.w     D1
080001CA  48C1       419          ext.l     D1
080001CC  2F01       420          move.l    D1,-(A7)
080001CE  4EB9 0800  421          jsr       _LCDOutchar
080001D2  0198      
080001D4  584F       422          addq.w    #4,A7
080001D6  60DC       423          bra       LCDOutMessage_1
                     424   LCDOutMessage_3:
080001D8  4E5E       425          unlk      A6
080001DA  4E75       426          rts
                     427   ; }
                     428   ; /******************************************************************************
                     429   ; *subroutine to clear the line by issuing 24 space characters
                     430   ; *******************************************************************************/
                     431   ; void LCDClearln(void)
                     432   ; {
                     433   _LCDClearln:
080001DC  2F02       434          move.l    D2,-(A7)
                     435   ; int i ;
                     436   ; for(i = 0; i < 24; i ++)
080001DE  4282       437          clr.l     D2
                     438   LCDClearln_1:
080001E0  0C82 0000  439          cmp.l     #24,D2
080001E4  0018      
080001E6  6C10       440          bge.s     LCDClearln_3
                     441   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001E8  4878 0020  442          pea       32
080001EC  4EB9 0800  443          jsr       _LCDOutchar
080001F0  0198      
080001F2  584F       444          addq.w    #4,A7
080001F4  5282       445          addq.l    #1,D2
080001F6  60E8       446          bra       LCDClearln_1
                     447   LCDClearln_3:
080001F8  241F       448          move.l    (A7)+,D2
080001FA  4E75       449          rts
                     450   ; }
                     451   ; /******************************************************************************
                     452   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     453   ; *******************************************************************************/
                     454   ; void LCDLine1Message(char *theMessage)
                     455   ; {
                     456   _LCDLine1Message:
080001FC  4E56 0000  457          link      A6,#0
                     458   ; LCDcommand = 0x80 ;
08000200  13FC 0080  459          move.b    #128,4194336
08000204  0040 0020 
                     460   ; Wait3ms();
08000208  4EB9 0800  461          jsr       _Wait3ms
0800020C  00F4      
                     462   ; LCDClearln() ;
0800020E  4EB9 0800  463          jsr       _LCDClearln
08000212  01DC      
                     464   ; LCDcommand = 0x80 ;
08000214  13FC 0080  465          move.b    #128,4194336
08000218  0040 0020 
                     466   ; Wait3ms() ;
0800021C  4EB9 0800  467          jsr       _Wait3ms
08000220  00F4      
                     468   ; LCDOutMessage(theMessage) ;
08000222  2F2E 0008  469          move.l    8(A6),-(A7)
08000226  4EB9 0800  470          jsr       _LCDOutMessage
0800022A  01B0      
0800022C  584F       471          addq.w    #4,A7
0800022E  4E5E       472          unlk      A6
08000230  4E75       473          rts
                     474   ; }
                     475   ; /******************************************************************************
                     476   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     477   ; *******************************************************************************/
                     478   ; void LCDLine2Message(char *theMessage)
                     479   ; {
                     480   _LCDLine2Message:
08000232  4E56 0000  481          link      A6,#0
                     482   ; LCDcommand = 0xC0 ;
08000236  13FC 00C0  483          move.b    #192,4194336
0800023A  0040 0020 
                     484   ; Wait3ms();
0800023E  4EB9 0800  485          jsr       _Wait3ms
08000242  00F4      
                     486   ; LCDClearln() ;
08000244  4EB9 0800  487          jsr       _LCDClearln
08000248  01DC      
                     488   ; LCDcommand = 0xC0 ;
0800024A  13FC 00C0  489          move.b    #192,4194336
0800024E  0040 0020 
                     490   ; Wait3ms() ;
08000252  4EB9 0800  491          jsr       _Wait3ms
08000256  00F4      
                     492   ; LCDOutMessage(theMessage) ;
08000258  2F2E 0008  493          move.l    8(A6),-(A7)
0800025C  4EB9 0800  494          jsr       _LCDOutMessage
08000260  01B0      
08000262  584F       495          addq.w    #4,A7
08000264  4E5E       496          unlk      A6
08000266  4E75       497          rts
                     498   ; }
                     499   ; /*********************************************************************************************************************************
                     500   ; **  IMPORTANT FUNCTION
                     501   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     502   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     503   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     504   ; **  Calling this function allows you to deal with Interrupts for example
                     505   ; ***********************************************************************************************************************************/
                     506   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     507   ; {
                     508   _InstallExceptionHandler:
08000268  4E56 FFFC  509          link      A6,#-4
                     510   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
0800026C  2D7C 0803  511          move.l    #134414336,-4(A6)
08000270  0000 FFFC 
                     512   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
08000274  206E FFFC  513          move.l    -4(A6),A0
08000278  202E 000C  514          move.l    12(A6),D0
0800027C  E588       515          lsl.l     #2,D0
0800027E  21AE 0008  516          move.l    8(A6),0(A0,D0.L)
08000282  0800      
08000284  4E5E       517          unlk      A6
08000286  4E75       518          rts
                     519   ; }
                     520   ; /*
                     521   ; * Support functions for changing memory contents
                     522   ; */
                     523   ; // converts hex char to 4 bit binary equiv in range 0000-1111 (0-F)
                     524   ; // char assumed to be a valid hex char 0-9, a-f, A-F
                     525   ; char xtod(int c)
                     526   ; {
                     527   _xtod:
08000288  4E56 0000  528          link      A6,#0
0800028C  2F02       529          move.l    D2,-(A7)
0800028E  242E 0008  530          move.l    8(A6),D2
                     531   ; if ((char)(c) <= (char)('9'))
08000292  0C02 0039  532          cmp.b     #57,D2
08000296  6E08       533          bgt.s     xtod_1
                     534   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
08000298  1002       535          move.b    D2,D0
0800029A  0400 0030  536          sub.b     #48,D0
0800029E  6014       537          bra.s     xtod_3
                     538   xtod_1:
                     539   ; else if ((char)(c) > (char)('F'))    // assume lower case
080002A0  0C02 0046  540          cmp.b     #70,D2
080002A4  6F08       541          ble.s     xtod_4
                     542   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
080002A6  1002       543          move.b    D2,D0
080002A8  0400 0057  544          sub.b     #87,D0
080002AC  6006       545          bra.s     xtod_3
                     546   xtod_4:
                     547   ; else
                     548   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
080002AE  1002       549          move.b    D2,D0
080002B0  0400 0037  550          sub.b     #55,D0
                     551   xtod_3:
080002B4  241F       552          move.l    (A7)+,D2
080002B6  4E5E       553          unlk      A6
080002B8  4E75       554          rts
                     555   ; }
                     556   ; int Get2HexDigits(char pat)
                     557   ; {
                     558   _Get2HexDigits:
080002BA  4E56 0000  559          link      A6,#0
080002BE  2F02       560          move.l    D2,-(A7)
                     561   ; register int i = (xtod(pat) << 4) | (xtod(pat));
080002C0  122E 000B  562          move.b    11(A6),D1
080002C4  4881       563          ext.w     D1
080002C6  48C1       564          ext.l     D1
080002C8  2F01       565          move.l    D1,-(A7)
080002CA  4EB9 0800  566          jsr       _xtod
080002CE  0288      
080002D0  584F       567          addq.w    #4,A7
080002D2  C0BC 0000  568          and.l     #255,D0
080002D6  00FF      
080002D8  E980       569          asl.l     #4,D0
080002DA  2F00       570          move.l    D0,-(A7)
080002DC  102E 000B  571          move.b    11(A6),D0
080002E0  4880       572          ext.w     D0
080002E2  48C0       573          ext.l     D0
080002E4  2F00       574          move.l    D0,-(A7)
080002E6  4EB9 0800  575          jsr       _xtod
080002EA  0288      
080002EC  584F       576          addq.w    #4,A7
080002EE  2200       577          move.l    D0,D1
080002F0  201F       578          move.l    (A7)+,D0
080002F2  C2BC 0000  579          and.l     #255,D1
080002F6  00FF      
080002F8  8081       580          or.l      D1,D0
080002FA  2400       581          move.l    D0,D2
                     582   ; //if (CheckSumPtr)
                     583   ; //  *CheckSumPtr += i;
                     584   ; return i;
080002FC  2002       585          move.l    D2,D0
080002FE  241F       586          move.l    (A7)+,D2
08000300  4E5E       587          unlk      A6
08000302  4E75       588          rts
                     589   ; }
                     590   ; int Get4HexDigits(char pat)
                     591   ; {
                     592   _Get4HexDigits:
08000304  4E56 0000  593          link      A6,#0
                     594   ; return (Get2HexDigits(pat) << 8) | (Get2HexDigits(pat));
08000308  122E 000B  595          move.b    11(A6),D1
0800030C  4881       596          ext.w     D1
0800030E  48C1       597          ext.l     D1
08000310  2F01       598          move.l    D1,-(A7)
08000312  4EB9 0800  599          jsr       _Get2HexDigits
08000316  02BA      
08000318  584F       600          addq.w    #4,A7
0800031A  E180       601          asl.l     #8,D0
0800031C  2F00       602          move.l    D0,-(A7)
0800031E  102E 000B  603          move.b    11(A6),D0
08000322  4880       604          ext.w     D0
08000324  48C0       605          ext.l     D0
08000326  2F00       606          move.l    D0,-(A7)
08000328  4EB9 0800  607          jsr       _Get2HexDigits
0800032C  02BA      
0800032E  584F       608          addq.w    #4,A7
08000330  2200       609          move.l    D0,D1
08000332  201F       610          move.l    (A7)+,D0
08000334  8081       611          or.l      D1,D0
08000336  4E5E       612          unlk      A6
08000338  4E75       613          rts
                     614   ; }
                     615   ; int Get8HexDigits(char pat)
                     616   ; {
                     617   _Get8HexDigits:
0800033A  4E56 0000  618          link      A6,#0
                     619   ; return (Get4HexDigits(pat) << 16) | (Get4HexDigits(pat));
0800033E  122E 000B  620          move.b    11(A6),D1
08000342  4881       621          ext.w     D1
08000344  48C1       622          ext.l     D1
08000346  2F01       623          move.l    D1,-(A7)
08000348  4EB9 0800  624          jsr       _Get4HexDigits
0800034C  0304      
0800034E  584F       625          addq.w    #4,A7
08000350  E180       626          asl.l     #8,D0
08000352  E180       627          asl.l     #8,D0
08000354  2F00       628          move.l    D0,-(A7)
08000356  102E 000B  629          move.b    11(A6),D0
0800035A  4880       630          ext.w     D0
0800035C  48C0       631          ext.l     D0
0800035E  2F00       632          move.l    D0,-(A7)
08000360  4EB9 0800  633          jsr       _Get4HexDigits
08000364  0304      
08000366  584F       634          addq.w    #4,A7
08000368  2200       635          move.l    D0,D1
0800036A  201F       636          move.l    (A7)+,D0
0800036C  8081       637          or.l      D1,D0
0800036E  4E5E       638          unlk      A6
08000370  4E75       639          rts
                     640   ; }
                     641   ; int Get7HexDigits(char one, char two, char three, char four, char five, char six, char seven)
                     642   ; {
                     643   _Get7HexDigits:
08000372  4E56 0000  644          link      A6,#0
08000376  48E7 2020  645          movem.l   D2/A2,-(A7)
0800037A  45F9 0800  646          lea       _xtod.L,A2
0800037E  0288      
                     647   ; register int i = (xtod(one) << 24) | (xtod(two) << 20) | (xtod(three) << 16) | (xtod(four) << 12) | (xtod(five) << 8) | (xtod(six) << 4) | (xtod(seven));
08000380  122E 000B  648          move.b    11(A6),D1
08000384  4881       649          ext.w     D1
08000386  48C1       650          ext.l     D1
08000388  2F01       651          move.l    D1,-(A7)
0800038A  4E92       652          jsr       (A2)
0800038C  584F       653          addq.w    #4,A7
0800038E  C0BC 0000  654          and.l     #255,D0
08000392  00FF      
08000394  E180       655          asl.l     #8,D0
08000396  E180       656          asl.l     #8,D0
08000398  E180       657          asl.l     #8,D0
0800039A  2F00       658          move.l    D0,-(A7)
0800039C  102E 000F  659          move.b    15(A6),D0
080003A0  4880       660          ext.w     D0
080003A2  48C0       661          ext.l     D0
080003A4  2F00       662          move.l    D0,-(A7)
080003A6  4E92       663          jsr       (A2)
080003A8  584F       664          addq.w    #4,A7
080003AA  2200       665          move.l    D0,D1
080003AC  201F       666          move.l    (A7)+,D0
080003AE  C2BC 0000  667          and.l     #255,D1
080003B2  00FF      
080003B4  E181       668          asl.l     #8,D1
080003B6  E181       669          asl.l     #8,D1
080003B8  E981       670          asl.l     #4,D1
080003BA  8081       671          or.l      D1,D0
080003BC  2F00       672          move.l    D0,-(A7)
080003BE  102E 0013  673          move.b    19(A6),D0
080003C2  4880       674          ext.w     D0
080003C4  48C0       675          ext.l     D0
080003C6  2F00       676          move.l    D0,-(A7)
080003C8  4E92       677          jsr       (A2)
080003CA  584F       678          addq.w    #4,A7
080003CC  2200       679          move.l    D0,D1
080003CE  201F       680          move.l    (A7)+,D0
080003D0  C2BC 0000  681          and.l     #255,D1
080003D4  00FF      
080003D6  E181       682          asl.l     #8,D1
080003D8  E181       683          asl.l     #8,D1
080003DA  8081       684          or.l      D1,D0
080003DC  2F00       685          move.l    D0,-(A7)
080003DE  102E 0017  686          move.b    23(A6),D0
080003E2  4880       687          ext.w     D0
080003E4  48C0       688          ext.l     D0
080003E6  2F00       689          move.l    D0,-(A7)
080003E8  4E92       690          jsr       (A2)
080003EA  584F       691          addq.w    #4,A7
080003EC  2200       692          move.l    D0,D1
080003EE  201F       693          move.l    (A7)+,D0
080003F0  C2BC 0000  694          and.l     #255,D1
080003F4  00FF      
080003F6  E181       695          asl.l     #8,D1
080003F8  E981       696          asl.l     #4,D1
080003FA  8081       697          or.l      D1,D0
080003FC  2F00       698          move.l    D0,-(A7)
080003FE  102E 001B  699          move.b    27(A6),D0
08000402  4880       700          ext.w     D0
08000404  48C0       701          ext.l     D0
08000406  2F00       702          move.l    D0,-(A7)
08000408  4E92       703          jsr       (A2)
0800040A  584F       704          addq.w    #4,A7
0800040C  2200       705          move.l    D0,D1
0800040E  201F       706          move.l    (A7)+,D0
08000410  C2BC 0000  707          and.l     #255,D1
08000414  00FF      
08000416  E181       708          asl.l     #8,D1
08000418  8081       709          or.l      D1,D0
0800041A  2F00       710          move.l    D0,-(A7)
0800041C  102E 001F  711          move.b    31(A6),D0
08000420  4880       712          ext.w     D0
08000422  48C0       713          ext.l     D0
08000424  2F00       714          move.l    D0,-(A7)
08000426  4E92       715          jsr       (A2)
08000428  584F       716          addq.w    #4,A7
0800042A  2200       717          move.l    D0,D1
0800042C  201F       718          move.l    (A7)+,D0
0800042E  C2BC 0000  719          and.l     #255,D1
08000432  00FF      
08000434  E981       720          asl.l     #4,D1
08000436  8081       721          or.l      D1,D0
08000438  2F00       722          move.l    D0,-(A7)
0800043A  102E 0023  723          move.b    35(A6),D0
0800043E  4880       724          ext.w     D0
08000440  48C0       725          ext.l     D0
08000442  2F00       726          move.l    D0,-(A7)
08000444  4E92       727          jsr       (A2)
08000446  584F       728          addq.w    #4,A7
08000448  2200       729          move.l    D0,D1
0800044A  201F       730          move.l    (A7)+,D0
0800044C  C2BC 0000  731          and.l     #255,D1
08000450  00FF      
08000452  8081       732          or.l      D1,D0
08000454  2400       733          move.l    D0,D2
                     734   ; //if (CheckSumPtr)
                     735   ; //  *CheckSumPtr += i;
                     736   ; return i;
08000456  2002       737          move.l    D2,D0
08000458  4CDF 0404  738          movem.l   (A7)+,D2/A2
0800045C  4E5E       739          unlk      A6
0800045E  4E75       740          rts
                     741   ; }
                     742   ; /* SPI functions */
                     743   ; /******************************************************************************************
                     744   ; ** The following code is for the SPI controller
                     745   ; *******************************************************************************************/
                     746   ; // return true if the SPI has finished transmitting a byte (to say the Flash chip) return false otherwise
                     747   ; // this can be used in a polling algorithm to know when the controller is busy or idle.
                     748   ; int TestForSPITransmitDataComplete(void) {
                     749   _TestForSPITransmitDataComplete:
                     750   ; /* TODO replace 0 below with a test for status register SPIF bit and if set, return true */
                     751   ; return (SPI_Status >= 0x80);
08000460  1039 0040  752          move.b    4227106,D0
08000464  8022      
08000466  C07C 00FF  753          and.w     #255,D0
0800046A  0C40 0080  754          cmp.w     #128,D0
0800046E  6504       755          blo.s     TestForSPITransmitDataComplete_1
08000470  7001       756          moveq     #1,D0
08000472  6002       757          bra.s     TestForSPITransmitDataComplete_2
                     758   TestForSPITransmitDataComplete_1:
08000474  4280       759          clr.l     D0
                     760   TestForSPITransmitDataComplete_2:
08000476  4E75       761          rts
                     762   ; }
                     763   ; /************************************************************************************
                     764   ; ** initialises the SPI controller chip to set speed, interrupt capability etc.
                     765   ; ************************************************************************************/
                     766   ; void SPI_Init(void)
                     767   ; {
                     768   _SPI_Init:
                     769   ; //TODO
                     770   ; //
                     771   ; // Program the SPI Control, EXT, CS and Status registers to initialise the SPI controller
                     772   ; // Don't forget to call this routine from main() before you do anything else with SPI
                     773   ; //
                     774   ; // Here are some settings we want to create
                     775   ; //
                     776   ; // Control Reg     - interrupts disabled, core enabled, Master mode, Polarity and Phase of clock = [0,0], speed =  divide by 32 = approx 700Khz
                     777   ; // Ext Reg         - in conjunction with control reg, sets speed above and also sets interrupt flag after every completed transfer (each byte)
                     778   ; // SPI_CS Reg      - control selection of slave SPI chips via their CS# signals
                     779   ; // Status Reg      - status of SPI controller chip and used to clear any write collision and interrupt on transmit complete flag
                     780   ; /* setting up control register */
                     781   ; if ((SPI_Control & 0x20) == 0)
08000478  1039 0040  782          move.b    4227104,D0
0800047C  8020      
0800047E  C03C 0020  783          and.b     #32,D0
08000482  660A       784          bne.s     SPI_Init_1
                     785   ; SPI_Control = 0x53; //writing a 0 to reserved bit at position 5
08000484  13FC 0053  786          move.b    #83,4227104
08000488  0040 8020 
0800048C  6008       787          bra.s     SPI_Init_2
                     788   SPI_Init_1:
                     789   ; else
                     790   ; SPI_Control = 0x73; //writing a 1 to reserved bit at position 5
0800048E  13FC 0073  791          move.b    #115,4227104
08000492  0040 8020 
                     792   SPI_Init_2:
                     793   ; /* setting up extension register */
                     794   ; SPI_Ext = SPI_Ext & 0x3c;
08000496  1039 0040  795          move.b    4227110,D0
0800049A  8026      
0800049C  C03C 003C  796          and.b     #60,D0
080004A0  13C0 0040  797          move.b    D0,4227110
080004A4  8026      
                     798   ; /* enable chip */
                     799   ; // Enable_SPI_CS();
                     800   ; Disable_SPI_CS(); //change to disable
080004A6  13FC 00FF  801          move.b    #255,4227112
080004AA  0040 8028 
                     802   ; /* setting up status register */
                     803   ; // SPI_Status = SPI_Status & 0x3f;
                     804   ; SPI_Status = 0xff;
080004AE  13FC 00FF  805          move.b    #255,4227106
080004B2  0040 8022 
080004B6  4E75       806          rts
                     807   ; //TODO: figure out what value to write to reserved bits, is there a way to maintain the value of the reerved bit?
                     808   ; //TODO: How to write to individual bit positions
                     809   ; //assume data can be changed in such a way such that the reserved bits are not updated, may need to read the data first
                     810   ; }
                     811   ; /************************************************************************************
                     812   ; ** return ONLY when the SPI controller has finished transmitting a byte
                     813   ; ************************************************************************************/
                     814   ; void WaitForSPITransmitComplete(void)
                     815   ; {
                     816   _WaitForSPITransmitComplete:
                     817   ; // TODO : poll the status register SPIF bit looking for completion of transmission
                     818   ; // once transmission is complete, clear the write collision and interrupt on transmit complete flags in the status register (read documentation)
                     819   ; // just in case they were set
                     820   ; /* loop for polling */
                     821   ; while (TestForSPITransmitDataComplete() == 0) {
                     822   WaitForSPITransmitComplete_1:
080004B8  4EB9 0800  823          jsr       _TestForSPITransmitDataComplete
080004BC  0460      
080004BE  4A80       824          tst.l     D0
080004C0  6602       825          bne.s     WaitForSPITransmitComplete_3
                     826   ; //do nothing
                     827   ; }
080004C2  60F4       828          bra       WaitForSPITransmitComplete_1
                     829   WaitForSPITransmitComplete_3:
                     830   ; /* clear bits in the status register */
                     831   ; // SPI_Status = SPI_Status & 0x3f;
                     832   ; SPI_Status = 0xff;
080004C4  13FC 00FF  833          move.b    #255,4227106
080004C8  0040 8022 
080004CC  4E75       834          rts
                     835   ; }
                     836   ; /************************************************************************************
                     837   ; ** Write a byte to the SPI flash chip via the controller and returns (reads) whatever was
                     838   ; ** given back by SPI device at the same time (removes the read byte from the FIFO)
                     839   ; ************************************************************************************/
                     840   ; int WriteSPIChar(int c) //change int to char to take into account 1 byte
                     841   ; {
                     842   _WriteSPIChar:
080004CE  4E56 FFFC  843          link      A6,#-4
080004D2  48E7 3C38  844          movem.l   D2/D3/D4/D5/A2/A3/A4,-(A7)
080004D6  45F9 0800  845          lea       _WriteSPI.L,A2
080004DA  073A      
080004DC  47F9 0800  846          lea       _printf.L,A3
080004E0  12FE      
080004E2  49F9 0800  847          lea       _Get2HexDigitsVoid.L,A4
080004E6  0914      
                     848   ; // todo - write the byte in parameter 'c' to the SPI data register, this will start it transmitting to the flash device
                     849   ; // wait for completion of transmission
                     850   ; // return the received data from Flash chip (which may not be relevent depending upon what we are doing)
                     851   ; // by reading fom the SPI controller Data Register.
                     852   ; // note however that in order to get data from an SPI slave device (e.g. flash) chip we have to write a dummy byte to it
                     853   ; //
                     854   ; // modify '0' below to return back read byte from data register
                     855   ; //
                     856   ; int ret, upper, mid, lower, dummy;
                     857   ; // eraseChip();
                     858   ; printf("\r\n\nEnter upper byte: ");
080004E8  4879 0800  859          pea       @m68kus~1_1.L
080004EC  1EA0      
080004EE  4E93       860          jsr       (A3)
080004F0  584F       861          addq.w    #4,A7
                     862   ; upper = Get2HexDigitsVoid();
080004F2  4E94       863          jsr       (A4)
080004F4  2800       864          move.l    D0,D4
                     865   ; printf("\r\n\nUPPER BYTE: %x ", upper);
080004F6  2F04       866          move.l    D4,-(A7)
080004F8  4879 0800  867          pea       @m68kus~1_2.L
080004FC  1EB6      
080004FE  4E93       868          jsr       (A3)
08000500  504F       869          addq.w    #8,A7
                     870   ; printf("\r\n\nEnter mid byte: ");
08000502  4879 0800  871          pea       @m68kus~1_3.L
08000506  1ECA      
08000508  4E93       872          jsr       (A3)
0800050A  584F       873          addq.w    #4,A7
                     874   ; mid = Get2HexDigitsVoid();
0800050C  4E94       875          jsr       (A4)
0800050E  2600       876          move.l    D0,D3
                     877   ; printf("\r\n\nMID BYTE: %x ", mid);
08000510  2F03       878          move.l    D3,-(A7)
08000512  4879 0800  879          pea       @m68kus~1_4.L
08000516  1EDE      
08000518  4E93       880          jsr       (A3)
0800051A  504F       881          addq.w    #8,A7
                     882   ; printf("\r\n\nEnter lower byte: ");
0800051C  4879 0800  883          pea       @m68kus~1_5.L
08000520  1EF0      
08000522  4E93       884          jsr       (A3)
08000524  584F       885          addq.w    #4,A7
                     886   ; lower = Get2HexDigitsVoid();
08000526  4E94       887          jsr       (A4)
08000528  2400       888          move.l    D0,D2
                     889   ; printf("\r\n\nLOWER BYTE: %x ", lower);
0800052A  2F02       890          move.l    D2,-(A7)
0800052C  4879 0800  891          pea       @m68kus~1_6.L
08000530  1F06      
08000532  4E93       892          jsr       (A3)
08000534  504F       893          addq.w    #8,A7
                     894   ; enableWrite();
08000536  4EB9 0800  895          jsr       _enableWrite
0800053A  068E      
                     896   ; //5: write to flash
                     897   ; printf("5: write to flash \n\n");
0800053C  4879 0800  898          pea       @m68kus~1_7.L
08000540  1F1A      
08000542  4E93       899          jsr       (A3)
08000544  584F       900          addq.w    #4,A7
                     901   ; Enable_SPI_CS(); //enable cs#
08000546  13FC 00FE  902          move.b    #254,4227112
0800054A  0040 8028 
                     903   ; WriteSPI(0x02);
0800054E  4878 0002  904          pea       2
08000552  4E92       905          jsr       (A2)
08000554  584F       906          addq.w    #4,A7
                     907   ; WriteSPI(upper);
08000556  2F04       908          move.l    D4,-(A7)
08000558  4E92       909          jsr       (A2)
0800055A  584F       910          addq.w    #4,A7
                     911   ; WriteSPI(mid);
0800055C  2F03       912          move.l    D3,-(A7)
0800055E  4E92       913          jsr       (A2)
08000560  584F       914          addq.w    #4,A7
                     915   ; WriteSPI(lower);
08000562  2F02       916          move.l    D2,-(A7)
08000564  4E92       917          jsr       (A2)
08000566  584F       918          addq.w    #4,A7
                     919   ; WriteSPI(c);
08000568  2F2E 0008  920          move.l    8(A6),-(A7)
0800056C  4E92       921          jsr       (A2)
0800056E  584F       922          addq.w    #4,A7
                     923   ; Disable_SPI_CS(); //disable cs#
08000570  13FC 00FF  924          move.b    #255,4227112
08000574  0040 8028 
                     925   ; pollSPI();
08000578  4EB9 0800  926          jsr       _pollSPI
0800057C  06AC      
                     927   ; //7: reading flash chip for verification
                     928   ; printf("7: reading flash chip for verification \n\n");
0800057E  4879 0800  929          pea       @m68kus~1_8.L
08000582  1F30      
08000584  4E93       930          jsr       (A3)
08000586  584F       931          addq.w    #4,A7
                     932   ; Enable_SPI_CS(); //enable cs#
08000588  13FC 00FE  933          move.b    #254,4227112
0800058C  0040 8028 
                     934   ; WriteSPI(0x03);
08000590  4878 0003  935          pea       3
08000594  4E92       936          jsr       (A2)
08000596  584F       937          addq.w    #4,A7
                     938   ; WriteSPI(upper);
08000598  2F04       939          move.l    D4,-(A7)
0800059A  4E92       940          jsr       (A2)
0800059C  584F       941          addq.w    #4,A7
                     942   ; WriteSPI(mid);
0800059E  2F03       943          move.l    D3,-(A7)
080005A0  4E92       944          jsr       (A2)
080005A2  584F       945          addq.w    #4,A7
                     946   ; WriteSPI(lower);
080005A4  2F02       947          move.l    D2,-(A7)
080005A6  4E92       948          jsr       (A2)
080005A8  584F       949          addq.w    #4,A7
                     950   ; /* collecting data into var */
                     951   ; ret = WriteSPI(0xee);
080005AA  4878 00EE  952          pea       238
080005AE  4E92       953          jsr       (A2)
080005B0  584F       954          addq.w    #4,A7
080005B2  2A00       955          move.l    D0,D5
                     956   ; printf("\r\n\nret: %x ", ret);
080005B4  2F05       957          move.l    D5,-(A7)
080005B6  4879 0800  958          pea       @m68kus~1_9.L
080005BA  1F5A      
080005BC  4E93       959          jsr       (A3)
080005BE  504F       960          addq.w    #8,A7
                     961   ; Disable_SPI_CS(); // disable cs#
080005C0  13FC 00FF  962          move.b    #255,4227112
080005C4  0040 8028 
                     963   ; return ret;
080005C8  2005       964          move.l    D5,D0
080005CA  4CDF 1C3C  965          movem.l   (A7)+,D2/D3/D4/D5/A2/A3/A4
080005CE  4E5E       966          unlk      A6
080005D0  4E75       967          rts
                     968   ; }
                     969   ; int readSPI(void) {
                     970   _readSPI:
080005D2  4E56 FFFC  971          link      A6,#-4
080005D6  48E7 3C38  972          movem.l   D2/D3/D4/D5/A2/A3/A4,-(A7)
080005DA  45F9 0800  973          lea       _printf.L,A2
080005DE  12FE      
080005E0  47F9 0800  974          lea       _WriteSPI.L,A3
080005E4  073A      
080005E6  49F9 0800  975          lea       _Get2HexDigitsVoid.L,A4
080005EA  0914      
                     976   ; int ret, upper, mid, lower, dummy;
                     977   ; printf("\r\n\nEnter upper byte:");
080005EC  4879 0800  978          pea       @m68kus~1_10.L
080005F0  1F66      
080005F2  4E92       979          jsr       (A2)
080005F4  584F       980          addq.w    #4,A7
                     981   ; upper = Get2HexDigitsVoid();
080005F6  4E94       982          jsr       (A4)
080005F8  2A00       983          move.l    D0,D5
                     984   ; printf("\r\n\nUPPER BYTE: %x", upper);
080005FA  2F05       985          move.l    D5,-(A7)
080005FC  4879 0800  986          pea       @m68kus~1_11.L
08000600  1F7C      
08000602  4E92       987          jsr       (A2)
08000604  504F       988          addq.w    #8,A7
                     989   ; printf("\r\n\nEnter mid byte:");
08000606  4879 0800  990          pea       @m68kus~1_12.L
0800060A  1F8E      
0800060C  4E92       991          jsr       (A2)
0800060E  584F       992          addq.w    #4,A7
                     993   ; mid = Get2HexDigitsVoid();
08000610  4E94       994          jsr       (A4)
08000612  2800       995          move.l    D0,D4
                     996   ; printf("\r\n\nMID BYTE: %x", mid);
08000614  2F04       997          move.l    D4,-(A7)
08000616  4879 0800  998          pea       @m68kus~1_13.L
0800061A  1FA2      
0800061C  4E92       999          jsr       (A2)
0800061E  504F      1000          addq.w    #8,A7
                    1001   ; printf("\r\n\nEnter lower byte:");
08000620  4879 0800 1002          pea       @m68kus~1_14.L
08000624  1FB2      
08000626  4E92      1003          jsr       (A2)
08000628  584F      1004          addq.w    #4,A7
                    1005   ; lower = Get2HexDigitsVoid();
0800062A  4E94      1006          jsr       (A4)
0800062C  2600      1007          move.l    D0,D3
                    1008   ; printf("\r\n\nLOWER BYTE: %x", lower);
0800062E  2F03      1009          move.l    D3,-(A7)
08000630  4879 0800 1010          pea       @m68kus~1_15.L
08000634  1FC8      
08000636  4E92      1011          jsr       (A2)
08000638  504F      1012          addq.w    #8,A7
                    1013   ; // reading flash chip for verification
                    1014   ; printf("\r\nReading flash chip for verification");
0800063A  4879 0800 1015          pea       @m68kus~1_16.L
0800063E  1FDA      
08000640  4E92      1016          jsr       (A2)
08000642  584F      1017          addq.w    #4,A7
                    1018   ; Enable_SPI_CS(); //enable cs#
08000644  13FC 00FE 1019          move.b    #254,4227112
08000648  0040 8028 
                    1020   ; WriteSPI(0x03);
0800064C  4878 0003 1021          pea       3
08000650  4E93      1022          jsr       (A3)
08000652  584F      1023          addq.w    #4,A7
                    1024   ; WriteSPI(upper);
08000654  2F05      1025          move.l    D5,-(A7)
08000656  4E93      1026          jsr       (A3)
08000658  584F      1027          addq.w    #4,A7
                    1028   ; WriteSPI(mid);
0800065A  2F04      1029          move.l    D4,-(A7)
0800065C  4E93      1030          jsr       (A3)
0800065E  584F      1031          addq.w    #4,A7
                    1032   ; WriteSPI(lower);
08000660  2F03      1033          move.l    D3,-(A7)
08000662  4E93      1034          jsr       (A3)
08000664  584F      1035          addq.w    #4,A7
                    1036   ; /* collecting data into var */
                    1037   ; ret = WriteSPI(0xee);
08000666  4878 00EE 1038          pea       238
0800066A  4E93      1039          jsr       (A3)
0800066C  584F      1040          addq.w    #4,A7
0800066E  2400      1041          move.l    D0,D2
                    1042   ; printf("\r\n\nret: %x ", ret);
08000670  2F02      1043          move.l    D2,-(A7)
08000672  4879 0800 1044          pea       @m68kus~1_9.L
08000676  1F5A      
08000678  4E92      1045          jsr       (A2)
0800067A  504F      1046          addq.w    #8,A7
                    1047   ; Disable_SPI_CS(); // disable cs#
0800067C  13FC 00FF 1048          move.b    #255,4227112
08000680  0040 8028 
                    1049   ; return ret;
08000684  2002      1050          move.l    D2,D0
08000686  4CDF 1C3C 1051          movem.l   (A7)+,D2/D3/D4/D5/A2/A3/A4
0800068A  4E5E      1052          unlk      A6
0800068C  4E75      1053          rts
                    1054   ; }
                    1055   ; void enableWrite(void) {
                    1056   _enableWrite:
                    1057   ; //enable write
                    1058   ; Enable_SPI_CS(); //enable cs#
0800068E  13FC 00FE 1059          move.b    #254,4227112
08000692  0040 8028 
                    1060   ; WriteSPI(0x06);
08000696  4878 0006 1061          pea       6
0800069A  4EB9 0800 1062          jsr       _WriteSPI
0800069E  073A      
080006A0  584F      1063          addq.w    #4,A7
                    1064   ; Disable_SPI_CS(); //disable cs#
080006A2  13FC 00FF 1065          move.b    #255,4227112
080006A6  0040 8028 
080006AA  4E75      1066          rts
                    1067   ; }
                    1068   ; void pollSPI(void) {
                    1069   _pollSPI:
080006AC  48E7 2020 1070          movem.l   D2/A2,-(A7)
080006B0  45F9 0800 1071          lea       _WriteSPI.L,A2
080006B4  073A      
                    1072   ; int status;
                    1073   ; //poll flash chip to see if rdy
                    1074   ; printf("\r\nPolling flash chip to see if ready \n\n");
080006B6  4879 0800 1075          pea       @m68kus~1_17.L
080006BA  2000      
080006BC  4EB9 0800 1076          jsr       _printf
080006C0  12FE      
080006C2  584F      1077          addq.w    #4,A7
                    1078   ; Enable_SPI_CS(); //enable cs#
080006C4  13FC 00FE 1079          move.b    #254,4227112
080006C8  0040 8028 
                    1080   ; WriteSPI(0x05);
080006CC  4878 0005 1081          pea       5
080006D0  4E92      1082          jsr       (A2)
080006D2  584F      1083          addq.w    #4,A7
                    1084   ; status = WriteSPI(0xee);
080006D4  4878 00EE 1085          pea       238
080006D8  4E92      1086          jsr       (A2)
080006DA  584F      1087          addq.w    #4,A7
080006DC  2400      1088          move.l    D0,D2
                    1089   ; while (status & 0x01 == 1) {
                    1090   pollSPI_1:
080006DE  2002      1091          move.l    D2,D0
080006E0  C0BC 0000 1092          and.l     #1,D0
080006E4  0001      
080006E6  670C      1093          beq.s     pollSPI_3
                    1094   ; status = WriteSPI(0xee);
080006E8  4878 00EE 1095          pea       238
080006EC  4E92      1096          jsr       (A2)
080006EE  584F      1097          addq.w    #4,A7
080006F0  2400      1098          move.l    D0,D2
080006F2  60EA      1099          bra       pollSPI_1
                    1100   pollSPI_3:
                    1101   ; }
                    1102   ; Disable_SPI_CS(); // disable cs#
080006F4  13FC 00FF 1103          move.b    #255,4227112
080006F8  0040 8028 
080006FC  4CDF 0404 1104          movem.l   (A7)+,D2/A2
08000700  4E75      1105          rts
                    1106   ; }
                    1107   ; void eraseChip(void) {
                    1108   _eraseChip:
                    1109   ; //enable write
                    1110   ; enableWrite();
08000702  4EB9 0800 1111          jsr       _enableWrite
08000706  068E      
                    1112   ; //erase chip
                    1113   ; printf("\r\nErase chip");
08000708  4879 0800 1114          pea       @m68kus~1_18.L
0800070C  2028      
0800070E  4EB9 0800 1115          jsr       _printf
08000712  12FE      
08000714  584F      1116          addq.w    #4,A7
                    1117   ; Enable_SPI_CS(); //enable cs#
08000716  13FC 00FE 1118          move.b    #254,4227112
0800071A  0040 8028 
                    1119   ; WriteSPI(0xc7);
0800071E  4878 00C7 1120          pea       199
08000722  4EB9 0800 1121          jsr       _WriteSPI
08000726  073A      
08000728  584F      1122          addq.w    #4,A7
                    1123   ; Disable_SPI_CS(); // disable cs#
0800072A  13FC 00FF 1124          move.b    #255,4227112
0800072E  0040 8028 
                    1125   ; //poll spi
                    1126   ; pollSPI();
08000732  4EB9 0800 1127          jsr       _pollSPI
08000736  06AC      
08000738  4E75      1128          rts
                    1129   ; }
                    1130   ; int WriteSPI(int num) {
                    1131   _WriteSPI:
0800073A  4E56 0000 1132          link      A6,#0
                    1133   ; SPI_Data = num;
0800073E  202E 0008 1134          move.l    8(A6),D0
08000742  13C0 0040 1135          move.b    D0,4227108
08000746  8024      
                    1136   ; WaitForSPITransmitComplete();
08000748  4EB9 0800 1137          jsr       _WaitForSPITransmitComplete
0800074C  04B8      
                    1138   ; return SPI_Data;
0800074E  1039 0040 1139          move.b    4227108,D0
08000752  8024      
08000754  C0BC 0000 1140          and.l     #255,D0
08000758  00FF      
0800075A  4E5E      1141          unlk      A6
0800075C  4E75      1142          rts
                    1143   ; }
                    1144   ; void menueSPI(void) {
                    1145   _menueSPI:
0800075E  48E7 3820 1146          movem.l   D2/D3/D4/A2,-(A7)
08000762  45F9 0800 1147          lea       _printf.L,A2
08000766  12FE      
                    1148   ; int option, val_to_pass, ret;
                    1149   ; // char pat;
                    1150   ; while (1) {
                    1151   menueSPI_1:
                    1152   ; scanflush();
08000768  4EB9 0800 1153          jsr       _scanflush
0800076C  0CF2      
                    1154   ; printf("\r\n\nEnter SPI operation(1 - Erase Chip, 2 - Write to SPI, 3 - Read from SPI): ");
0800076E  4879 0800 1155          pea       @m68kus~1_19.L
08000772  2036      
08000774  4E92      1156          jsr       (A2)
08000776  584F      1157          addq.w    #4,A7
                    1158   ; option = xtod(_getch());
08000778  2F00      1159          move.l    D0,-(A7)
0800077A  4EB9 0800 1160          jsr       __getch
0800077E  016C      
08000780  2200      1161          move.l    D0,D1
08000782  201F      1162          move.l    (A7)+,D0
08000784  2F01      1163          move.l    D1,-(A7)
08000786  4EB9 0800 1164          jsr       _xtod
0800078A  0288      
0800078C  584F      1165          addq.w    #4,A7
0800078E  C0BC 0000 1166          and.l     #255,D0
08000792  00FF      
08000794  2800      1167          move.l    D0,D4
                    1168   ; printf("\r\n\nSPI operation: %x ", option);
08000796  2F04      1169          move.l    D4,-(A7)
08000798  4879 0800 1170          pea       @m68kus~1_20.L
0800079C  2084      
0800079E  4E92      1171          jsr       (A2)
080007A0  504F      1172          addq.w    #8,A7
                    1173   ; switch (option) {
080007A2  0C84 0000 1174          cmp.l     #2,D4
080007A6  0002      
080007A8  673A      1175          beq.s     menueSPI_7
080007AA  6E0C      1176          bgt.s     menueSPI_10
080007AC  0C84 0000 1177          cmp.l     #1,D4
080007B0  0001      
080007B2  6712      1178          beq.s     menueSPI_6
080007B4  6000 00A6 1179          bra       menueSPI_4
                    1180   menueSPI_10:
080007B8  0C84 0000 1181          cmp.l     #3,D4
080007BC  0003      
080007BE  6700 0072 1182          beq       menueSPI_8
080007C2  6000 0098 1183          bra       menueSPI_4
                    1184   menueSPI_6:
                    1185   ; case 1:
                    1186   ; printf("\r\nChip erase operation selected");
080007C6  4879 0800 1187          pea       @m68kus~1_21.L
080007CA  209A      
080007CC  4E92      1188          jsr       (A2)
080007CE  584F      1189          addq.w    #4,A7
                    1190   ; eraseChip();
080007D0  4EB9 0800 1191          jsr       _eraseChip
080007D4  0702      
                    1192   ; printf("\r\nEnd of erase operation ...");
080007D6  4879 0800 1193          pea       @m68kus~1_22.L
080007DA  20BA      
080007DC  4E92      1194          jsr       (A2)
080007DE  584F      1195          addq.w    #4,A7
                    1196   ; break;
080007E0  6000 008E 1197          bra       menueSPI_5
                    1198   menueSPI_7:
                    1199   ; case 2:
                    1200   ; printf("\r\n\nWrite operation selected \n\n");
080007E4  4879 0800 1201          pea       @m68kus~1_23.L
080007E8  20D8      
080007EA  4E92      1202          jsr       (A2)
080007EC  584F      1203          addq.w    #4,A7
                    1204   ; printf("\r\n\nEnter a value for write: ");
080007EE  4879 0800 1205          pea       @m68kus~1_24.L
080007F2  20F8      
080007F4  4E92      1206          jsr       (A2)
080007F6  584F      1207          addq.w    #4,A7
                    1208   ; val_to_pass = Get2HexDigitsVoid();
080007F8  4EB9 0800 1209          jsr       _Get2HexDigitsVoid
080007FC  0914      
080007FE  2600      1210          move.l    D0,D3
                    1211   ; printf("\r\nValue to write: %x", val_to_pass);
08000800  2F03      1212          move.l    D3,-(A7)
08000802  4879 0800 1213          pea       @m68kus~1_25.L
08000806  2116      
08000808  4E92      1214          jsr       (A2)
0800080A  504F      1215          addq.w    #8,A7
                    1216   ; ret = WriteSPIChar(val_to_pass);
0800080C  2F03      1217          move.l    D3,-(A7)
0800080E  4EB9 0800 1218          jsr       _WriteSPIChar
08000812  04CE      
08000814  584F      1219          addq.w    #4,A7
08000816  2400      1220          move.l    D0,D2
                    1221   ; printf("\r\nValue returned: %x", ret);
08000818  2F02      1222          move.l    D2,-(A7)
0800081A  4879 0800 1223          pea       @m68kus~1_26.L
0800081E  212C      
08000820  4E92      1224          jsr       (A2)
08000822  504F      1225          addq.w    #8,A7
                    1226   ; printf("\r\nend of write operation ...");
08000824  4879 0800 1227          pea       @m68kus~1_27.L
08000828  2142      
0800082A  4E92      1228          jsr       (A2)
0800082C  584F      1229          addq.w    #4,A7
                    1230   ; break;
0800082E  6000 0040 1231          bra       menueSPI_5
                    1232   menueSPI_8:
                    1233   ; case 3:
                    1234   ; printf("\r\n\nRead operation selected");
08000832  4879 0800 1235          pea       @m68kus~1_28.L
08000836  2160      
08000838  4E92      1236          jsr       (A2)
0800083A  584F      1237          addq.w    #4,A7
                    1238   ; ret = readSPI();
0800083C  4EB9 0800 1239          jsr       _readSPI
08000840  05D2      
08000842  2400      1240          move.l    D0,D2
                    1241   ; printf("\r\n\nValue returned: %x ", ret);
08000844  2F02      1242          move.l    D2,-(A7)
08000846  4879 0800 1243          pea       @m68kus~1_29.L
0800084A  217C      
0800084C  4E92      1244          jsr       (A2)
0800084E  504F      1245          addq.w    #8,A7
                    1246   ; printf("\r\n\nend of read operation ...");
08000850  4879 0800 1247          pea       @m68kus~1_30.L
08000854  2194      
08000856  4E92      1248          jsr       (A2)
08000858  584F      1249          addq.w    #4,A7
                    1250   ; break;
0800085A  6014      1251          bra.s     menueSPI_5
                    1252   menueSPI_4:
                    1253   ; default:
                    1254   ; printf("\r\n\nInvalid operation ...");
0800085C  4879 0800 1255          pea       @m68kus~1_31.L
08000860  21B2      
08000862  4E92      1256          jsr       (A2)
08000864  584F      1257          addq.w    #4,A7
                    1258   ; printf("\r\n\nTry again!!!!!");
08000866  4879 0800 1259          pea       @m68kus~1_32.L
0800086A  21CC      
0800086C  4E92      1260          jsr       (A2)
0800086E  584F      1261          addq.w    #4,A7
                    1262   menueSPI_5:
08000870  6000 FEF6 1263          bra       menueSPI_1
                    1264   ; }
                    1265   ; }
                    1266   ; }
                    1267   ; void executeSPI(void) {
                    1268   _executeSPI:
                    1269   ; printf("\r\nIntializing SPI\n");
08000874  4879 0800 1270          pea       @m68kus~1_33.L
08000878  21DE      
0800087A  4EB9 0800 1271          jsr       _printf
0800087E  12FE      
08000880  584F      1272          addq.w    #4,A7
                    1273   ; SPI_Init();
08000882  4EB9 0800 1274          jsr       _SPI_Init
08000886  0478      
                    1275   ; menueSPI();
08000888  4EB9 0800 1276          jsr       _menueSPI
0800088C  075E      
0800088E  4E75      1277          rts
                    1278   ; }
                    1279   ; void readID(void) {
                    1280   _readID:
08000890  4E56 FFF0 1281          link      A6,#-16
08000894  48E7 0030 1282          movem.l   A2/A3,-(A7)
08000898  45F9 0800 1283          lea       _WriteSPI.L,A2
0800089C  073A      
0800089E  47F9 0800 1284          lea       _printf.L,A3
080008A2  12FE      
                    1285   ; int man, dev, dev2;
                    1286   ; int dummy;
                    1287   ; printf("READING ID !!!!!!  \n\n");
080008A4  4879 0800 1288          pea       @m68kus~1_34.L
080008A8  21F2      
080008AA  4E93      1289          jsr       (A3)
080008AC  584F      1290          addq.w    #4,A7
                    1291   ; Enable_SPI_CS(); //enable cs#
080008AE  13FC 00FE 1292          move.b    #254,4227112
080008B2  0040 8028 
                    1293   ; WriteSPI(0x90);
080008B6  4878 0090 1294          pea       144
080008BA  4E92      1295          jsr       (A2)
080008BC  584F      1296          addq.w    #4,A7
                    1297   ; WriteSPI(0x00);
080008BE  42A7      1298          clr.l     -(A7)
080008C0  4E92      1299          jsr       (A2)
080008C2  584F      1300          addq.w    #4,A7
                    1301   ; WriteSPI(0x00);
080008C4  42A7      1302          clr.l     -(A7)
080008C6  4E92      1303          jsr       (A2)
080008C8  584F      1304          addq.w    #4,A7
                    1305   ; WriteSPI(0x00);
080008CA  42A7      1306          clr.l     -(A7)
080008CC  4E92      1307          jsr       (A2)
080008CE  584F      1308          addq.w    #4,A7
                    1309   ; man = WriteSPI(0xee);
080008D0  4878 00EE 1310          pea       238
080008D4  4E92      1311          jsr       (A2)
080008D6  584F      1312          addq.w    #4,A7
080008D8  2D40 FFF0 1313          move.l    D0,-16(A6)
                    1314   ; dev = WriteSPI(0xee);
080008DC  4878 00EE 1315          pea       238
080008E0  4E92      1316          jsr       (A2)
080008E2  584F      1317          addq.w    #4,A7
080008E4  2D40 FFF4 1318          move.l    D0,-12(A6)
                    1319   ; Disable_SPI_CS(); //disable cs#
080008E8  13FC 00FF 1320          move.b    #255,4227112
080008EC  0040 8028 
                    1321   ; printf("\r\n\nMan: %x ", man);
080008F0  2F2E FFF0 1322          move.l    -16(A6),-(A7)
080008F4  4879 0800 1323          pea       @m68kus~1_35.L
080008F8  2208      
080008FA  4E93      1324          jsr       (A3)
080008FC  504F      1325          addq.w    #8,A7
                    1326   ; printf("\r\n\nDev: %x ", dev);
080008FE  2F2E FFF4 1327          move.l    -12(A6),-(A7)
08000902  4879 0800 1328          pea       @m68kus~1_36.L
08000906  2214      
08000908  4E93      1329          jsr       (A3)
0800090A  504F      1330          addq.w    #8,A7
0800090C  4CDF 0C00 1331          movem.l   (A7)+,A2/A3
08000910  4E5E      1332          unlk      A6
08000912  4E75      1333          rts
                    1334   ; }
                    1335   ; /* end */
                    1336   ; /* other spare functions */
                    1337   ; int Get2HexDigitsVoid(void)
                    1338   ; {
                    1339   _Get2HexDigitsVoid:
08000914  2F02      1340          move.l    D2,-(A7)
                    1341   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000916  2F00      1342          move.l    D0,-(A7)
08000918  4EB9 0800 1343          jsr       __getch
0800091C  016C      
0800091E  2200      1344          move.l    D0,D1
08000920  201F      1345          move.l    (A7)+,D0
08000922  2F01      1346          move.l    D1,-(A7)
08000924  4EB9 0800 1347          jsr       _xtod
08000928  0288      
0800092A  584F      1348          addq.w    #4,A7
0800092C  C0BC 0000 1349          and.l     #255,D0
08000930  00FF      
08000932  E980      1350          asl.l     #4,D0
08000934  2F00      1351          move.l    D0,-(A7)
08000936  2F01      1352          move.l    D1,-(A7)
08000938  4EB9 0800 1353          jsr       __getch
0800093C  016C      
0800093E  221F      1354          move.l    (A7)+,D1
08000940  2F00      1355          move.l    D0,-(A7)
08000942  4EB9 0800 1356          jsr       _xtod
08000946  0288      
08000948  584F      1357          addq.w    #4,A7
0800094A  2200      1358          move.l    D0,D1
0800094C  201F      1359          move.l    (A7)+,D0
0800094E  C2BC 0000 1360          and.l     #255,D1
08000952  00FF      
08000954  8081      1361          or.l      D1,D0
08000956  2400      1362          move.l    D0,D2
                    1363   ; return i;
08000958  2002      1364          move.l    D2,D0
0800095A  241F      1365          move.l    (A7)+,D2
0800095C  4E75      1366          rts
                    1367   ; }
                    1368   ; /******************************************************************************************************************************
                    1369   ; * Start of user program
                    1370   ; ******************************************************************************************************************************/
                    1371   ; void main()
                    1372   ; {
                    1373   _main:
0800095E  4E56 FF2C 1374          link      A6,#-212
08000962  2F0A      1375          move.l    A2,-(A7)
08000964  45F9 0800 1376          lea       _InstallExceptionHandler.L,A2
08000968  0268      
                    1377   ; unsigned int row, i=0, count=0, counter1=1;
0800096A  42AE FF30 1378          clr.l     -208(A6)
0800096E  42AE FF34 1379          clr.l     -204(A6)
08000972  2D7C 0000 1380          move.l    #1,-200(A6)
08000976  0001 FF38 
                    1381   ; char c, text[150] ;
                    1382   ; int PassFailFlag = 1 ;
0800097A  2D7C 0000 1383          move.l    #1,-44(A6)
0800097E  0001 FFD4 
                    1384   ; int test_config=0;
08000982  42AE FFD8 1385          clr.l     -40(A6)
                    1386   ; int test_pattern=0;
08000986  42AE FFDC 1387          clr.l     -36(A6)
                    1388   ; char start_addr[7];
                    1389   ; int start_val = 0;
0800098A  42AE FFE8 1390          clr.l     -24(A6)
                    1391   ; char end_addr[7];
                    1392   ; int end_val = 0;
0800098E  42AE FFF4 1393          clr.l     -12(A6)
                    1394   ; int val_to_pass, ret;
                    1395   ; i = x = y = z = PortA_Count =0;
08000992  42B9 0800 1396          clr.l     _PortA_Count.L
08000996  2350      
08000998  42B9 0800 1397          clr.l     _z.L
0800099C  234C      
0800099E  42B9 0800 1398          clr.l     _y.L
080009A2  2348      
080009A4  42B9 0800 1399          clr.l     _x.L
080009A8  2344      
080009AA  42AE FF30 1400          clr.l     -208(A6)
                    1401   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
080009AE  4239 0800 1402          clr.b     _Timer4Count.L
080009B2  235A      
080009B4  4239 0800 1403          clr.b     _Timer3Count.L
080009B8  2358      
080009BA  4239 0800 1404          clr.b     _Timer2Count.L
080009BE  2356      
080009C0  4239 0800 1405          clr.b     _Timer1Count.L
080009C4  2354      
                    1406   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
080009C6  4878 0019 1407          pea       25
080009CA  4879 0800 1408          pea       _PIA_ISR.L
080009CE  00DA      
080009D0  4E92      1409          jsr       (A2)
080009D2  504F      1410          addq.w    #8,A7
                    1411   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
080009D4  4878 001A 1412          pea       26
080009D8  4879 0800 1413          pea       _ACIA_ISR.L
080009DC  00D8      
080009DE  4E92      1414          jsr       (A2)
080009E0  504F      1415          addq.w    #8,A7
                    1416   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
080009E2  4878 001B 1417          pea       27
080009E6  4879 0800 1418          pea       _Timer_ISR.L
080009EA  003E      
080009EC  4E92      1419          jsr       (A2)
080009EE  504F      1420          addq.w    #8,A7
                    1421   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
080009F0  4878 001C 1422          pea       28
080009F4  4879 0800 1423          pea       _Key2PressISR.L
080009F8  00DC      
080009FA  4E92      1424          jsr       (A2)
080009FC  504F      1425          addq.w    #8,A7
                    1426   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
080009FE  4878 001D 1427          pea       29
08000A02  4879 0800 1428          pea       _Key1PressISR.L
08000A06  00DE      
08000A08  4E92      1429          jsr       (A2)
08000A0A  504F      1430          addq.w    #8,A7
                    1431   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08000A0C  13FC 0010 1432          move.b    #16,4194352
08000A10  0040 0030 
                    1433   ; Timer2Data = 0x20;
08000A14  13FC 0020 1434          move.b    #32,4194356
08000A18  0040 0034 
                    1435   ; Timer3Data = 0x15;
08000A1C  13FC 0015 1436          move.b    #21,4194360
08000A20  0040 0038 
                    1437   ; Timer4Data = 0x25;
08000A24  13FC 0025 1438          move.b    #37,4194364
08000A28  0040 003C 
                    1439   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08000A2C  13FC 0003 1440          move.b    #3,4194354
08000A30  0040 0032 
                    1441   ; Timer2Control = 3;
08000A34  13FC 0003 1442          move.b    #3,4194358
08000A38  0040 0036 
                    1443   ; Timer3Control = 3;
08000A3C  13FC 0003 1444          move.b    #3,4194362
08000A40  0040 003A 
                    1445   ; Timer4Control = 3;
08000A44  13FC 0003 1446          move.b    #3,4194366
08000A48  0040 003E 
                    1447   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
08000A4C  4EB9 0800 1448          jsr       _Init_LCD
08000A50  010E      
                    1449   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
08000A52  4EB9 0800 1450          jsr       _Init_RS232
08000A56  012C      
                    1451   ; /*************************************************************************************************
                    1452   ; **  Test of scanf function
                    1453   ; *************************************************************************************************/
                    1454   ; scanflush() ;                       // flush any text that may have been typed ahead
08000A58  4EB9 0800 1455          jsr       _scanflush
08000A5C  0CF2      
                    1456   ; /*
                    1457   ; * SPI Program HERE
                    1458   ; */
                    1459   ; executeSPI();
08000A5E  4EB9 0800 1460          jsr       _executeSPI
08000A62  0874      
                    1461   ; while(1)
                    1462   main_1:
08000A64  60FE      1463          bra       main_1
                    1464   ; ;
                    1465   ; // programs should NOT exit as there is nothing to Exit TO !!!!!!
                    1466   ; // There is no OS - just press the reset button to end program and call debug
                    1467   ; }
                    1468   @vsscanf_scanread:
08000A66  4E56 FFFC 1469          link      A6,#-4
08000A6A  48E7 0020 1470          movem.l   A2,-(A7)
08000A6E  45F9 0800 1471          lea       @vsscanf_bufx,A2
08000A72  222C      
08000A74  4AAE 0008 1472          tst.l     8(A6)
08000A78  6722      1473          beq.s     @vsscanf_scanread_1
08000A7A  206E 0008 1474          move.l    8(A6),A0
08000A7E  58AE 0008 1475          addq.l    #4,8(A6)
08000A82  2050      1476          move.l    (A0),A0
08000A84  1010      1477          move.b    (A0),D0
08000A86  4880      1478          ext.w     D0
08000A88  48C0      1479          ext.l     D0
08000A8A  2D40 FFFC 1480          move.l    D0,-4(A6)
08000A8E  6706      1481          beq.s     @vsscanf_scanread_3
08000A90  202E FFFC 1482          move.l    -4(A6),D0
08000A94  6002      1483          bra.s     @vsscanf_scanread_4
                    1484   @vsscanf_scanread_3:
08000A96  70FF      1485          moveq     #-1,D0
                    1486   @vsscanf_scanread_4:
08000A98  6000 0032 1487          bra       @vsscanf_scanread_5
                    1488   @vsscanf_scanread_1:
08000A9C  2052      1489          move.l    (A2),A0
08000A9E  1010      1490          move.b    (A0),D0
08000AA0  6620      1491          bne.s     @vsscanf_scanread_6
08000AA2  4879 0800 1492          pea       @vsscanf_buf
08000AA6  235C      
08000AA8  6100 0926 1493          bsr       _gets
08000AAC  584F      1494          addq.w    #4,A7
08000AAE  2480      1495          move.l    D0,(A2)
08000AB0  4879 0800 1496          pea       @vsscanf_1
08000AB4  2230      
08000AB6  4879 0800 1497          pea       @vsscanf_buf
08000ABA  235C      
08000ABC  6100 09B2 1498          bsr       _strcat
08000AC0  504F      1499          addq.w    #8,A7
                    1500   @vsscanf_scanread_6:
08000AC2  2052      1501          move.l    (A2),A0
08000AC4  5292      1502          addq.l    #1,(A2)
08000AC6  1010      1503          move.b    (A0),D0
08000AC8  4880      1504          ext.w     D0
08000ACA  48C0      1505          ext.l     D0
                    1506   @vsscanf_scanread_5:
08000ACC  4CDF 0400 1507          movem.l   (A7)+,A2
08000AD0  4E5E      1508          unlk      A6
08000AD2  4E75      1509          rts
                    1510   @vsscanf_scanputback:
08000AD4  4E56 0000 1511          link      A6,#0
08000AD8  48E7 3000 1512          movem.l   D2/D3,-(A7)
08000ADC  242E 000C 1513          move.l    12(A6),D2
08000AE0  262E 0008 1514          move.l    8(A6),D3
08000AE4  6718      1515          beq.s     @vsscanf_scanputback_1
08000AE6  0C82 FFFF 1516          cmp.l     #-1,D2
08000AEA  FFFF      
08000AEC  670A      1517          beq.s     @vsscanf_scanputback_3
08000AEE  5983      1518          subq.l    #4,D3
08000AF0  2043      1519          move.l    D3,A0
08000AF2  2050      1520          move.l    (A0),A0
08000AF4  1082      1521          move.b    D2,(A0)
08000AF6  6004      1522          bra.s     @vsscanf_scanputback_4
                    1523   @vsscanf_scanputback_3:
08000AF8  2043      1524          move.l    D3,A0
08000AFA  5390      1525          subq.l    #1,(A0)
                    1526   @vsscanf_scanputback_4:
08000AFC  602E      1527          bra.s     @vsscanf_scanputback_6
                    1528   @vsscanf_scanputback_1:
08000AFE  41F9 0800 1529          lea       @vsscanf_buf,A0
08000B02  235C      
08000B04  2008      1530          move.l    A0,D0
08000B06  B0B9 0800 1531          cmp.l     @vsscanf_bufx,D0
08000B0A  222C      
08000B0C  6610      1532          bne.s     @vsscanf_scanputback_5
08000B0E  4239 0800 1533          clr.b     @vsscanf_buf
08000B12  235C      
08000B14  2F02      1534          move.l    D2,-(A7)
08000B16  6100 099A 1535          bsr       _ungetch
08000B1A  584F      1536          addq.w    #4,A7
08000B1C  600E      1537          bra.s     @vsscanf_scanputback_6
                    1538   @vsscanf_scanputback_5:
08000B1E  53B9 0800 1539          subq.l    #1,@vsscanf_bufx
08000B22  222C      
08000B24  2079 0800 1540          move.l    @vsscanf_bufx,A0
08000B28  222C      
08000B2A  1082      1541          move.b    D2,(A0)
                    1542   @vsscanf_scanputback_6:
08000B2C  2002      1543          move.l    D2,D0
08000B2E  4CDF 000C 1544          movem.l   (A7)+,D2/D3
08000B32  4E5E      1545          unlk      A6
08000B34  4E75      1546          rts
                    1547   @vsscanf_scanspace:
08000B36  4E56 0000 1548          link      A6,#0
08000B3A  48E7 2000 1549          movem.l   D2,-(A7)
                    1550   @vsscanf_scanspace_1:
08000B3E  2F2E 0008 1551          move.l    8(A6),-(A7)
08000B42  6100 FF22 1552          bsr       @vsscanf_scanread
08000B46  584F      1553          addq.w    #4,A7
08000B48  2400      1554          move.l    D0,D2
08000B4A  206E 000C 1555          move.l    12(A6),A0
08000B4E  5290      1556          addq.l    #1,(A0)
08000B50  2042      1557          move.l    D2,A0
08000B52  43F9 0800 1558          lea       __ctype,A1
08000B56  2232      
08000B58  1030 9801 1559          move.b    1(A0,A1.L),D0
08000B5C  C03C 0010 1560          and.b     #16,D0
08000B60  66DC      1561          bne       @vsscanf_scanspace_1
08000B62  2002      1562          move.l    D2,D0
08000B64  4CDF 0004 1563          movem.l   (A7)+,D2
08000B68  4E5E      1564          unlk      A6
08000B6A  4E75      1565          rts
                    1566   @vsscanf_scanselect:
08000B6C  4E56 0000 1567          link      A6,#0
08000B70  48E7 3F20 1568          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08000B74  262E 000C 1569          move.l    12(A6),D3
08000B78  2C2E 0018 1570          move.l    24(A6),D6
08000B7C  2E2E 0014 1571          move.l    20(A6),D7
08000B80  2043      1572          move.l    D3,A0
08000B82  1010      1573          move.b    (A0),D0
08000B84  4880      1574          ext.w     D0
08000B86  48C0      1575          ext.l     D0
08000B88  0C80 0000 1576          cmp.l     #94,D0
08000B8C  005E      
08000B8E  6608      1577          bne.s     @vsscanf_scanselect_1
08000B90  347C 0001 1578          move.w    #1,A2
08000B94  5283      1579          addq.l    #1,D3
08000B96  6004      1580          bra.s     @vsscanf_scanselect_2
                    1581   @vsscanf_scanselect_1:
08000B98  347C 0000 1582          move.w    #0,A2
                    1583   @vsscanf_scanselect_2:
08000B9C  202E 0010 1584          move.l    16(A6),D0
08000BA0  53AE 0010 1585          subq.l    #1,16(A6)
08000BA4  4A80      1586          tst.l     D0
08000BA6  6700 0108 1587          beq       @vsscanf_scanselect_5
08000BAA  2F2E 0008 1588          move.l    8(A6),-(A7)
08000BAE  6100 FEB6 1589          bsr       @vsscanf_scanread
08000BB2  584F      1590          addq.w    #4,A7
08000BB4  2800      1591          move.l    D0,D4
08000BB6  0C84 FFFF 1592          cmp.l     #-1,D4
08000BBA  FFFF      
08000BBC  6604      1593          bne.s     @vsscanf_scanselect_6
08000BBE  6000 00F0 1594          bra       @vsscanf_scanselect_5
                    1595   @vsscanf_scanselect_6:
08000BC2  206E 001C 1596          move.l    28(A6),A0
08000BC6  5290      1597          addq.l    #1,(A0)
08000BC8  4285      1598          clr.l     D5
08000BCA  4282      1599          clr.l     D2
                    1600   @vsscanf_scanselect_8:
08000BCC  2043      1601          move.l    D3,A0
08000BCE  1030 2800 1602          move.b    0(A0,D2.L),D0
08000BD2  4880      1603          ext.w     D0
08000BD4  48C0      1604          ext.l     D0
08000BD6  0C80 0000 1605          cmp.l     #93,D0
08000BDA  005D      
08000BDC  6700 008E 1606          beq       @vsscanf_scanselect_10
08000BE0  4A82      1607          tst.l     D2
08000BE2  6716      1608          beq.s     @vsscanf_scanselect_11
08000BE4  2043      1609          move.l    D3,A0
08000BE6  1030 2800 1610          move.b    0(A0,D2.L),D0
08000BEA  4880      1611          ext.w     D0
08000BEC  48C0      1612          ext.l     D0
08000BEE  0C80 0000 1613          cmp.l     #93,D0
08000BF2  005D      
08000BF4  6604      1614          bne.s     @vsscanf_scanselect_11
08000BF6  6000 0074 1615          bra       @vsscanf_scanselect_10
                    1616   @vsscanf_scanselect_11:
08000BFA  4A82      1617          tst.l     D2
08000BFC  6700 0058 1618          beq       @vsscanf_scanselect_15
08000C00  2043      1619          move.l    D3,A0
08000C02  1030 2800 1620          move.b    0(A0,D2.L),D0
08000C06  4880      1621          ext.w     D0
08000C08  48C0      1622          ext.l     D0
08000C0A  0C80 0000 1623          cmp.l     #45,D0
08000C0E  002D      
08000C10  6600 0044 1624          bne       @vsscanf_scanselect_15
08000C14  2043      1625          move.l    D3,A0
08000C16  2002      1626          move.l    D2,D0
08000C18  5380      1627          subq.l    #1,D0
08000C1A  2243      1628          move.l    D3,A1
08000C1C  2F08      1629          move.l    A0,-(A7)
08000C1E  2042      1630          move.l    D2,A0
08000C20  1230 0800 1631          move.b    0(A0,D0.L),D1
08000C24  B230 9801 1632          cmp.b     1(A0,A1.L),D1
08000C28  6C00 002C 1633          bge       @vsscanf_scanselect_15
08000C2C  205F      1634          move.l    (A7)+,A0
08000C2E  2043      1635          move.l    D3,A0
08000C30  2002      1636          move.l    D2,D0
08000C32  5380      1637          subq.l    #1,D0
08000C34  1030 0800 1638          move.b    0(A0,D0.L),D0
08000C38  4880      1639          ext.w     D0
08000C3A  48C0      1640          ext.l     D0
08000C3C  B880      1641          cmp.l     D0,D4
08000C3E  6D12      1642          blt.s     @vsscanf_scanselect_17
08000C40  2043      1643          move.l    D3,A0
08000C42  2242      1644          move.l    D2,A1
08000C44  1031 8801 1645          move.b    1(A1,A0.L),D0
08000C48  4880      1646          ext.w     D0
08000C4A  48C0      1647          ext.l     D0
08000C4C  B880      1648          cmp.l     D0,D4
08000C4E  6E02      1649          bgt.s     @vsscanf_scanselect_17
08000C50  601A      1650          bra.s     @vsscanf_scanselect_10
                    1651   @vsscanf_scanselect_17:
08000C52  5282      1652          addq.l    #1,D2
08000C54  6010      1653          bra.s     @vsscanf_scanselect_19
                    1654   @vsscanf_scanselect_15:
08000C56  2043      1655          move.l    D3,A0
08000C58  1030 2800 1656          move.b    0(A0,D2.L),D0
08000C5C  4880      1657          ext.w     D0
08000C5E  48C0      1658          ext.l     D0
08000C60  B880      1659          cmp.l     D0,D4
08000C62  6602      1660          bne.s     @vsscanf_scanselect_19
08000C64  6006      1661          bra.s     @vsscanf_scanselect_10
                    1662   @vsscanf_scanselect_19:
08000C66  5282      1663          addq.l    #1,D2
08000C68  6000 FF62 1664          bra       @vsscanf_scanselect_8
                    1665   @vsscanf_scanselect_10:
08000C6C  4A82      1666          tst.l     D2
08000C6E  6712      1667          beq.s     @vsscanf_scanselect_23
08000C70  2043      1668          move.l    D3,A0
08000C72  1030 2800 1669          move.b    0(A0,D2.L),D0
08000C76  4880      1670          ext.w     D0
08000C78  48C0      1671          ext.l     D0
08000C7A  0C80 0000 1672          cmp.l     #93,D0
08000C7E  005D      
08000C80  6702      1673          beq.s     @vsscanf_scanselect_21
                    1674   @vsscanf_scanselect_23:
08000C82  7A01      1675          moveq     #1,D5
                    1676   @vsscanf_scanselect_21:
08000C84  200A      1677          move.l    A2,D0
08000C86  6712      1678          beq.s     @vsscanf_scanselect_24
08000C88  4A85      1679          tst.l     D5
08000C8A  660C      1680          bne.s     @vsscanf_scanselect_26
08000C8C  4A87      1681          tst.l     D7
08000C8E  6606      1682          bne.s     @vsscanf_scanselect_28
08000C90  2046      1683          move.l    D6,A0
08000C92  5286      1684          addq.l    #1,D6
08000C94  1084      1685          move.b    D4,(A0)
                    1686   @vsscanf_scanselect_28:
08000C96  6014      1687          bra.s     @vsscanf_scanselect_4
                    1688   @vsscanf_scanselect_26:
08000C98  6016      1689          bra.s     @vsscanf_scanselect_5
                    1690   @vsscanf_scanselect_24:
08000C9A  4A85      1691          tst.l     D5
08000C9C  670C      1692          beq.s     @vsscanf_scanselect_30
08000C9E  4A87      1693          tst.l     D7
08000CA0  6606      1694          bne.s     @vsscanf_scanselect_32
08000CA2  2046      1695          move.l    D6,A0
08000CA4  5286      1696          addq.l    #1,D6
08000CA6  1084      1697          move.b    D4,(A0)
                    1698   @vsscanf_scanselect_32:
08000CA8  6002      1699          bra.s     @vsscanf_scanselect_4
                    1700   @vsscanf_scanselect_30:
08000CAA  6004      1701          bra.s     @vsscanf_scanselect_5
                    1702   @vsscanf_scanselect_4:
08000CAC  6000 FEEE 1703          bra       @vsscanf_scanselect_2
                    1704   @vsscanf_scanselect_5:
08000CB0  0C84 FFFF 1705          cmp.l     #-1,D4
08000CB4  FFFF      
08000CB6  6712      1706          beq.s     @vsscanf_scanselect_34
08000CB8  2F04      1707          move.l    D4,-(A7)
08000CBA  2F2E 0008 1708          move.l    8(A6),-(A7)
08000CBE  6100 FE14 1709          bsr       @vsscanf_scanputback
08000CC2  504F      1710          addq.w    #8,A7
08000CC4  206E 001C 1711          move.l    28(A6),A0
08000CC8  5390      1712          subq.l    #1,(A0)
                    1713   @vsscanf_scanselect_34:
08000CCA  4A87      1714          tst.l     D7
08000CCC  6604      1715          bne.s     @vsscanf_scanselect_36
08000CCE  2046      1716          move.l    D6,A0
08000CD0  4210      1717          clr.b     (A0)
                    1718   @vsscanf_scanselect_36:
08000CD2  5283      1719          addq.l    #1,D3
08000CD4  2043      1720          move.l    D3,A0
08000CD6  1010      1721          move.b    (A0),D0
08000CD8  4880      1722          ext.w     D0
08000CDA  48C0      1723          ext.l     D0
08000CDC  0C80 0000 1724          cmp.l     #93,D0
08000CE0  005D      
08000CE2  6702      1725          beq.s     @vsscanf_scanselect_40
08000CE4  60EC      1726          bra       @vsscanf_scanselect_36
                    1727   @vsscanf_scanselect_40:
08000CE6  5283      1728          addq.l    #1,D3
08000CE8  2003      1729          move.l    D3,D0
08000CEA  4CDF 04FC 1730          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
08000CEE  4E5E      1731          unlk      A6
08000CF0  4E75      1732          rts
                    1733   _scanflush:
08000CF2  41F9 0800 1734          lea       @vsscanf_buf,A0
08000CF6  235C      
08000CF8  23C8 0800 1735          move.l    A0,@vsscanf_bufx
08000CFC  222C      
08000CFE  4239 0800 1736          clr.b     @vsscanf_buf
08000D02  235C      
08000D04  4878 FFFF 1737          pea       -1
08000D08  6100 07A8 1738          bsr       _ungetch
08000D0C  584F      1739          addq.w    #4,A7
08000D0E  4E75      1740          rts
                    1741   _vsscanf:
08000D10  4E56 FF88 1742          link      A6,#-120
08000D14  48E7 3F3C 1743          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000D18  47F9 0800 1744          lea       @vsscanf_scanread,A3
08000D1C  0A66      
08000D1E  4AAE 0008 1745          tst.l     8(A6)
08000D22  6706      1746          beq.s     vsscanf_1
08000D24  41EE 0008 1747          lea       8(A6),A0
08000D28  6004      1748          bra.s     vsscanf_2
                    1749   vsscanf_1:
08000D2A  4280      1750          clr.l     D0
08000D2C  2040      1751          move.l    D0,A0
                    1752   vsscanf_2:
08000D2E  2A08      1753          move.l    A0,D5
08000D30  42AE FFE4 1754          clr.l     -28(A6)
08000D34  4284      1755          clr.l     D4
                    1756   vsscanf_3:
08000D36  206E 000C 1757          move.l    12(A6),A0
08000D3A  52AE 000C 1758          addq.l    #1,12(A6)
08000D3E  1010      1759          move.b    (A0),D0
08000D40  4880      1760          ext.w     D0
08000D42  48C0      1761          ext.l     D0
08000D44  2600      1762          move.l    D0,D3
08000D46  6700 05AC 1763          beq       vsscanf_5
08000D4A  4286      1764          clr.l     D6
08000D4C  387C 0000 1765          move.w    #0,A4
08000D50  0C83 0000 1766          cmp.l     #32,D3
08000D54  0020      
08000D56  6712      1767          beq.s     vsscanf_8
08000D58  0C83 0000 1768          cmp.l     #9,D3
08000D5C  0009      
08000D5E  670A      1769          beq.s     vsscanf_8
08000D60  0C83 0000 1770          cmp.l     #10,D3
08000D64  000A      
08000D66  6600 0048 1771          bne       vsscanf_6
                    1772   vsscanf_8:
08000D6A  2F05      1773          move.l    D5,-(A7)
08000D6C  4E93      1774          jsr       (A3)
08000D6E  584F      1775          addq.w    #4,A7
08000D70  2400      1776          move.l    D0,D2
08000D72  52AE FFE4 1777          addq.l    #1,-28(A6)
08000D76  0C82 FFFF 1778          cmp.l     #-1,D2
08000D7A  FFFF      
08000D7C  660E      1779          bne.s     vsscanf_11
08000D7E  4A84      1780          tst.l     D4
08000D80  6704      1781          beq.s     vsscanf_13
08000D82  2004      1782          move.l    D4,D0
08000D84  6002      1783          bra.s     vsscanf_14
                    1784   vsscanf_13:
08000D86  70FF      1785          moveq     #-1,D0
                    1786   vsscanf_14:
08000D88  6000 056C 1787          bra       vsscanf_15
                    1788   vsscanf_11:
08000D8C  2042      1789          move.l    D2,A0
08000D8E  43F9 0800 1790          lea       __ctype,A1
08000D92  2232      
08000D94  1030 9801 1791          move.b    1(A0,A1.L),D0
08000D98  C03C 0010 1792          and.b     #16,D0
08000D9C  66CC      1793          bne       vsscanf_8
08000D9E  53AE FFE4 1794          subq.l    #1,-28(A6)
08000DA2  2F02      1795          move.l    D2,-(A7)
08000DA4  2F05      1796          move.l    D5,-(A7)
08000DA6  6100 FD2C 1797          bsr       @vsscanf_scanputback
08000DAA  504F      1798          addq.w    #8,A7
08000DAC  6000 0542 1799          bra       vsscanf_139
                    1800   vsscanf_6:
08000DB0  0C83 0000 1801          cmp.l     #37,D3
08000DB4  0025      
08000DB6  6600 0502 1802          bne       vsscanf_127
08000DBA  206E 000C 1803          move.l    12(A6),A0
08000DBE  52AE 000C 1804          addq.l    #1,12(A6)
08000DC2  1010      1805          move.b    (A0),D0
08000DC4  4880      1806          ext.w     D0
08000DC6  48C0      1807          ext.l     D0
08000DC8  2600      1808          move.l    D0,D3
08000DCA  42AE FFEC 1809          clr.l     -20(A6)
08000DCE  4286      1810          clr.l     D6
08000DD0  42AE FFE8 1811          clr.l     -24(A6)
08000DD4  347C 7FFF 1812          move.w    #32767,A2
08000DD8  0C83 0000 1813          cmp.l     #42,D3
08000DDC  002A      
08000DDE  6612      1814          bne.s     vsscanf_18
08000DE0  7C01      1815          moveq     #1,D6
08000DE2  206E 000C 1816          move.l    12(A6),A0
08000DE6  52AE 000C 1817          addq.l    #1,12(A6)
08000DEA  1010      1818          move.b    (A0),D0
08000DEC  4880      1819          ext.w     D0
08000DEE  48C0      1820          ext.l     D0
08000DF0  2600      1821          move.l    D0,D3
                    1822   vsscanf_18:
08000DF2  2043      1823          move.l    D3,A0
08000DF4  43F9 0800 1824          lea       __ctype,A1
08000DF8  2232      
08000DFA  1030 9801 1825          move.b    1(A0,A1.L),D0
08000DFE  C03C 0004 1826          and.b     #4,D0
08000E02  6700 004E 1827          beq       vsscanf_24
08000E06  2003      1828          move.l    D3,D0
08000E08  0480 0000 1829          sub.l     #48,D0
08000E0C  0030      
08000E0E  2440      1830          move.l    D0,A2
                    1831   vsscanf_22:
08000E10  206E 000C 1832          move.l    12(A6),A0
08000E14  52AE 000C 1833          addq.l    #1,12(A6)
08000E18  1010      1834          move.b    (A0),D0
08000E1A  4880      1835          ext.w     D0
08000E1C  48C0      1836          ext.l     D0
08000E1E  2600      1837          move.l    D0,D3
08000E20  2040      1838          move.l    D0,A0
08000E22  43F9 0800 1839          lea       __ctype,A1
08000E26  2232      
08000E28  1030 9801 1840          move.b    1(A0,A1.L),D0
08000E2C  C0BC 0000 1841          and.l     #255,D0
08000E30  00FF      
08000E32  C0BC 0000 1842          and.l     #4,D0
08000E36  0004      
08000E38  6718      1843          beq.s     vsscanf_24
08000E3A  70D0      1844          moveq     #-48,D0
08000E3C  2F0A      1845          move.l    A2,-(A7)
08000E3E  4878 000A 1846          pea       10
08000E42  6100 04FE 1847          bsr       LMUL
08000E46  2217      1848          move.l    (A7),D1
08000E48  504F      1849          addq.w    #8,A7
08000E4A  D283      1850          add.l     D3,D1
08000E4C  D081      1851          add.l     D1,D0
08000E4E  2440      1852          move.l    D0,A2
08000E50  60BE      1853          bra       vsscanf_22
                    1854   vsscanf_24:
08000E52  0C83 0000 1855          cmp.l     #108,D3
08000E56  006C      
08000E58  6708      1856          beq.s     vsscanf_27
08000E5A  0C83 0000 1857          cmp.l     #76,D3
08000E5E  004C      
08000E60  661A      1858          bne.s     vsscanf_25
                    1859   vsscanf_27:
08000E62  2D7C 0000 1860          move.l    #1,-24(A6)
08000E66  0001 FFE8 
08000E6A  206E 000C 1861          move.l    12(A6),A0
08000E6E  52AE 000C 1862          addq.l    #1,12(A6)
08000E72  1010      1863          move.b    (A0),D0
08000E74  4880      1864          ext.w     D0
08000E76  48C0      1865          ext.l     D0
08000E78  2600      1866          move.l    D0,D3
08000E7A  6020      1867          bra.s     vsscanf_28
                    1868   vsscanf_25:
08000E7C  0C83 0000 1869          cmp.l     #104,D3
08000E80  0068      
08000E82  6618      1870          bne.s     vsscanf_28
08000E84  2D7C 0000 1871          move.l    #1,-20(A6)
08000E88  0001 FFEC 
08000E8C  206E 000C 1872          move.l    12(A6),A0
08000E90  52AE 000C 1873          addq.l    #1,12(A6)
08000E94  1010      1874          move.b    (A0),D0
08000E96  4880      1875          ext.w     D0
08000E98  48C0      1876          ext.l     D0
08000E9A  2600      1877          move.l    D0,D3
                    1878   vsscanf_28:
08000E9C  0C83 0000 1879          cmp.l     #91,D3
08000EA0  005B      
08000EA2  6600 0036 1880          bne       vsscanf_30
08000EA6  4A86      1881          tst.l     D6
08000EA8  660A      1882          bne.s     vsscanf_32
08000EAA  206E 0010 1883          move.l    16(A6),A0
08000EAE  58AE 0010 1884          addq.l    #4,16(A6)
08000EB2  2E10      1885          move.l    (A0),D7
                    1886   vsscanf_32:
08000EB4  486E FFE4 1887          pea       -28(A6)
08000EB8  2F07      1888          move.l    D7,-(A7)
08000EBA  2F06      1889          move.l    D6,-(A7)
08000EBC  2F0A      1890          move.l    A2,-(A7)
08000EBE  2F2E 000C 1891          move.l    12(A6),-(A7)
08000EC2  2F05      1892          move.l    D5,-(A7)
08000EC4  6100 FCA6 1893          bsr       @vsscanf_scanselect
08000EC8  DEFC 0018 1894          add.w     #24,A7
08000ECC  2D40 000C 1895          move.l    D0,12(A6)
08000ED0  4A86      1896          tst.l     D6
08000ED2  6602      1897          bne.s     vsscanf_34
08000ED4  5284      1898          addq.l    #1,D4
                    1899   vsscanf_34:
08000ED6  6000 0418 1900          bra       vsscanf_139
                    1901   vsscanf_30:
08000EDA  0C83 0000 1902          cmp.l     #110,D3
08000EDE  006E      
08000EE0  661A      1903          bne.s     vsscanf_36
08000EE2  4A86      1904          tst.l     D6
08000EE4  6612      1905          bne.s     vsscanf_38
08000EE6  206E 0010 1906          move.l    16(A6),A0
08000EEA  58AE 0010 1907          addq.l    #4,16(A6)
08000EEE  2E10      1908          move.l    (A0),D7
08000EF0  2047      1909          move.l    D7,A0
08000EF2  20AE FFE4 1910          move.l    -28(A6),(A0)
08000EF6  5284      1911          addq.l    #1,D4
                    1912   vsscanf_38:
08000EF8  6000 03F6 1913          bra       vsscanf_139
                    1914   vsscanf_36:
08000EFC  0C83 0000 1915          cmp.l     #115,D3
08000F00  0073      
08000F02  6600 00AC 1916          bne       vsscanf_40
08000F06  486E FFE4 1917          pea       -28(A6)
08000F0A  2F05      1918          move.l    D5,-(A7)
08000F0C  6100 FC28 1919          bsr       @vsscanf_scanspace
08000F10  504F      1920          addq.w    #8,A7
08000F12  2400      1921          move.l    D0,D2
08000F14  4A86      1922          tst.l     D6
08000F16  660A      1923          bne.s     vsscanf_42
08000F18  206E 0010 1924          move.l    16(A6),A0
08000F1C  58AE 0010 1925          addq.l    #4,16(A6)
08000F20  2E10      1926          move.l    (A0),D7
                    1927   vsscanf_42:
08000F22  52AE FFE4 1928          addq.l    #1,-28(A6)
                    1929   vsscanf_44:
08000F26  200A      1930          move.l    A2,D0
08000F28  534A      1931          subq.w    #1,A2
08000F2A  4A80      1932          tst.l     D0
08000F2C  6700 0038 1933          beq       vsscanf_46
08000F30  2042      1934          move.l    D2,A0
08000F32  43F9 0800 1935          lea       __ctype,A1
08000F36  2232      
08000F38  1030 9801 1936          move.b    1(A0,A1.L),D0
08000F3C  C03C 0010 1937          and.b     #16,D0
08000F40  6624      1938          bne.s     vsscanf_46
08000F42  0C82 FFFF 1939          cmp.l     #-1,D2
08000F46  FFFF      
08000F48  671C      1940          beq.s     vsscanf_46
08000F4A  387C 0001 1941          move.w    #1,A4
08000F4E  4A86      1942          tst.l     D6
08000F50  6606      1943          bne.s     vsscanf_47
08000F52  2047      1944          move.l    D7,A0
08000F54  5287      1945          addq.l    #1,D7
08000F56  1082      1946          move.b    D2,(A0)
                    1947   vsscanf_47:
08000F58  2F05      1948          move.l    D5,-(A7)
08000F5A  4E93      1949          jsr       (A3)
08000F5C  584F      1950          addq.w    #4,A7
08000F5E  2400      1951          move.l    D0,D2
08000F60  52AE FFE4 1952          addq.l    #1,-28(A6)
08000F64  60C0      1953          bra       vsscanf_44
                    1954   vsscanf_46:
08000F66  4A86      1955          tst.l     D6
08000F68  660A      1956          bne.s     vsscanf_51
08000F6A  2047      1957          move.l    D7,A0
08000F6C  4210      1958          clr.b     (A0)
08000F6E  200C      1959          move.l    A4,D0
08000F70  6702      1960          beq.s     vsscanf_51
08000F72  5284      1961          addq.l    #1,D4
                    1962   vsscanf_51:
08000F74  0C82 FFFF 1963          cmp.l     #-1,D2
08000F78  FFFF      
08000F7A  6708      1964          beq.s     vsscanf_55
08000F7C  4A86      1965          tst.l     D6
08000F7E  661E      1966          bne.s     vsscanf_53
08000F80  200C      1967          move.l    A4,D0
08000F82  661A      1968          bne.s     vsscanf_53
                    1969   vsscanf_55:
08000F84  4A84      1970          tst.l     D4
08000F86  6704      1971          beq.s     vsscanf_56
08000F88  2004      1972          move.l    D4,D0
08000F8A  600E      1973          bra.s     vsscanf_59
                    1974   vsscanf_56:
08000F8C  0C82 FFFF 1975          cmp.l     #-1,D2
08000F90  FFFF      
08000F92  6604      1976          bne.s     vsscanf_58
08000F94  70FF      1977          moveq     #-1,D0
08000F96  6002      1978          bra.s     vsscanf_59
                    1979   vsscanf_58:
08000F98  2004      1980          move.l    D4,D0
                    1981   vsscanf_59:
08000F9A  6000 035A 1982          bra       vsscanf_15
                    1983   vsscanf_53:
08000F9E  53AE FFE4 1984          subq.l    #1,-28(A6)
08000FA2  2F02      1985          move.l    D2,-(A7)
08000FA4  2F05      1986          move.l    D5,-(A7)
08000FA6  6100 FB2C 1987          bsr       @vsscanf_scanputback
08000FAA  504F      1988          addq.w    #8,A7
08000FAC  6000 0342 1989          bra       vsscanf_139
                    1990   vsscanf_40:
08000FB0  0C83 0000 1991          cmp.l     #99,D3
08000FB4  0063      
08000FB6  6600 008E 1992          bne       vsscanf_60
08000FBA  4A86      1993          tst.l     D6
08000FBC  660A      1994          bne.s     vsscanf_62
08000FBE  206E 0010 1995          move.l    16(A6),A0
08000FC2  58AE 0010 1996          addq.l    #4,16(A6)
08000FC6  2E10      1997          move.l    (A0),D7
                    1998   vsscanf_62:
08000FC8  2F05      1999          move.l    D5,-(A7)
08000FCA  4E93      2000          jsr       (A3)
08000FCC  584F      2001          addq.w    #4,A7
08000FCE  2400      2002          move.l    D0,D2
08000FD0  52AE FFE4 2003          addq.l    #1,-28(A6)
08000FD4  200A      2004          move.l    A2,D0
08000FD6  0C80 0000 2005          cmp.l     #32767,D0
08000FDA  7FFF      
08000FDC  6604      2006          bne.s     vsscanf_64
08000FDE  347C 0001 2007          move.w    #1,A2
                    2008   vsscanf_64:
08000FE2  0C82 FFFF 2009          cmp.l     #-1,D2
08000FE6  FFFF      
08000FE8  6606      2010          bne.s     vsscanf_66
08000FEA  4A86      2011          tst.l     D6
08000FEC  6602      2012          bne.s     vsscanf_66
08000FEE  5384      2013          subq.l    #1,D4
                    2014   vsscanf_66:
08000FF0  200A      2015          move.l    A2,D0
08000FF2  534A      2016          subq.w    #1,A2
08000FF4  4A80      2017          tst.l     D0
08000FF6  6720      2018          beq.s     vsscanf_70
08000FF8  0C82 FFFF 2019          cmp.l     #-1,D2
08000FFC  FFFF      
08000FFE  6718      2020          beq.s     vsscanf_70
08001000  4A86      2021          tst.l     D6
08001002  6606      2022          bne.s     vsscanf_71
08001004  2047      2023          move.l    D7,A0
08001006  5287      2024          addq.l    #1,D7
08001008  1082      2025          move.b    D2,(A0)
                    2026   vsscanf_71:
0800100A  2F05      2027          move.l    D5,-(A7)
0800100C  4E93      2028          jsr       (A3)
0800100E  584F      2029          addq.w    #4,A7
08001010  2400      2030          move.l    D0,D2
08001012  52AE FFE4 2031          addq.l    #1,-28(A6)
08001016  60D8      2032          bra       vsscanf_66
                    2033   vsscanf_70:
08001018  0C82 FFFF 2034          cmp.l     #-1,D2
0800101C  FFFF      
0800101E  660E      2035          bne.s     vsscanf_73
08001020  4A84      2036          tst.l     D4
08001022  6704      2037          beq.s     vsscanf_75
08001024  2004      2038          move.l    D4,D0
08001026  6002      2039          bra.s     vsscanf_76
                    2040   vsscanf_75:
08001028  70FF      2041          moveq     #-1,D0
                    2042   vsscanf_76:
0800102A  6000 02CA 2043          bra       vsscanf_15
                    2044   vsscanf_73:
0800102E  4A86      2045          tst.l     D6
08001030  6602      2046          bne.s     vsscanf_77
08001032  5284      2047          addq.l    #1,D4
                    2048   vsscanf_77:
08001034  53AE FFE4 2049          subq.l    #1,-28(A6)
08001038  2F02      2050          move.l    D2,-(A7)
0800103A  2F05      2051          move.l    D5,-(A7)
0800103C  6100 FA96 2052          bsr       @vsscanf_scanputback
08001040  504F      2053          addq.w    #8,A7
08001042  6000 02AC 2054          bra       vsscanf_139
                    2055   vsscanf_60:
08001046  0C83 0000 2056          cmp.l     #105,D3
0800104A  0069      
0800104C  6600 0060 2057          bne       vsscanf_82
08001050  486E FFE4 2058          pea       -28(A6)
08001054  2F05      2059          move.l    D5,-(A7)
08001056  6100 FADE 2060          bsr       @vsscanf_scanspace
0800105A  504F      2061          addq.w    #8,A7
0800105C  2400      2062          move.l    D0,D2
0800105E  0C82 0000 2063          cmp.l     #48,D2
08001062  0030      
08001064  6600 0038 2064          bne       vsscanf_81
08001068  387C 0001 2065          move.w    #1,A4
0800106C  2F05      2066          move.l    D5,-(A7)
0800106E  4E93      2067          jsr       (A3)
08001070  584F      2068          addq.w    #4,A7
08001072  2400      2069          move.l    D0,D2
08001074  2F02      2070          move.l    D2,-(A7)
08001076  6100 03CC 2071          bsr       _tolower
0800107A  584F      2072          addq.w    #4,A7
0800107C  0C80 0000 2073          cmp.l     #120,D0
08001080  0078      
08001082  6604      2074          bne.s     vsscanf_83
08001084  7678      2075          moveq     #120,D3
08001086  6010      2076          bra.s     vsscanf_84
                    2077   vsscanf_83:
08001088  53AE FFE4 2078          subq.l    #1,-28(A6)
0800108C  2F02      2079          move.l    D2,-(A7)
0800108E  2F05      2080          move.l    D5,-(A7)
08001090  6100 FA42 2081          bsr       @vsscanf_scanputback
08001094  504F      2082          addq.w    #8,A7
08001096  766F      2083          moveq     #111,D3
                    2084   vsscanf_84:
08001098  52AE FFE4 2085          addq.l    #1,-28(A6)
0800109C  6010      2086          bra.s     vsscanf_82
                    2087   vsscanf_81:
0800109E  53AE FFE4 2088          subq.l    #1,-28(A6)
080010A2  2F02      2089          move.l    D2,-(A7)
080010A4  2F05      2090          move.l    D5,-(A7)
080010A6  6100 FA2C 2091          bsr       @vsscanf_scanputback
080010AA  504F      2092          addq.w    #8,A7
080010AC  7664      2093          moveq     #100,D3
                    2094   vsscanf_82:
080010AE  0C83 0000 2095          cmp.l     #100,D3
080010B2  0064      
080010B4  671A      2096          beq.s     vsscanf_87
080010B6  0C83 0000 2097          cmp.l     #117,D3
080010BA  0075      
080010BC  6712      2098          beq.s     vsscanf_87
080010BE  0C83 0000 2099          cmp.l     #120,D3
080010C2  0078      
080010C4  670A      2100          beq.s     vsscanf_87
080010C6  0C83 0000 2101          cmp.l     #111,D3
080010CA  006F      
080010CC  6600 01A4 2102          bne       vsscanf_85
                    2103   vsscanf_87:
080010D0  486E FFE4 2104          pea       -28(A6)
080010D4  2F05      2105          move.l    D5,-(A7)
080010D6  6100 FA5E 2106          bsr       @vsscanf_scanspace
080010DA  504F      2107          addq.w    #8,A7
080010DC  2400      2108          move.l    D0,D2
080010DE  2D7C 0000 2109          move.l    #10,-4(A6)
080010E2  000A FFFC 
080010E6  0C83 0000 2110          cmp.l     #120,D3
080010EA  0078      
080010EC  6608      2111          bne.s     vsscanf_88
080010EE  2D7C 0000 2112          move.l    #16,-4(A6)
080010F2  0010 FFFC 
                    2113   vsscanf_88:
080010F6  0C83 0000 2114          cmp.l     #111,D3
080010FA  006F      
080010FC  6608      2115          bne.s     vsscanf_90
080010FE  2D7C 0000 2116          move.l    #8,-4(A6)
08001102  0008 FFFC 
                    2117   vsscanf_90:
08001106  4A86      2118          tst.l     D6
08001108  660A      2119          bne.s     vsscanf_92
0800110A  206E 0010 2120          move.l    16(A6),A0
0800110E  58AE 0010 2121          addq.l    #4,16(A6)
08001112  2E10      2122          move.l    (A0),D7
                    2123   vsscanf_92:
08001114  42AE FFE0 2124          clr.l     -32(A6)
08001118  52AE FFE4 2125          addq.l    #1,-28(A6)
0800111C  0C83 0000 2126          cmp.l     #117,D3
08001120  0075      
08001122  6720      2127          beq.s     vsscanf_94
08001124  0C82 0000 2128          cmp.l     #45,D2
08001128  002D      
0800112A  6618      2129          bne.s     vsscanf_94
0800112C  2F05      2130          move.l    D5,-(A7)
0800112E  4E93      2131          jsr       (A3)
08001130  584F      2132          addq.w    #4,A7
08001132  2400      2133          move.l    D0,D2
08001134  52AE FFE4 2134          addq.l    #1,-28(A6)
08001138  2D7C 0000 2135          move.l    #1,-32(A6)
0800113C  0001 FFE0 
08001140  387C 0001 2136          move.w    #1,A4
                    2137   vsscanf_94:
08001144  3A7C 0000 2138          move.w    #0,A5
08001148  0C82 FFFF 2139          cmp.l     #-1,D2
0800114C  FFFF      
0800114E  660E      2140          bne.s     vsscanf_96
08001150  4A84      2141          tst.l     D4
08001152  6704      2142          beq.s     vsscanf_98
08001154  2004      2143          move.l    D4,D0
08001156  6002      2144          bra.s     vsscanf_99
                    2145   vsscanf_98:
08001158  70FF      2146          moveq     #-1,D0
                    2147   vsscanf_99:
0800115A  6000 019A 2148          bra       vsscanf_15
                    2149   vsscanf_96:
0800115E  200A      2150          move.l    A2,D0
08001160  534A      2151          subq.w    #1,A2
08001162  4A80      2152          tst.l     D0
08001164  6700 0090 2153          beq       vsscanf_102
08001168  0C83 0000 2154          cmp.l     #120,D3
0800116C  0078      
0800116E  6620      2155          bne.s     vsscanf_104
08001170  2F02      2156          move.l    D2,-(A7)
08001172  6100 0312 2157          bsr       _toupper
08001176  584F      2158          addq.w    #4,A7
08001178  0C80 0000 2159          cmp.l     #65,D0
0800117C  0041      
0800117E  6D10      2160          blt.s     vsscanf_104
08001180  2F02      2161          move.l    D2,-(A7)
08001182  6100 0302 2162          bsr       _toupper
08001186  584F      2163          addq.w    #4,A7
08001188  0C80 0000 2164          cmp.l     #70,D0
0800118C  0046      
0800118E  6F14      2165          ble.s     vsscanf_103
                    2166   vsscanf_104:
08001190  2042      2167          move.l    D2,A0
08001192  43F9 0800 2168          lea       __ctype,A1
08001196  2232      
08001198  1030 9801 2169          move.b    1(A0,A1.L),D0
0800119C  C03C 0004 2170          and.b     #4,D0
080011A0  6700 0054 2171          beq       vsscanf_102
                    2172   vsscanf_103:
080011A4  2042      2173          move.l    D2,A0
080011A6  43F9 0800 2174          lea       __ctype,A1
080011AA  2232      
080011AC  1030 9801 2175          move.b    1(A0,A1.L),D0
080011B0  C03C 0004 2176          and.b     #4,D0
080011B4  6614      2177          bne.s     vsscanf_105
080011B6  70F9      2178          moveq     #-7,D0
080011B8  2F00      2179          move.l    D0,-(A7)
080011BA  2F02      2180          move.l    D2,-(A7)
080011BC  6100 02C8 2181          bsr       _toupper
080011C0  584F      2182          addq.w    #4,A7
080011C2  2200      2183          move.l    D0,D1
080011C4  201F      2184          move.l    (A7)+,D0
080011C6  D081      2185          add.l     D1,D0
080011C8  2400      2186          move.l    D0,D2
                    2187   vsscanf_105:
080011CA  2F0D      2188          move.l    A5,-(A7)
080011CC  2F2E FFFC 2189          move.l    -4(A6),-(A7)
080011D0  6100 0170 2190          bsr       LMUL
080011D4  2017      2191          move.l    (A7),D0
080011D6  504F      2192          addq.w    #8,A7
080011D8  D082      2193          add.l     D2,D0
080011DA  0480 0000 2194          sub.l     #48,D0
080011DE  0030      
080011E0  2A40      2195          move.l    D0,A5
080011E2  2F05      2196          move.l    D5,-(A7)
080011E4  4E93      2197          jsr       (A3)
080011E6  584F      2198          addq.w    #4,A7
080011E8  2400      2199          move.l    D0,D2
080011EA  52AE FFE4 2200          addq.l    #1,-28(A6)
080011EE  387C 0001 2201          move.w    #1,A4
080011F2  6000 FF6A 2202          bra       vsscanf_96
                    2203   vsscanf_102:
080011F6  0C82 FFFF 2204          cmp.l     #-1,D2
080011FA  FFFF      
080011FC  671A      2205          beq.s     vsscanf_107
080011FE  2F02      2206          move.l    D2,-(A7)
08001200  2F05      2207          move.l    D5,-(A7)
08001202  6100 F8D0 2208          bsr       @vsscanf_scanputback
08001206  504F      2209          addq.w    #8,A7
08001208  53AE FFE4 2210          subq.l    #1,-28(A6)
0800120C  200C      2211          move.l    A4,D0
0800120E  6606      2212          bne.s     vsscanf_109
08001210  2004      2213          move.l    D4,D0
08001212  6000 00E2 2214          bra       vsscanf_15
                    2215   vsscanf_109:
08001216  6012      2216          bra.s     vsscanf_111
                    2217   vsscanf_107:
08001218  200C      2218          move.l    A4,D0
0800121A  660E      2219          bne.s     vsscanf_111
0800121C  4A84      2220          tst.l     D4
0800121E  6704      2221          beq.s     vsscanf_113
08001220  2004      2222          move.l    D4,D0
08001222  6002      2223          bra.s     vsscanf_114
                    2224   vsscanf_113:
08001224  70FF      2225          moveq     #-1,D0
                    2226   vsscanf_114:
08001226  6000 00CE 2227          bra       vsscanf_15
                    2228   vsscanf_111:
0800122A  4AAE FFE0 2229          tst.l     -32(A6)
0800122E  6706      2230          beq.s     vsscanf_115
08001230  200D      2231          move.l    A5,D0
08001232  4480      2232          neg.l     D0
08001234  2A40      2233          move.l    D0,A5
                    2234   vsscanf_115:
08001236  4A86      2235          tst.l     D6
08001238  661E      2236          bne.s     vsscanf_117
0800123A  4AAE FFE8 2237          tst.l     -24(A6)
0800123E  6706      2238          beq.s     vsscanf_119
08001240  2047      2239          move.l    D7,A0
08001242  208D      2240          move.l    A5,(A0)
08001244  6010      2241          bra.s     vsscanf_122
                    2242   vsscanf_119:
08001246  4AAE FFEC 2243          tst.l     -20(A6)
0800124A  6706      2244          beq.s     vsscanf_121
0800124C  2047      2245          move.l    D7,A0
0800124E  308D      2246          move.w    A5,(A0)
08001250  6004      2247          bra.s     vsscanf_122
                    2248   vsscanf_121:
08001252  2047      2249          move.l    D7,A0
08001254  208D      2250          move.l    A5,(A0)
                    2251   vsscanf_122:
08001256  5284      2252          addq.l    #1,D4
                    2253   vsscanf_117:
08001258  0C82 FFFF 2254          cmp.l     #-1,D2
0800125C  FFFF      
0800125E  660E      2255          bne.s     vsscanf_123
08001260  4A84      2256          tst.l     D4
08001262  6704      2257          beq.s     vsscanf_125
08001264  2004      2258          move.l    D4,D0
08001266  6002      2259          bra.s     vsscanf_126
                    2260   vsscanf_125:
08001268  70FF      2261          moveq     #-1,D0
                    2262   vsscanf_126:
0800126A  6000 008A 2263          bra       vsscanf_15
                    2264   vsscanf_123:
0800126E  6000 0080 2265          bra       vsscanf_139
                    2266   vsscanf_85:
08001272  0C83 0000 2267          cmp.l     #37,D3
08001276  0025      
08001278  6600 0040 2268          bne       vsscanf_127
0800127C  2F05      2269          move.l    D5,-(A7)
0800127E  4E93      2270          jsr       (A3)
08001280  584F      2271          addq.w    #4,A7
08001282  2400      2272          move.l    D0,D2
08001284  0C82 FFFF 2273          cmp.l     #-1,D2
08001288  FFFF      
0800128A  660E      2274          bne.s     vsscanf_129
0800128C  4A84      2275          tst.l     D4
0800128E  6704      2276          beq.s     vsscanf_131
08001290  2004      2277          move.l    D4,D0
08001292  6002      2278          bra.s     vsscanf_132
                    2279   vsscanf_131:
08001294  70FF      2280          moveq     #-1,D0
                    2281   vsscanf_132:
08001296  6000 005E 2282          bra       vsscanf_15
                    2283   vsscanf_129:
0800129A  52AE FFE4 2284          addq.l    #1,-28(A6)
0800129E  B483      2285          cmp.l     D3,D2
080012A0  6714      2286          beq.s     vsscanf_133
080012A2  2F02      2287          move.l    D2,-(A7)
080012A4  2F05      2288          move.l    D5,-(A7)
080012A6  6100 F82C 2289          bsr       @vsscanf_scanputback
080012AA  504F      2290          addq.w    #8,A7
080012AC  53AE FFE4 2291          subq.l    #1,-28(A6)
080012B0  2004      2292          move.l    D4,D0
080012B2  6000 0042 2293          bra       vsscanf_15
                    2294   vsscanf_133:
080012B6  6000 0038 2295          bra       vsscanf_139
                    2296   vsscanf_127:
080012BA  2F05      2297          move.l    D5,-(A7)
080012BC  4E93      2298          jsr       (A3)
080012BE  584F      2299          addq.w    #4,A7
080012C0  2400      2300          move.l    D0,D2
080012C2  52AE FFE4 2301          addq.l    #1,-28(A6)
080012C6  0C82 FFFF 2302          cmp.l     #-1,D2
080012CA  FFFF      
080012CC  660C      2303          bne.s     vsscanf_135
080012CE  4A84      2304          tst.l     D4
080012D0  6704      2305          beq.s     vsscanf_137
080012D2  2004      2306          move.l    D4,D0
080012D4  6002      2307          bra.s     vsscanf_138
                    2308   vsscanf_137:
080012D6  70FF      2309          moveq     #-1,D0
                    2310   vsscanf_138:
080012D8  601C      2311          bra.s     vsscanf_15
                    2312   vsscanf_135:
080012DA  B483      2313          cmp.l     D3,D2
080012DC  6712      2314          beq.s     vsscanf_139
080012DE  2F02      2315          move.l    D2,-(A7)
080012E0  2F05      2316          move.l    D5,-(A7)
080012E2  6100 F7F0 2317          bsr       @vsscanf_scanputback
080012E6  504F      2318          addq.w    #8,A7
080012E8  53AE FFE4 2319          subq.l    #1,-28(A6)
080012EC  2004      2320          move.l    D4,D0
080012EE  6006      2321          bra.s     vsscanf_15
                    2322   vsscanf_139:
080012F0  6000 FA44 2323          bra       vsscanf_3
                    2324   vsscanf_5:
080012F4  2004      2325          move.l    D4,D0
                    2326   vsscanf_15:
080012F6  4CDF 3CFC 2327          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
080012FA  4E5E      2328          unlk      A6
080012FC  4E75      2329          rts
                    2330   _printf:
080012FE  4E56 FFFC 2331          link      A6,#-4
08001302  48E7 2000 2332          movem.l   D2,-(A7)
08001306  41EE 0008 2333          lea       8(A6),A0
0800130A  5848      2334          addq.w    #4,A0
0800130C  2408      2335          move.l    A0,D2
0800130E  2F02      2336          move.l    D2,-(A7)
08001310  2F2E 0008 2337          move.l    8(A6),-(A7)
08001314  42A7      2338          clr.l     -(A7)
08001316  6100 0260 2339          bsr       _vsprintf
0800131A  DEFC 000C 2340          add.w     #12,A7
0800131E  2D40 FFFC 2341          move.l    D0,-4(A6)
08001322  4282      2342          clr.l     D2
08001324  202E FFFC 2343          move.l    -4(A6),D0
08001328  4CDF 0004 2344          movem.l   (A7)+,D2
0800132C  4E5E      2345          unlk      A6
0800132E  4E75      2346          rts
                    2347   ULMUL:
08001330  4E56 0000 2348          link    A6,#0
08001334  48E7 C000 2349          movem.l D0/D1,-(A7)
08001338  222E 0008 2350          move.l  8(A6),D1
0800133C  202E 000C 2351          move.l  12(A6),D0
08001340  602C      2352          bra.s   lmul_3
                    2353   LMUL:
08001342  4E56 0000 2354          link    A6,#0
08001346  48E7 C000 2355          movem.l D0/D1,-(A7)
0800134A  222E 0008 2356          move.l  8(A6),D1
0800134E  202E 000C 2357          move.l  12(A6),D0
08001352  4A80      2358          tst.l   D0
08001354  6A0A      2359          bpl.s   lmul_1
08001356  4480      2360          neg.l   D0
08001358  4A81      2361          tst.l   D1
0800135A  6A0A      2362          bpl.s   lmul_2
0800135C  4481      2363          neg.l   D1
0800135E  600E      2364          bra.s   lmul_3
                    2365   lmul_1:
08001360  4A81      2366          tst.l   D1
08001362  6A0A      2367          bpl.s   lmul_3
08001364  4481      2368          neg.l   D1
                    2369   lmul_2:
08001366  6114      2370          bsr.s   domul
08001368  4481      2371          neg.l   D1
0800136A  4080      2372          negx.l  D0
0800136C  6002      2373          bra.s   lmul_4
                    2374   lmul_3:
0800136E  610C      2375          bsr.s   domul
                    2376   lmul_4:
08001370  2D41 0008 2377          move.l  D1,8(A6)
08001374  4CDF 0003 2378          movem.l (A7)+,D0/D1
08001378  4E5E      2379          unlk    A6
0800137A  4E75      2380          rts
                    2381   domul:
0800137C  0C81 0000 2382          cmpi.l  #$FFFF,D1
08001380  FFFF      
08001382  620C      2383          bhi.s   domul_1
08001384  0C80 0000 2384          cmpi.l  #$FFFF,D0
08001388  FFFF      
0800138A  620E      2385          bhi.s   domul_2
0800138C  C2C0      2386          mulu    D0,D1
0800138E  4E75      2387          rts
                    2388   domul_1:
08001390  0C80 0000 2389          cmpi.l  #$FFFF,D0
08001394  FFFF      
08001396  6218      2390          bhi.s   domul_4
08001398  6002      2391          bra.s   domul_3
                    2392   domul_2
0800139A  C141      2393          exg     D0,D1
                    2394   domul_3:
0800139C  2F02      2395          move.l  D2,-(A7)
0800139E  2401      2396          move.l  D1,D2
080013A0  4842      2397          swap    D2
080013A2  C2C0      2398          mulu    D0,D1
080013A4  C4C0      2399          mulu    D0,D2
080013A6  4842      2400          swap    D2
080013A8  4242      2401          clr.w   D2
080013AA  D282      2402          add.l   D2,D1
080013AC  241F      2403          move.l  (A7)+,D2
080013AE  4E75      2404          rts
                    2405   domul_4:
080013B0  48E7 3000 2406          movem.l D2/D3,-(A7)
080013B4  2401      2407          move.l  D1,D2
080013B6  2601      2408          move.l  D1,D3
080013B8  C2C0      2409          mulu    D0,D1
080013BA  4842      2410          swap    D2
080013BC  C4C0      2411          mulu    D0,D2
080013BE  4840      2412          swap    D0
080013C0  C6C0      2413          mulu    D0,D3
080013C2  D483      2414          add.l   D3,D2
080013C4  4842      2415          swap    D2
080013C6  4242      2416          clr.w   D2
080013C8  D282      2417          add.l   D2,D1
080013CA  4CDF 000C 2418          movem.l (A7)+,D2/D3
080013CE  4E75      2419          rts
                    2420   _gets:
080013D0  4E56 0000 2421          link      A6,#0
080013D4  48E7 3820 2422          movem.l   D2/D3/D4/A2,-(A7)
080013D8  45F9 0800 2423          lea       _putch,A2
080013DC  1BDC      
080013DE  282E 0008 2424          move.l    8(A6),D4
080013E2  2404      2425          move.l    D4,D2
                    2426   gets_1:
080013E4  6100 0826 2427          bsr       _getch
080013E8  2600      2428          move.l    D0,D3
080013EA  0C80 0000 2429          cmp.l     #10,D0
080013EE  000A      
080013F0  6700 003C 2430          beq       gets_3
080013F4  0C83 0000 2431          cmp.l     #8,D3
080013F8  0008      
080013FA  6712      2432          beq.s     gets_4
080013FC  2042      2433          move.l    D2,A0
080013FE  5282      2434          addq.l    #1,D2
08001400  1083      2435          move.b    D3,(A0)
08001402  4883      2436          ext.w     D3
08001404  48C3      2437          ext.l     D3
08001406  2F03      2438          move.l    D3,-(A7)
08001408  4E92      2439          jsr       (A2)
0800140A  584F      2440          addq.w    #4,A7
0800140C  601E      2441          bra.s     gets_6
                    2442   gets_4:
0800140E  B484      2443          cmp.l     D4,D2
08001410  631A      2444          bls.s     gets_6
08001412  4878 0008 2445          pea       8
08001416  4E92      2446          jsr       (A2)
08001418  584F      2447          addq.w    #4,A7
0800141A  4878 0020 2448          pea       32
0800141E  4E92      2449          jsr       (A2)
08001420  584F      2450          addq.w    #4,A7
08001422  4878 0008 2451          pea       8
08001426  4E92      2452          jsr       (A2)
08001428  584F      2453          addq.w    #4,A7
0800142A  5382      2454          subq.l    #1,D2
                    2455   gets_6:
0800142C  60B6      2456          bra       gets_1
                    2457   gets_3:
0800142E  4878 000A 2458          pea       10
08001432  4E92      2459          jsr       (A2)
08001434  584F      2460          addq.w    #4,A7
08001436  2042      2461          move.l    D2,A0
08001438  4210      2462          clr.b     (A0)
0800143A  2004      2463          move.l    D4,D0
0800143C  4CDF 041C 2464          movem.l   (A7)+,D2/D3/D4/A2
08001440  4E5E      2465          unlk      A6
08001442  4E75      2466          rts
                    2467   _tolower:
08001444  4E56 0000 2468          link      A6,#0
08001448  48E7 2000 2469          movem.l   D2,-(A7)
0800144C  242E 0008 2470          move.l    8(A6),D2
08001450  0C82 0000 2471          cmp.l     #65,D2
08001454  0041      
08001456  6D0E      2472          blt.s     tolower_1
08001458  0C82 0000 2473          cmp.l     #90,D2
0800145C  005A      
0800145E  6E06      2474          bgt.s     tolower_1
08001460  84BC 0000 2475          or.l      #32,D2
08001464  0020      
                    2476   tolower_1:
08001466  2002      2477          move.l    D2,D0
08001468  4CDF 0004 2478          movem.l   (A7)+,D2
0800146C  4E5E      2479          unlk      A6
0800146E  4E75      2480          rts
                    2481   _strcat:
08001470  206F 0004 2482          move.l    (4,A7),A0	
08001474  226F 0008 2483          move.l    (8,A7),A1	
08001478  2008      2484          move.l    A0,D0		
                    2485   strcat_0:
0800147A  4A18      2486          tst.b     (A0)+
0800147C  66FC      2487          bne       strcat_0
0800147E  5348      2488          subq      #1,A0
                    2489   strcat_1:
08001480  10D9      2490          move.b    (A1)+,(A0)+
08001482  66FC      2491          bne       strcat_1
08001484  4E75      2492          rts
                    2493   _toupper:
08001486  4E56 0000 2494          link      A6,#0
0800148A  48E7 2000 2495          movem.l   D2,-(A7)
0800148E  242E 0008 2496          move.l    8(A6),D2
08001492  0C82 0000 2497          cmp.l     #97,D2
08001496  0061      
08001498  6D0E      2498          blt.s     toupper_1
0800149A  0C82 0000 2499          cmp.l     #122,D2
0800149E  007A      
080014A0  6E06      2500          bgt.s     toupper_1
080014A2  C4BC 0000 2501          and.l     #95,D2
080014A6  005F      
                    2502   toupper_1:
080014A8  2002      2503          move.l    D2,D0
080014AA  4CDF 0004 2504          movem.l   (A7)+,D2
080014AE  4E5E      2505          unlk      A6
080014B0  4E75      2506          rts
                    2507   _ungetch:
080014B2  4E56 0000 2508          link      A6,#0
080014B6  23EE 0008 2509          move.l    8(A6),__ungetbuf
080014BA  0800 2220 
080014BE  202E 0008 2510          move.l    8(A6),D0
080014C2  4E5E      2511          unlk      A6
080014C4  4E75      2512          rts
                    2513   @vsprintf_copy:
080014C6  4E56 0000 2514          link      A6,#0
080014CA  206E 0008 2515          move.l    8(A6),A0
080014CE  4A90      2516          tst.l     (A0)
080014D0  6710      2517          beq.s     @vsprintf_copy_1
080014D2  202E 000C 2518          move.l    12(A6),D0
080014D6  206E 0008 2519          move.l    8(A6),A0
080014DA  2250      2520          move.l    (A0),A1
080014DC  5290      2521          addq.l    #1,(A0)
080014DE  1280      2522          move.b    D0,(A1)
080014E0  600A      2523          bra.s     @vsprintf_copy_2
                    2524   @vsprintf_copy_1:
080014E2  2F2E 000C 2525          move.l    12(A6),-(A7)
080014E6  6100 06F4 2526          bsr       _putch
080014EA  584F      2527          addq.w    #4,A7
                    2528   @vsprintf_copy_2:
080014EC  4E5E      2529          unlk      A6
080014EE  4E75      2530          rts
                    2531   @vsprintf_getval:
080014F0  4E56 0000 2532          link      A6,#0
080014F4  48E7 3000 2533          movem.l   D2/D3,-(A7)
080014F8  242E 0008 2534          move.l    8(A6),D2
080014FC  4283      2535          clr.l     D3
080014FE  2042      2536          move.l    D2,A0
08001500  2050      2537          move.l    (A0),A0
08001502  1010      2538          move.b    (A0),D0
08001504  4880      2539          ext.w     D0
08001506  48C0      2540          ext.l     D0
08001508  0C80 0000 2541          cmp.l     #42,D0
0800150C  002A      
0800150E  6612      2542          bne.s     @vsprintf_getval_1
08001510  206E 000C 2543          move.l    12(A6),A0
08001514  2250      2544          move.l    (A0),A1
08001516  5890      2545          addq.l    #4,(A0)
08001518  2611      2546          move.l    (A1),D3
0800151A  2042      2547          move.l    D2,A0
0800151C  5290      2548          addq.l    #1,(A0)
0800151E  6000 004E 2549          bra       @vsprintf_getval_5
                    2550   @vsprintf_getval_1:
08001522  2042      2551          move.l    D2,A0
08001524  2050      2552          move.l    (A0),A0
08001526  1010      2553          move.b    (A0),D0
08001528  4880      2554          ext.w     D0
0800152A  48C0      2555          ext.l     D0
0800152C  0C80 0000 2556          cmp.l     #48,D0
08001530  0030      
08001532  6D00 003A 2557          blt       @vsprintf_getval_5
08001536  2042      2558          move.l    D2,A0
08001538  2050      2559          move.l    (A0),A0
0800153A  1010      2560          move.b    (A0),D0
0800153C  4880      2561          ext.w     D0
0800153E  48C0      2562          ext.l     D0
08001540  0C80 0000 2563          cmp.l     #57,D0
08001544  0039      
08001546  6E26      2564          bgt.s     @vsprintf_getval_5
08001548  2F03      2565          move.l    D3,-(A7)
0800154A  4878 000A 2566          pea       10
0800154E  6100 FDF2 2567          bsr       LMUL
08001552  2017      2568          move.l    (A7),D0
08001554  504F      2569          addq.w    #8,A7
08001556  2042      2570          move.l    D2,A0
08001558  2250      2571          move.l    (A0),A1
0800155A  5290      2572          addq.l    #1,(A0)
0800155C  1211      2573          move.b    (A1),D1
0800155E  4881      2574          ext.w     D1
08001560  48C1      2575          ext.l     D1
08001562  D081      2576          add.l     D1,D0
08001564  0480 0000 2577          sub.l     #48,D0
08001568  0030      
0800156A  2600      2578          move.l    D0,D3
0800156C  60B4      2579          bra       @vsprintf_getval_1
                    2580   @vsprintf_getval_5:
0800156E  2003      2581          move.l    D3,D0
08001570  4CDF 000C 2582          movem.l   (A7)+,D2/D3
08001574  4E5E      2583          unlk      A6
08001576  4E75      2584          rts
                    2585   _vsprintf:
08001578  4E56 FFCC 2586          link      A6,#-52
0800157C  48E7 3F3C 2587          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001580  45EE 0008 2588          lea       8(A6),A2
08001584  47F9 0800 2589          lea       @vsprintf_copy,A3
08001588  14C6      
0800158A  49F9 0800 2590          lea       _ultoa,A4
0800158E  1D3E      
08001590  4286      2591          clr.l     D6
                    2592   vsprintf_1:
08001592  206E 000C 2593          move.l    12(A6),A0
08001596  4A10      2594          tst.b     (A0)
08001598  6700 0624 2595          beq       vsprintf_3
0800159C  206E 000C 2596          move.l    12(A6),A0
080015A0  1010      2597          move.b    (A0),D0
080015A2  4880      2598          ext.w     D0
080015A4  48C0      2599          ext.l     D0
080015A6  0C80 0000 2600          cmp.l     #37,D0
080015AA  0025      
080015AC  671C      2601          beq.s     vsprintf_4
080015AE  206E 000C 2602          move.l    12(A6),A0
080015B2  52AE 000C 2603          addq.l    #1,12(A6)
080015B6  1210      2604          move.b    (A0),D1
080015B8  4881      2605          ext.w     D1
080015BA  48C1      2606          ext.l     D1
080015BC  2F01      2607          move.l    D1,-(A7)
080015BE  2F0A      2608          move.l    A2,-(A7)
080015C0  4E93      2609          jsr       (A3)
080015C2  504F      2610          addq.w    #8,A7
080015C4  5286      2611          addq.l    #1,D6
080015C6  6000 05F2 2612          bra       vsprintf_2
                    2613   vsprintf_4:
080015CA  52AE 000C 2614          addq.l    #1,12(A6)
080015CE  422E FFD3 2615          clr.b     -45(A6)
080015D2  422E FFD2 2616          clr.b     -46(A6)
080015D6  422E FFD0 2617          clr.b     -48(A6)
080015DA  422E FFCF 2618          clr.b     -49(A6)
080015DE  422E FFCE 2619          clr.b     -50(A6)
080015E2  422E FFCD 2620          clr.b     -51(A6)
080015E6  42AE FFFC 2621          clr.l     -4(A6)
080015EA  7AFF      2622          moveq     #-1,D5
080015EC  41EE FFDC 2623          lea       -36(A6),A0
080015F0  2608      2624          move.l    A0,D3
080015F2  2408      2625          move.l    A0,D2
                    2626   vsprintf_6:
080015F4  206E 000C 2627          move.l    12(A6),A0
080015F8  1010      2628          move.b    (A0),D0
080015FA  4880      2629          ext.w     D0
080015FC  48C0      2630          ext.l     D0
080015FE  0C80 0000 2631          cmp.l     #43,D0
08001602  002B      
08001604  6730      2632          beq.s     vsprintf_12
08001606  6E18      2633          bgt.s     vsprintf_15
08001608  0C80 0000 2634          cmp.l     #35,D0
0800160C  0023      
0800160E  6700 003E 2635          beq       vsprintf_14
08001612  6E00 0046 2636          bgt       vsprintf_9
08001616  0C80 0000 2637          cmp.l     #32,D0
0800161A  0020      
0800161C  6724      2638          beq.s     vsprintf_13
0800161E  603A      2639          bra.s     vsprintf_9
                    2640   vsprintf_15:
08001620  0C80 0000 2641          cmp.l     #45,D0
08001624  002D      
08001626  6702      2642          beq.s     vsprintf_11
08001628  6030      2643          bra.s     vsprintf_9
                    2644   vsprintf_11:
0800162A  1D7C 0001 2645          move.b    #1,-51(A6)
0800162E  FFCD      
08001630  52AE 000C 2646          addq.l    #1,12(A6)
08001634  6026      2647          bra.s     vsprintf_7
                    2648   vsprintf_12:
08001636  1D7C 0001 2649          move.b    #1,-50(A6)
0800163A  FFCE      
0800163C  52AE 000C 2650          addq.l    #1,12(A6)
08001640  601A      2651          bra.s     vsprintf_7
                    2652   vsprintf_13:
08001642  1D7C 0001 2653          move.b    #1,-49(A6)
08001646  FFCF      
08001648  52AE 000C 2654          addq.l    #1,12(A6)
0800164C  600E      2655          bra.s     vsprintf_7
                    2656   vsprintf_14:
0800164E  1D7C 0001 2657          move.b    #1,-48(A6)
08001652  FFD0      
08001654  52AE 000C 2658          addq.l    #1,12(A6)
08001658  6002      2659          bra.s     vsprintf_7
                    2660   vsprintf_9:
0800165A  6002      2661          bra.s     vsprintf_8
                    2662   vsprintf_7:
0800165C  6096      2663          bra       vsprintf_6
                    2664   vsprintf_8:
0800165E  206E 000C 2665          move.l    12(A6),A0
08001662  1010      2666          move.b    (A0),D0
08001664  4880      2667          ext.w     D0
08001666  48C0      2668          ext.l     D0
08001668  0C80 0000 2669          cmp.l     #48,D0
0800166C  0030      
0800166E  660A      2670          bne.s     vsprintf_16
08001670  52AE 000C 2671          addq.l    #1,12(A6)
08001674  1D7C 0001 2672          move.b    #1,-46(A6)
08001678  FFD2      
                    2673   vsprintf_16:
0800167A  486E 0010 2674          pea       16(A6)
0800167E  486E 000C 2675          pea       12(A6)
08001682  6100 FE6C 2676          bsr       @vsprintf_getval
08001686  504F      2677          addq.w    #8,A7
08001688  2A40      2678          move.l    D0,A5
0800168A  206E 000C 2679          move.l    12(A6),A0
0800168E  1010      2680          move.b    (A0),D0
08001690  4880      2681          ext.w     D0
08001692  48C0      2682          ext.l     D0
08001694  0C80 0000 2683          cmp.l     #46,D0
08001698  002E      
0800169A  6614      2684          bne.s     vsprintf_18
0800169C  52AE 000C 2685          addq.l    #1,12(A6)
080016A0  486E 0010 2686          pea       16(A6)
080016A4  486E 000C 2687          pea       12(A6)
080016A8  6100 FE46 2688          bsr       @vsprintf_getval
080016AC  504F      2689          addq.w    #8,A7
080016AE  2A00      2690          move.l    D0,D5
                    2691   vsprintf_18:
080016B0  206E 000C 2692          move.l    12(A6),A0
080016B4  1010      2693          move.b    (A0),D0
080016B6  4880      2694          ext.w     D0
080016B8  48C0      2695          ext.l     D0
080016BA  0C80 0000 2696          cmp.l     #108,D0
080016BE  006C      
080016C0  660A      2697          bne.s     vsprintf_20
080016C2  52AE 000C 2698          addq.l    #1,12(A6)
080016C6  1D7C 0001 2699          move.b    #1,-45(A6)
080016CA  FFD3      
                    2700   vsprintf_20:
080016CC  206E 000C 2701          move.l    12(A6),A0
080016D0  1010      2702          move.b    (A0),D0
080016D2  4880      2703          ext.w     D0
080016D4  48C0      2704          ext.l     D0
080016D6  0C80 0000 2705          cmp.l     #111,D0
080016DA  006F      
080016DC  6700 00D4 2706          beq       vsprintf_27
080016E0  6E34      2707          bgt.s     vsprintf_33
080016E2  0C80 0000 2708          cmp.l     #100,D0
080016E6  0064      
080016E8  6700 0054 2709          beq       vsprintf_24
080016EC  6E1C      2710          bgt.s     vsprintf_34
080016EE  0C80 0000 2711          cmp.l     #99,D0
080016F2  0063      
080016F4  6700 012C 2712          beq       vsprintf_30
080016F8  6E00 016A 2713          bgt       vsprintf_22
080016FC  0C80 0000 2714          cmp.l     #88,D0
08001700  0058      
08001702  6700 00E6 2715          beq       vsprintf_28
08001706  6000 015C 2716          bra       vsprintf_22
                    2717   vsprintf_34:
0800170A  0C80 0000 2718          cmp.l     #105,D0
0800170E  0069      
08001710  672C      2719          beq.s     vsprintf_24
08001712  6000 0150 2720          bra       vsprintf_22
                    2721   vsprintf_33:
08001716  0C80 0000 2722          cmp.l     #117,D0
0800171A  0075      
0800171C  6700 005C 2723          beq       vsprintf_26
08001720  6E0E      2724          bgt.s     vsprintf_35
08001722  0C80 0000 2725          cmp.l     #115,D0
08001726  0073      
08001728  6700 011C 2726          beq       vsprintf_31
0800172C  6000 0136 2727          bra       vsprintf_22
                    2728   vsprintf_35:
08001730  0C80 0000 2729          cmp.l     #120,D0
08001734  0078      
08001736  6700 00B2 2730          beq       vsprintf_28
0800173A  6000 0128 2731          bra       vsprintf_22
                    2732   vsprintf_24:
0800173E  4A2E FFD3 2733          tst.b     -45(A6)
08001742  671A      2734          beq.s     vsprintf_36
08001744  4878 000A 2735          pea       10
08001748  2F03      2736          move.l    D3,-(A7)
0800174A  206E 0010 2737          move.l    16(A6),A0
0800174E  58AE 0010 2738          addq.l    #4,16(A6)
08001752  2F10      2739          move.l    (A0),-(A7)
08001754  6100 0564 2740          bsr       _ltoa
08001758  DEFC 000C 2741          add.w     #12,A7
0800175C  6018      2742          bra.s     vsprintf_37
                    2743   vsprintf_36:
0800175E  4878 000A 2744          pea       10
08001762  2F03      2745          move.l    D3,-(A7)
08001764  206E 0010 2746          move.l    16(A6),A0
08001768  58AE 0010 2747          addq.l    #4,16(A6)
0800176C  2F10      2748          move.l    (A0),-(A7)
0800176E  6100 054A 2749          bsr       _ltoa
08001772  DEFC 000C 2750          add.w     #12,A7
                    2751   vsprintf_37:
08001776  6000 00FA 2752          bra       vsprintf_23
                    2753   vsprintf_26:
0800177A  4A2E FFD3 2754          tst.b     -45(A6)
0800177E  6718      2755          beq.s     vsprintf_38
08001780  4878 000A 2756          pea       10
08001784  2F03      2757          move.l    D3,-(A7)
08001786  206E 0010 2758          move.l    16(A6),A0
0800178A  58AE 0010 2759          addq.l    #4,16(A6)
0800178E  2F10      2760          move.l    (A0),-(A7)
08001790  4E94      2761          jsr       (A4)
08001792  DEFC 000C 2762          add.w     #12,A7
08001796  6016      2763          bra.s     vsprintf_39
                    2764   vsprintf_38:
08001798  4878 000A 2765          pea       10
0800179C  2F03      2766          move.l    D3,-(A7)
0800179E  206E 0010 2767          move.l    16(A6),A0
080017A2  58AE 0010 2768          addq.l    #4,16(A6)
080017A6  2F10      2769          move.l    (A0),-(A7)
080017A8  4E94      2770          jsr       (A4)
080017AA  DEFC 000C 2771          add.w     #12,A7
                    2772   vsprintf_39:
080017AE  6000 00C2 2773          bra       vsprintf_23
                    2774   vsprintf_27:
080017B2  4A2E FFD3 2775          tst.b     -45(A6)
080017B6  6718      2776          beq.s     vsprintf_40
080017B8  4878 0008 2777          pea       8
080017BC  2F03      2778          move.l    D3,-(A7)
080017BE  206E 0010 2779          move.l    16(A6),A0
080017C2  58AE 0010 2780          addq.l    #4,16(A6)
080017C6  2F10      2781          move.l    (A0),-(A7)
080017C8  4E94      2782          jsr       (A4)
080017CA  DEFC 000C 2783          add.w     #12,A7
080017CE  6016      2784          bra.s     vsprintf_41
                    2785   vsprintf_40:
080017D0  4878 0008 2786          pea       8
080017D4  2F03      2787          move.l    D3,-(A7)
080017D6  206E 0010 2788          move.l    16(A6),A0
080017DA  58AE 0010 2789          addq.l    #4,16(A6)
080017DE  2F10      2790          move.l    (A0),-(A7)
080017E0  4E94      2791          jsr       (A4)
080017E2  DEFC 000C 2792          add.w     #12,A7
                    2793   vsprintf_41:
080017E6  6000 008A 2794          bra       vsprintf_23
                    2795   vsprintf_28:
080017EA  4A2E FFD3 2796          tst.b     -45(A6)
080017EE  6718      2797          beq.s     vsprintf_42
080017F0  4878 0010 2798          pea       16
080017F4  2F03      2799          move.l    D3,-(A7)
080017F6  206E 0010 2800          move.l    16(A6),A0
080017FA  58AE 0010 2801          addq.l    #4,16(A6)
080017FE  2F10      2802          move.l    (A0),-(A7)
08001800  4E94      2803          jsr       (A4)
08001802  DEFC 000C 2804          add.w     #12,A7
08001806  6016      2805          bra.s     vsprintf_43
                    2806   vsprintf_42:
08001808  4878 0010 2807          pea       16
0800180C  2F03      2808          move.l    D3,-(A7)
0800180E  206E 0010 2809          move.l    16(A6),A0
08001812  58AE 0010 2810          addq.l    #4,16(A6)
08001816  2F10      2811          move.l    (A0),-(A7)
08001818  4E94      2812          jsr       (A4)
0800181A  DEFC 000C 2813          add.w     #12,A7
                    2814   vsprintf_43:
0800181E  6000 0052 2815          bra       vsprintf_23
                    2816   vsprintf_30:
08001822  206E 0010 2817          move.l    16(A6),A0
08001826  58AE 0010 2818          addq.l    #4,16(A6)
0800182A  2010      2819          move.l    (A0),D0
0800182C  2042      2820          move.l    D2,A0
0800182E  5282      2821          addq.l    #1,D2
08001830  1080      2822          move.b    D0,(A0)
08001832  2042      2823          move.l    D2,A0
08001834  4210      2824          clr.b     (A0)
08001836  200D      2825          move.l    A5,D0
08001838  6704      2826          beq.s     vsprintf_44
0800183A  200D      2827          move.l    A5,D0
0800183C  6002      2828          bra.s     vsprintf_45
                    2829   vsprintf_44:
0800183E  7001      2830          moveq     #1,D0
                    2831   vsprintf_45:
08001840  2A00      2832          move.l    D0,D5
08001842  6000 002E 2833          bra       vsprintf_23
                    2834   vsprintf_31:
08001846  206E 0010 2835          move.l    16(A6),A0
0800184A  58AE 0010 2836          addq.l    #4,16(A6)
0800184E  2610      2837          move.l    (A0),D3
08001850  0C85 FFFF 2838          cmp.l     #-1,D5
08001854  FFFF      
08001856  660A      2839          bne.s     vsprintf_46
08001858  2F03      2840          move.l    D3,-(A7)
0800185A  6100 0544 2841          bsr       _strlen
0800185E  584F      2842          addq.w    #4,A7
08001860  2A00      2843          move.l    D0,D5
                    2844   vsprintf_46:
08001862  600E      2845          bra.s     vsprintf_23
                    2846   vsprintf_22:
08001864  206E 000C 2847          move.l    12(A6),A0
08001868  2242      2848          move.l    D2,A1
0800186A  5282      2849          addq.l    #1,D2
0800186C  1290      2850          move.b    (A0),(A1)
0800186E  2042      2851          move.l    D2,A0
08001870  4210      2852          clr.b     (A0)
                    2853   vsprintf_23:
08001872  2F03      2854          move.l    D3,-(A7)
08001874  6100 052A 2855          bsr       _strlen
08001878  584F      2856          addq.w    #4,A7
0800187A  1800      2857          move.b    D0,D4
0800187C  206E 000C 2858          move.l    12(A6),A0
08001880  1010      2859          move.b    (A0),D0
08001882  4880      2860          ext.w     D0
08001884  48C0      2861          ext.l     D0
08001886  0C80 0000 2862          cmp.l     #115,D0
0800188A  0073      
0800188C  6618      2863          bne.s     vsprintf_48
0800188E  0C85 0000 2864          cmp.l     #0,D5
08001892  0000      
08001894  6D10      2865          blt.s     vsprintf_48
08001896  4884      2866          ext.w     D4
08001898  48C4      2867          ext.l     D4
0800189A  B885      2868          cmp.l     D5,D4
0800189C  6F04      2869          ble.s     vsprintf_50
0800189E  1005      2870          move.b    D5,D0
080018A0  6002      2871          bra.s     vsprintf_51
                    2872   vsprintf_50:
080018A2  1004      2873          move.b    D4,D0
                    2874   vsprintf_51:
080018A4  1800      2875          move.b    D0,D4
                    2876   vsprintf_48:
080018A6  206E 000C 2877          move.l    12(A6),A0
080018AA  1010      2878          move.b    (A0),D0
080018AC  4880      2879          ext.w     D0
080018AE  48C0      2880          ext.l     D0
080018B0  0C80 0000 2881          cmp.l     #88,D0
080018B4  0058      
080018B6  6600 0026 2882          bne       vsprintf_56
080018BA  41EE FFDC 2883          lea       -36(A6),A0
080018BE  2408      2884          move.l    A0,D2
                    2885   vsprintf_54:
080018C0  2042      2886          move.l    D2,A0
080018C2  4A10      2887          tst.b     (A0)
080018C4  6718      2888          beq.s     vsprintf_56
080018C6  2042      2889          move.l    D2,A0
080018C8  1210      2890          move.b    (A0),D1
080018CA  4881      2891          ext.w     D1
080018CC  48C1      2892          ext.l     D1
080018CE  2F01      2893          move.l    D1,-(A7)
080018D0  6100 FBB4 2894          bsr       _toupper
080018D4  584F      2895          addq.w    #4,A7
080018D6  2042      2896          move.l    D2,A0
080018D8  1080      2897          move.b    D0,(A0)
080018DA  5282      2898          addq.l    #1,D2
080018DC  60E2      2899          bra       vsprintf_54
                    2900   vsprintf_56:
080018DE  7E00      2901          moveq     #0,D7
080018E0  41EE FFD4 2902          lea       -44(A6),A0
080018E4  2408      2903          move.l    A0,D2
080018E6  206E 000C 2904          move.l    12(A6),A0
080018EA  1010      2905          move.b    (A0),D0
080018EC  4880      2906          ext.w     D0
080018EE  48C0      2907          ext.l     D0
080018F0  0C80 0000 2908          cmp.l     #100,D0
080018F4  0064      
080018F6  6714      2909          beq.s     vsprintf_59
080018F8  206E 000C 2910          move.l    12(A6),A0
080018FC  1010      2911          move.b    (A0),D0
080018FE  4880      2912          ext.w     D0
08001900  48C0      2913          ext.l     D0
08001902  0C80 0000 2914          cmp.l     #105,D0
08001906  0069      
08001908  6600 0076 2915          bne       vsprintf_65
                    2916   vsprintf_59:
0800190C  4A2E FFCE 2917          tst.b     -50(A6)
08001910  6612      2918          bne.s     vsprintf_62
08001912  2043      2919          move.l    D3,A0
08001914  1010      2920          move.b    (A0),D0
08001916  4880      2921          ext.w     D0
08001918  48C0      2922          ext.l     D0
0800191A  0C80 0000 2923          cmp.l     #45,D0
0800191E  002D      
08001920  6600 002E 2924          bne       vsprintf_60
                    2925   vsprintf_62:
08001924  2043      2926          move.l    D3,A0
08001926  1010      2927          move.b    (A0),D0
08001928  4880      2928          ext.w     D0
0800192A  48C0      2929          ext.l     D0
0800192C  0C80 0000 2930          cmp.l     #45,D0
08001930  002D      
08001932  660E      2931          bne.s     vsprintf_63
08001934  2043      2932          move.l    D3,A0
08001936  5283      2933          addq.l    #1,D3
08001938  2242      2934          move.l    D2,A1
0800193A  5282      2935          addq.l    #1,D2
0800193C  1290      2936          move.b    (A0),(A1)
0800193E  5304      2937          subq.b    #1,D4
08001940  6008      2938          bra.s     vsprintf_64
                    2939   vsprintf_63:
08001942  2042      2940          move.l    D2,A0
08001944  5282      2941          addq.l    #1,D2
08001946  10BC 002B 2942          move.b    #43,(A0)
                    2943   vsprintf_64:
0800194A  5287      2944          addq.l    #1,D7
0800194C  6000 0032 2945          bra       vsprintf_65
                    2946   vsprintf_60:
08001950  4A2E FFCF 2947          tst.b     -49(A6)
08001954  6700 002A 2948          beq       vsprintf_65
08001958  2043      2949          move.l    D3,A0
0800195A  1010      2950          move.b    (A0),D0
0800195C  4880      2951          ext.w     D0
0800195E  48C0      2952          ext.l     D0
08001960  0C80 0000 2953          cmp.l     #45,D0
08001964  002D      
08001966  660E      2954          bne.s     vsprintf_67
08001968  2043      2955          move.l    D3,A0
0800196A  5283      2956          addq.l    #1,D3
0800196C  2242      2957          move.l    D2,A1
0800196E  5282      2958          addq.l    #1,D2
08001970  1290      2959          move.b    (A0),(A1)
08001972  5304      2960          subq.b    #1,D4
08001974  6008      2961          bra.s     vsprintf_68
                    2962   vsprintf_67:
08001976  2042      2963          move.l    D2,A0
08001978  5282      2964          addq.l    #1,D2
0800197A  10BC 0020 2965          move.b    #32,(A0)
                    2966   vsprintf_68:
0800197E  5287      2967          addq.l    #1,D7
                    2968   vsprintf_65:
08001980  4A2E FFD0 2969          tst.b     -48(A6)
08001984  6700 0066 2970          beq       vsprintf_77
08001988  206E 000C 2971          move.l    12(A6),A0
0800198C  1010      2972          move.b    (A0),D0
0800198E  4880      2973          ext.w     D0
08001990  48C0      2974          ext.l     D0
08001992  0C80 0000 2975          cmp.l     #111,D0
08001996  006F      
08001998  671A      2976          beq.s     vsprintf_73
0800199A  6E0C      2977          bgt.s     vsprintf_76
0800199C  0C80 0000 2978          cmp.l     #88,D0
080019A0  0058      
080019A2  6710      2979          beq.s     vsprintf_73
080019A4  6000 0046 2980          bra       vsprintf_77
                    2981   vsprintf_76:
080019A8  0C80 0000 2982          cmp.l     #120,D0
080019AC  0078      
080019AE  6704      2983          beq.s     vsprintf_73
080019B0  6000 003A 2984          bra       vsprintf_77
                    2985   vsprintf_73:
080019B4  2042      2986          move.l    D2,A0
080019B6  5282      2987          addq.l    #1,D2
080019B8  10BC 0030 2988          move.b    #48,(A0)
080019BC  5287      2989          addq.l    #1,D7
080019BE  206E 000C 2990          move.l    12(A6),A0
080019C2  1010      2991          move.b    (A0),D0
080019C4  4880      2992          ext.w     D0
080019C6  48C0      2993          ext.l     D0
080019C8  0C80 0000 2994          cmp.l     #120,D0
080019CC  0078      
080019CE  6712      2995          beq.s     vsprintf_79
080019D0  206E 000C 2996          move.l    12(A6),A0
080019D4  1010      2997          move.b    (A0),D0
080019D6  4880      2998          ext.w     D0
080019D8  48C0      2999          ext.l     D0
080019DA  0C80 0000 3000          cmp.l     #88,D0
080019DE  0058      
080019E0  660A      3001          bne.s     vsprintf_77
                    3002   vsprintf_79:
080019E2  2042      3003          move.l    D2,A0
080019E4  5282      3004          addq.l    #1,D2
080019E6  10BC 0078 3005          move.b    #120,(A0)
080019EA  5287      3006          addq.l    #1,D7
                    3007   vsprintf_77:
080019EC  2042      3008          move.l    D2,A0
080019EE  4210      3009          clr.b     (A0)
080019F0  206E 000C 3010          move.l    12(A6),A0
080019F4  1010      3011          move.b    (A0),D0
080019F6  4880      3012          ext.w     D0
080019F8  48C0      3013          ext.l     D0
080019FA  0C80 0000 3014          cmp.l     #105,D0
080019FE  0069      
08001A00  6700 0076 3015          beq       vsprintf_82
08001A04  6E42      3016          bgt.s     vsprintf_93
08001A06  0C80 0000 3017          cmp.l     #99,D0
08001A0A  0063      
08001A0C  6700 0084 3018          beq       vsprintf_96
08001A10  6E1C      3019          bgt.s     vsprintf_94
08001A12  0C80 0000 3020          cmp.l     #88,D0
08001A16  0058      
08001A18  6700 005E 3021          beq       vsprintf_82
08001A1C  6E00 0184 3022          bgt       vsprintf_80
08001A20  0C80 0000 3023          cmp.l     #69,D0
08001A24  0045      
08001A26  6700 0050 3024          beq       vsprintf_82
08001A2A  6000 0176 3025          bra       vsprintf_80
                    3026   vsprintf_94:
08001A2E  0C80 0000 3027          cmp.l     #101,D0
08001A32  0065      
08001A34  6700 0042 3028          beq       vsprintf_82
08001A38  6E00 0168 3029          bgt       vsprintf_80
08001A3C  0C80 0000 3030          cmp.l     #100,D0
08001A40  0064      
08001A42  6734      3031          beq.s     vsprintf_82
08001A44  6000 015C 3032          bra       vsprintf_80
                    3033   vsprintf_93:
08001A48  0C80 0000 3034          cmp.l     #117,D0
08001A4C  0075      
08001A4E  6728      3035          beq.s     vsprintf_82
08001A50  6E1A      3036          bgt.s     vsprintf_95
08001A52  0C80 0000 3037          cmp.l     #115,D0
08001A56  0073      
08001A58  6700 0038 3038          beq       vsprintf_96
08001A5C  6E00 0144 3039          bgt       vsprintf_80
08001A60  0C80 0000 3040          cmp.l     #111,D0
08001A64  006F      
08001A66  6710      3041          beq.s     vsprintf_82
08001A68  6000 0138 3042          bra       vsprintf_80
                    3043   vsprintf_95:
08001A6C  0C80 0000 3044          cmp.l     #120,D0
08001A70  0078      
08001A72  6704      3045          beq.s     vsprintf_82
08001A74  6000 012C 3046          bra       vsprintf_80
                    3047   vsprintf_82:
08001A78  4A2E FFD2 3048          tst.b     -46(A6)
08001A7C  6714      3049          beq.s     vsprintf_96
08001A7E  4A2E FFCD 3050          tst.b     -51(A6)
08001A82  660E      3051          bne.s     vsprintf_96
08001A84  200D      3052          move.l    A5,D0
08001A86  9087      3053          sub.l     D7,D0
08001A88  4884      3054          ext.w     D4
08001A8A  48C4      3055          ext.l     D4
08001A8C  9084      3056          sub.l     D4,D0
08001A8E  2D40 FFFC 3057          move.l    D0,-4(A6)
                    3058   vsprintf_96:
08001A92  202E FFFC 3059          move.l    -4(A6),D0
08001A96  0C80 0000 3060          cmp.l     #0,D0
08001A9A  0000      
08001A9C  6C04      3061          bge.s     vsprintf_98
08001A9E  42AE FFFC 3062          clr.l     -4(A6)
                    3063   vsprintf_98:
08001AA2  4A2E FFCD 3064          tst.b     -51(A6)
08001AA6  6600 0030 3065          bne       vsprintf_104
08001AAA  4884      3066          ext.w     D4
08001AAC  48C4      3067          ext.l     D4
08001AAE  2004      3068          move.l    D4,D0
08001AB0  D0AE FFFC 3069          add.l     -4(A6),D0
08001AB4  D087      3070          add.l     D7,D0
08001AB6  1D40 FFD1 3071          move.b    D0,-47(A6)
                    3072   vsprintf_102:
08001ABA  102E FFD1 3073          move.b    -47(A6),D0
08001ABE  4880      3074          ext.w     D0
08001AC0  48C0      3075          ext.l     D0
08001AC2  220D      3076          move.l    A5,D1
08001AC4  534D      3077          subq.w    #1,A5
08001AC6  B081      3078          cmp.l     D1,D0
08001AC8  6C0E      3079          bge.s     vsprintf_104
08001ACA  4878 0020 3080          pea       32
08001ACE  2F0A      3081          move.l    A2,-(A7)
08001AD0  4E93      3082          jsr       (A3)
08001AD2  504F      3083          addq.w    #8,A7
08001AD4  5286      3084          addq.l    #1,D6
08001AD6  60E2      3085          bra       vsprintf_102
                    3086   vsprintf_104:
08001AD8  41EE FFD4 3087          lea       -44(A6),A0
08001ADC  2408      3088          move.l    A0,D2
                    3089   vsprintf_105:
08001ADE  2042      3090          move.l    D2,A0
08001AE0  4A10      3091          tst.b     (A0)
08001AE2  6716      3092          beq.s     vsprintf_107
08001AE4  2042      3093          move.l    D2,A0
08001AE6  5282      3094          addq.l    #1,D2
08001AE8  1210      3095          move.b    (A0),D1
08001AEA  4881      3096          ext.w     D1
08001AEC  48C1      3097          ext.l     D1
08001AEE  2F01      3098          move.l    D1,-(A7)
08001AF0  2F0A      3099          move.l    A2,-(A7)
08001AF2  4E93      3100          jsr       (A3)
08001AF4  504F      3101          addq.w    #8,A7
08001AF6  5286      3102          addq.l    #1,D6
08001AF8  60E4      3103          bra       vsprintf_105
                    3104   vsprintf_107:
08001AFA  202E FFFC 3105          move.l    -4(A6),D0
08001AFE  1D40 FFD1 3106          move.b    D0,-47(A6)
                    3107   vsprintf_108:
08001B02  102E FFD1 3108          move.b    -47(A6),D0
08001B06  532E FFD1 3109          subq.b    #1,-47(A6)
08001B0A  4A00      3110          tst.b     D0
08001B0C  670E      3111          beq.s     vsprintf_110
08001B0E  4878 0030 3112          pea       48
08001B12  2F0A      3113          move.l    A2,-(A7)
08001B14  4E93      3114          jsr       (A3)
08001B16  504F      3115          addq.w    #8,A7
08001B18  5286      3116          addq.l    #1,D6
08001B1A  60E6      3117          bra       vsprintf_108
                    3118   vsprintf_110:
08001B1C  2043      3119          move.l    D3,A0
08001B1E  4A10      3120          tst.b     (A0)
08001B20  6700 0048 3121          beq       vsprintf_113
08001B24  206E 000C 3122          move.l    12(A6),A0
08001B28  1010      3123          move.b    (A0),D0
08001B2A  4880      3124          ext.w     D0
08001B2C  48C0      3125          ext.l     D0
08001B2E  0C80 0000 3126          cmp.l     #115,D0
08001B32  0073      
08001B34  670C      3127          beq.s     vsprintf_116
08001B36  6E18      3128          bgt.s     vsprintf_119
08001B38  0C80 0000 3129          cmp.l     #99,D0
08001B3C  0063      
08001B3E  6702      3130          beq.s     vsprintf_116
08001B40  600E      3131          bra.s     vsprintf_119
                    3132   vsprintf_116:
08001B42  2005      3133          move.l    D5,D0
08001B44  5385      3134          subq.l    #1,D5
08001B46  0C80 0000 3135          cmp.l     #0,D0
08001B4A  0000      
08001B4C  6E02      3136          bgt.s     vsprintf_119
08001B4E  6016      3137          bra.s     vsprintf_115
                    3138   vsprintf_119:
08001B50  2043      3139          move.l    D3,A0
08001B52  5283      3140          addq.l    #1,D3
08001B54  1210      3141          move.b    (A0),D1
08001B56  4881      3142          ext.w     D1
08001B58  48C1      3143          ext.l     D1
08001B5A  2F01      3144          move.l    D1,-(A7)
08001B5C  2F0A      3145          move.l    A2,-(A7)
08001B5E  4E93      3146          jsr       (A3)
08001B60  504F      3147          addq.w    #8,A7
08001B62  5286      3148          addq.l    #1,D6
08001B64  6002      3149          bra.s     vsprintf_112
                    3150   vsprintf_115:
08001B66  6002      3151          bra.s     vsprintf_113
                    3152   vsprintf_112:
08001B68  60B2      3153          bra       vsprintf_110
                    3154   vsprintf_113:
08001B6A  4A2E FFCD 3155          tst.b     -51(A6)
08001B6E  6700 0030 3156          beq       vsprintf_125
08001B72  4884      3157          ext.w     D4
08001B74  48C4      3158          ext.l     D4
08001B76  2004      3159          move.l    D4,D0
08001B78  D0AE FFFC 3160          add.l     -4(A6),D0
08001B7C  D087      3161          add.l     D7,D0
08001B7E  1D40 FFD1 3162          move.b    D0,-47(A6)
                    3163   vsprintf_123:
08001B82  102E FFD1 3164          move.b    -47(A6),D0
08001B86  4880      3165          ext.w     D0
08001B88  48C0      3166          ext.l     D0
08001B8A  220D      3167          move.l    A5,D1
08001B8C  534D      3168          subq.w    #1,A5
08001B8E  B081      3169          cmp.l     D1,D0
08001B90  6C0E      3170          bge.s     vsprintf_125
08001B92  4878 0020 3171          pea       32
08001B96  2F0A      3172          move.l    A2,-(A7)
08001B98  4E93      3173          jsr       (A3)
08001B9A  504F      3174          addq.w    #8,A7
08001B9C  5386      3175          subq.l    #1,D6
08001B9E  60E2      3176          bra       vsprintf_123
                    3177   vsprintf_125:
08001BA0  6014      3178          bra.s     vsprintf_81
                    3179   vsprintf_80:
08001BA2  206E 000C 3180          move.l    12(A6),A0
08001BA6  1210      3181          move.b    (A0),D1
08001BA8  4881      3182          ext.w     D1
08001BAA  48C1      3183          ext.l     D1
08001BAC  2F01      3184          move.l    D1,-(A7)
08001BAE  2F0A      3185          move.l    A2,-(A7)
08001BB0  4E93      3186          jsr       (A3)
08001BB2  504F      3187          addq.w    #8,A7
08001BB4  5286      3188          addq.l    #1,D6
                    3189   vsprintf_81:
08001BB6  52AE 000C 3190          addq.l    #1,12(A6)
                    3191   vsprintf_2:
08001BBA  6000 F9D6 3192          bra       vsprintf_1
                    3193   vsprintf_3:
08001BBE  4A92      3194          tst.l     (A2)
08001BC0  6710      3195          beq.s     vsprintf_126
08001BC2  4201      3196          clr.b     D1
08001BC4  C2BC 0000 3197          and.l     #255,D1
08001BC8  00FF      
08001BCA  2F01      3198          move.l    D1,-(A7)
08001BCC  2F0A      3199          move.l    A2,-(A7)
08001BCE  4E93      3200          jsr       (A3)
08001BD0  504F      3201          addq.w    #8,A7
                    3202   vsprintf_126:
08001BD2  2006      3203          move.l    D6,D0
08001BD4  4CDF 3CFC 3204          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08001BD8  4E5E      3205          unlk      A6
08001BDA  4E75      3206          rts
                    3207   _putch:
08001BDC  4E56 0000 3208          link      A6,#0
08001BE0  48E7 2000 3209          movem.l   D2,-(A7)
08001BE4  242E 0008 3210          move.l    8(A6),D2
08001BE8  0C82 0000 3211          cmp.l     #10,D2
08001BEC  000A      
08001BEE  660A      3212          bne.s     putch_1
08001BF0  4878 000D 3213          pea       13
08001BF4  6100 E548 3214          bsr       __putch
08001BF8  584F      3215          addq.w    #4,A7
                    3216   putch_1:
08001BFA  2F02      3217          move.l    D2,-(A7)
08001BFC  6100 E540 3218          bsr       __putch
08001C00  584F      3219          addq.w    #4,A7
08001C02  2002      3220          move.l    D2,D0
08001C04  4CDF 0004 3221          movem.l   (A7)+,D2
08001C08  4E5E      3222          unlk      A6
08001C0A  4E75      3223          rts
                    3224   _getch:
08001C0C  48E7 2000 3225          movem.l   D2,-(A7)
08001C10  2439 0800 3226          move.l    __ungetbuf,D2
08001C14  2220      
08001C16  2039 0800 3227          move.l    __ungetbuf,D0
08001C1A  2220      
08001C1C  0C80 FFFF 3228          cmp.l     #-1,D0
08001C20  FFFF      
08001C22  670C      3229          beq.s     getch_1
08001C24  23FC FFFF 3230          move.l    #-1,__ungetbuf
08001C28  FFFF 0800 
08001C2C  2220      
08001C2E  6010      3231          bra.s     getch_3
                    3232   getch_1:
08001C30  6100 E53A 3233          bsr       __getch
08001C34  2400      3234          move.l    D0,D2
08001C36  0C80 0000 3235          cmp.l     #13,D0
08001C3A  000D      
08001C3C  6602      3236          bne.s     getch_3
08001C3E  740A      3237          moveq     #10,D2
                    3238   getch_3:
08001C40  2002      3239          move.l    D2,D0
08001C42  4CDF 0004 3240          movem.l   (A7)+,D2
08001C46  4E75      3241          rts
                    3242   @itoa_convert:
08001C48  4E56 0000 3243          link      A6,#0
08001C4C  48E7 3C00 3244          movem.l   D2/D3/D4/D5,-(A7)
08001C50  242E 0008 3245          move.l    8(A6),D2
08001C54  262E 0010 3246          move.l    16(A6),D3
08001C58  2A2E 000C 3247          move.l    12(A6),D5
08001C5C  2F05      3248          move.l    D5,-(A7)
08001C5E  2F03      3249          move.l    D3,-(A7)
08001C60  6100 0160 3250          bsr       ULDIV
08001C64  202F 0004 3251          move.l    4(A7),D0
08001C68  504F      3252          addq.w    #8,A7
08001C6A  2800      3253          move.l    D0,D4
08001C6C  BA83      3254          cmp.l     D3,D5
08001C6E  651A      3255          blo.s     @itoa_convert_1
08001C70  2F03      3256          move.l    D3,-(A7)
08001C72  2F05      3257          move.l    D5,-(A7)
08001C74  2F03      3258          move.l    D3,-(A7)
08001C76  6100 014A 3259          bsr       ULDIV
08001C7A  2217      3260          move.l    (A7),D1
08001C7C  504F      3261          addq.w    #8,A7
08001C7E  2F01      3262          move.l    D1,-(A7)
08001C80  2F02      3263          move.l    D2,-(A7)
08001C82  61C4      3264          bsr       @itoa_convert
08001C84  DEFC 000C 3265          add.w     #12,A7
08001C88  2400      3266          move.l    D0,D2
                    3267   @itoa_convert_1:
08001C8A  0C84 0000 3268          cmp.l     #9,D4
08001C8E  0009      
08001C90  6E0A      3269          bgt.s     @itoa_convert_3
08001C92  2004      3270          move.l    D4,D0
08001C94  0680 0000 3271          add.l     #48,D0
08001C98  0030      
08001C9A  600E      3272          bra.s     @itoa_convert_4
                    3273   @itoa_convert_3:
08001C9C  2004      3274          move.l    D4,D0
08001C9E  0680 0000 3275          add.l     #97,D0
08001CA2  0061      
08001CA4  0480 0000 3276          sub.l     #10,D0
08001CA8  000A      
                    3277   @itoa_convert_4:
08001CAA  2042      3278          move.l    D2,A0
08001CAC  1080      3279          move.b    D0,(A0)
08001CAE  2002      3280          move.l    D2,D0
08001CB0  5280      3281          addq.l    #1,D0
08001CB2  4CDF 003C 3282          movem.l   (A7)+,D2/D3/D4/D5
08001CB6  4E5E      3283          unlk      A6
08001CB8  4E75      3284          rts
                    3285   _ltoa:
08001CBA  4E56 0000 3286          link      A6,#0
08001CBE  48E7 3C00 3287          movem.l   D2/D3/D4/D5,-(A7)
08001CC2  242E 0008 3288          move.l    8(A6),D2
08001CC6  262E 000C 3289          move.l    12(A6),D3
08001CCA  2A2E 0010 3290          move.l    16(A6),D5
08001CCE  2803      3291          move.l    D3,D4
08001CD0  0C85 0000 3292          cmp.l     #2,D5
08001CD4  0002      
08001CD6  6D08      3293          blt.s     ltoa_3
08001CD8  0C85 0000 3294          cmp.l     #36,D5
08001CDC  0024      
08001CDE  6F06      3295          ble.s     ltoa_1
                    3296   ltoa_3:
08001CE0  2003      3297          move.l    D3,D0
08001CE2  6000 0052 3298          bra       ltoa_4
                    3299   ltoa_1:
08001CE6  0C85 0000 3300          cmp.l     #10,D5
08001CEA  000A      
08001CEC  6600 0032 3301          bne       ltoa_5
08001CF0  0C82 0000 3302          cmp.l     #0,D2
08001CF4  0000      
08001CF6  6C28      3303          bge.s     ltoa_5
08001CF8  2002      3304          move.l    D2,D0
08001CFA  4480      3305          neg.l     D0
08001CFC  2400      3306          move.l    D0,D2
08001CFE  0C82 0000 3307          cmp.l     #0,D2
08001D02  0000      
08001D04  6C12      3308          bge.s     ltoa_7
08001D06  4879 0800 3309          pea       @itoa_1
08001D0A  2334      
08001D0C  2F03      3310          move.l    D3,-(A7)
08001D0E  6100 00A2 3311          bsr       _strcpy
08001D12  504F      3312          addq.w    #8,A7
08001D14  2003      3313          move.l    D3,D0
08001D16  601E      3314          bra.s     ltoa_4
                    3315   ltoa_7:
08001D18  2044      3316          move.l    D4,A0
08001D1A  5284      3317          addq.l    #1,D4
08001D1C  10BC 002D 3318          move.b    #45,(A0)
                    3319   ltoa_5:
08001D20  2F05      3320          move.l    D5,-(A7)
08001D22  2F02      3321          move.l    D2,-(A7)
08001D24  2F04      3322          move.l    D4,-(A7)
08001D26  6100 FF20 3323          bsr       @itoa_convert
08001D2A  DEFC 000C 3324          add.w     #12,A7
08001D2E  2800      3325          move.l    D0,D4
08001D30  2044      3326          move.l    D4,A0
08001D32  4210      3327          clr.b     (A0)
08001D34  2003      3328          move.l    D3,D0
                    3329   ltoa_4:
08001D36  4CDF 003C 3330          movem.l   (A7)+,D2/D3/D4/D5
08001D3A  4E5E      3331          unlk      A6
08001D3C  4E75      3332          rts
                    3333   _ultoa:
08001D3E  4E56 0000 3334          link      A6,#0
08001D42  48E7 3800 3335          movem.l   D2/D3/D4,-(A7)
08001D46  262E 0010 3336          move.l    16(A6),D3
08001D4A  282E 000C 3337          move.l    12(A6),D4
08001D4E  2404      3338          move.l    D4,D2
08001D50  0C83 0000 3339          cmp.l     #2,D3
08001D54  0002      
08001D56  6D08      3340          blt.s     ultoa_3
08001D58  0C83 0000 3341          cmp.l     #36,D3
08001D5C  0024      
08001D5E  6F04      3342          ble.s     ultoa_1
                    3343   ultoa_3:
08001D60  2004      3344          move.l    D4,D0
08001D62  6018      3345          bra.s     ultoa_4
                    3346   ultoa_1:
08001D64  2F03      3347          move.l    D3,-(A7)
08001D66  2F2E 0008 3348          move.l    8(A6),-(A7)
08001D6A  2F02      3349          move.l    D2,-(A7)
08001D6C  6100 FEDA 3350          bsr       @itoa_convert
08001D70  DEFC 000C 3351          add.w     #12,A7
08001D74  2400      3352          move.l    D0,D2
08001D76  2042      3353          move.l    D2,A0
08001D78  4210      3354          clr.b     (A0)
08001D7A  2004      3355          move.l    D4,D0
                    3356   ultoa_4:
08001D7C  4CDF 001C 3357          movem.l   (A7)+,D2/D3/D4
08001D80  4E5E      3358          unlk      A6
08001D82  4E75      3359          rts
                    3360   _itoa:
08001D84  4E56 0000 3361          link      A6,#0
08001D88  2F2E 0010 3362          move.l    16(A6),-(A7)
08001D8C  2F2E 000C 3363          move.l    12(A6),-(A7)
08001D90  2F2E 0008 3364          move.l    8(A6),-(A7)
08001D94  6100 FF24 3365          bsr       _ltoa
08001D98  DEFC 000C 3366          add.w     #12,A7
08001D9C  4E5E      3367          unlk      A6
08001D9E  4E75      3368          rts
                    3369   _strlen:
08001DA0  206F 0004 3370          move.l    (4,A7),A0
08001DA4  2248      3371          move.l    A0,A1
                    3372   strlen_1:
08001DA6  4A19      3373          tst.b     (A1)+
08001DA8  66FC      3374          bne       strlen_1
08001DAA  2009      3375          move.l    A1,D0
08001DAC  9088      3376          sub.l     A0,D0
08001DAE  5380      3377          subq.l    #1,D0
08001DB0  4E75      3378          rts
                    3379   _strcpy:
08001DB2  206F 0004 3380          move.l    (4,A7),A0
08001DB6  226F 0008 3381          move.l    (8,A7),A1
08001DBA  2008      3382          move.l    A0,D0
                    3383   strcpy_1:
08001DBC  10D9      3384          move.b    (A1)+,(A0)+
08001DBE  66FC      3385          bne       strcpy_1
08001DC0  4E75      3386          rts
                    3387   ULDIV:
08001DC2  4E56 0000 3388          link    A6,#0
08001DC6  48E7 C000 3389          movem.l D0/D1,-(A7)
08001DCA  222E 0008 3390          move.l  8(A6),D1
08001DCE  202E 000C 3391          move.l  12(A6),D0
08001DD2  6036      3392          bra.s   ldiv_3
                    3393   LDIV:
08001DD4  4E56 0000 3394          link    A6,#0
08001DD8  48E7 C000 3395          movem.l D0/D1,-(A7)
08001DDC  222E 0008 3396          move.l  8(A6),D1
08001DE0  202E 000C 3397          move.l  12(A6),D0
08001DE4  4A80      3398          tst.l   D0
08001DE6  6A0E      3399          bpl.s   ldiv_1
08001DE8  4480      3400          neg.l   D0
08001DEA  4A81      3401          tst.l   D1
08001DEC  6A14      3402          bpl.s   ldiv_2
08001DEE  4481      3403          neg.l   D1
08001DF0  612A      3404          bsr.s   dodiv
08001DF2  4481      3405          neg.l   D1
08001DF4  6016      3406          bra.s   ldiv_4
                    3407   ldiv_1:
08001DF6  4A81      3408          tst.l   D1
08001DF8  6A10      3409          bpl.s   ldiv_3
08001DFA  4481      3410          neg.l   D1
08001DFC  611E      3411          bsr.s   dodiv
08001DFE  4480      3412          neg.l   D0
08001E00  600A      3413          bra.s   ldiv_4
                    3414   ldiv_2:
08001E02  6118      3415          bsr.s   dodiv
08001E04  4480      3416          neg.l   D0
08001E06  4481      3417          neg.l   D1
08001E08  6002      3418          bra.s   ldiv_4
                    3419   ldiv_3:
08001E0A  6110      3420          bsr.s   dodiv
                    3421   ldiv_4:
08001E0C  2D40 0008 3422          move.l  D0,8(A6)
08001E10  2D41 000C 3423          move.l  D1,12(A6)
08001E14  4CDF 0003 3424          movem.l (A7)+,D0/D1
08001E18  4E5E      3425          unlk    A6
08001E1A  4E75      3426          rts
                    3427   dodiv:
08001E1C  0C81 0000 3428          cmpi.l  #$FFFF,D1
08001E20  FFFF      
08001E22  6236      3429          bhi.s   dodiv_2
08001E24  0C80 0000 3430          cmpi.l  #$FFFF,D0
08001E28  FFFF      
08001E2A  6210      3431          bhi.s   dodiv_1
08001E2C  80C1      3432          divu    D1,D0
08001E2E  2200      3433          move.l  D0,D1
08001E30  4241      3434          clr.w   D1
08001E32  4841      3435          swap    D1
08001E34  0280 0000 3436          andi.l  #$FFFF,D0
08001E38  FFFF      
08001E3A  4E75      3437          rts
                    3438   dodiv_1:
08001E3C  48A7 A000 3439          movem.w D0/D2,-(A7)
08001E40  4240      3440          clr.w   D0
08001E42  4840      3441          swap    D0
08001E44  80C1      3442          divu    D1,D0
08001E46  3400      3443          move.w  D0,D2
08001E48  301F      3444          move.w  (A7)+,D0
08001E4A  80C1      3445          divu    D1,D0
08001E4C  4840      3446          swap    D0
08001E4E  4281      3447          clr.l   D1
08001E50  3200      3448          move.w  D0,D1
08001E52  3002      3449          move.w  D2,D0
08001E54  4840      3450          swap    D0
08001E56  341F      3451          move.w  (A7)+,D2
08001E58  4E75      3452          rts
                    3453   dodiv_2:
08001E5A  48E7 3800 3454          movem.l D2/D3/D4,-(A7)
08001E5E  2401      3455          move.l  D1,D2
08001E60  4242      3456          clr.w   D2
08001E62  4842      3457          swap    D2
08001E64  5282      3458          addq.l  #1,D2
08001E66  2600      3459          move.l  D0,D3
08001E68  2801      3460          move.l  D1,D4
08001E6A  2202      3461          move.l  D2,D1
08001E6C  61CE      3462          bsr.s   dodiv_1
08001E6E  2204      3463          move.l  D4,D1
08001E70  82C2      3464          divu    D2,D1
08001E72  80C1      3465          divu    D1,D0
08001E74  0280 0000 3466          andi.l  #$FFFF,D0
08001E78  FFFF      
                    3467   dodiv_3:
08001E7A  2204      3468          move.l  D4,D1
08001E7C  2404      3469          move.l  D4,D2
08001E7E  4842      3470          swap    D2
08001E80  C2C0      3471          mulu    D0,D1
08001E82  C4C0      3472          mulu    D0,D2
08001E84  4842      3473          swap    D2
08001E86  D282      3474          add.l   D2,D1
08001E88  9283      3475          sub.l   D3,D1
08001E8A  620A      3476          bhi.s   dodiv_4
08001E8C  4481      3477          neg.l   D1
08001E8E  B881      3478          cmp.l   D1,D4
08001E90  6208      3479          bhi.s   dodiv_5
08001E92  5280      3480          addq.l  #1,D0
08001E94  60E4      3481          bra.s   dodiv_3
                    3482   dodiv_4:
08001E96  5380      3483          subq.l  #1,D0
08001E98  60E0      3484          bra.s   dodiv_3
                    3485   dodiv_5:
08001E9A  4CDF 001C 3486          movem.l (A7)+,D2/D3/D4
08001E9E  4E75      3487          rts
                    3488          section   const
08001EA0            3489                   align
                    3490   
                    3491   
                    3492   @m68kus~1_1:
08001EA0  0D0A 0A45 3493          dc.b      13,10,10,69,110,116,101,114,32,117,112,112,101
08001EA4  6E74 6572 
08001EA8  2075 7070 
08001EAC  65        
08001EAD  7220 6279 3494          dc.b      114,32,98,121,116,101,58,32,0
08001EB1  7465 3A20 
08001EB5  00        
                    3495   @m68kus~1_2:
08001EB6  0D0A 0A55 3496          dc.b      13,10,10,85,80,80,69,82,32,66,89,84,69,58,32
08001EBA  5050 4552 
08001EBE  2042 5954 
08001EC2  453A 20   
08001EC5  2578 2000 3497          dc.b      37,120,32,0
                    3498   @m68kus~1_3:
08001ECA  0D0A 0A45 3499          dc.b      13,10,10,69,110,116,101,114,32,109,105,100,32
08001ECE  6E74 6572 
08001ED2  206D 6964 
08001ED6  20        
08001ED7  6279 7465 3500          dc.b      98,121,116,101,58,32,0
08001EDB  3A20 00   
                    3501   @m68kus~1_4:
08001EDE  0D0A 0A4D 3502          dc.b      13,10,10,77,73,68,32,66,89,84,69,58,32,37,120
08001EE2  4944 2042 
08001EE6  5954 453A 
08001EEA  2025 78   
08001EED  2000      3503          dc.b      32,0
                    3504   @m68kus~1_5:
08001EF0  0D0A 0A45 3505          dc.b      13,10,10,69,110,116,101,114,32,108,111,119,101
08001EF4  6E74 6572 
08001EF8  206C 6F77 
08001EFC  65        
08001EFD  7220 6279 3506          dc.b      114,32,98,121,116,101,58,32,0
08001F01  7465 3A20 
08001F05  00        
                    3507   @m68kus~1_6:
08001F06  0D0A 0A4C 3508          dc.b      13,10,10,76,79,87,69,82,32,66,89,84,69,58,32
08001F0A  4F57 4552 
08001F0E  2042 5954 
08001F12  453A 20   
08001F15  2578 2000 3509          dc.b      37,120,32,0
                    3510   @m68kus~1_7:
08001F1A  353A 2077 3511          dc.b      53,58,32,119,114,105,116,101,32,116,111,32,102
08001F1E  7269 7465 
08001F22  2074 6F20 
08001F26  66        
08001F27  6C61 7368 3512          dc.b      108,97,115,104,32,10,10,0
08001F2B  200A 0A00 
                    3513   @m68kus~1_8:
08001F30  373A 2072 3514          dc.b      55,58,32,114,101,97,100,105,110,103,32,102,108
08001F34  6561 6469 
08001F38  6E67 2066 
08001F3C  6C        
08001F3D  6173 6820 3515          dc.b      97,115,104,32,99,104,105,112,32,102,111,114
08001F41  6368 6970 
08001F45  2066 6F72 
08001F49  2076 6572 3516          dc.b      32,118,101,114,105,102,105,99,97,116,105,111
08001F4D  6966 6963 
08001F51  6174 696F 
08001F55  6E20 0A0A 3517          dc.b      110,32,10,10,0
08001F59  00        
                    3518   @m68kus~1_9:
08001F5A  0D0A 0A72 3519          dc.b      13,10,10,114,101,116,58,32,37,120,32,0
08001F5E  6574 3A20 
08001F62  2578 2000 
                    3520   @m68kus~1_10:
08001F66  0D0A 0A45 3521          dc.b      13,10,10,69,110,116,101,114,32,117,112,112,101
08001F6A  6E74 6572 
08001F6E  2075 7070 
08001F72  65        
08001F73  7220 6279 3522          dc.b      114,32,98,121,116,101,58,0
08001F77  7465 3A00 
                    3523   @m68kus~1_11:
08001F7C  0D0A 0A55 3524          dc.b      13,10,10,85,80,80,69,82,32,66,89,84,69,58,32
08001F80  5050 4552 
08001F84  2042 5954 
08001F88  453A 20   
08001F8B  2578 00   3525          dc.b      37,120,0
                    3526   @m68kus~1_12:
08001F8E  0D0A 0A45 3527          dc.b      13,10,10,69,110,116,101,114,32,109,105,100,32
08001F92  6E74 6572 
08001F96  206D 6964 
08001F9A  20        
08001F9B  6279 7465 3528          dc.b      98,121,116,101,58,0
08001F9F  3A00      
                    3529   @m68kus~1_13:
08001FA2  0D0A 0A4D 3530          dc.b      13,10,10,77,73,68,32,66,89,84,69,58,32,37,120
08001FA6  4944 2042 
08001FAA  5954 453A 
08001FAE  2025 78   
08001FB1  00        3531          dc.b      0
                    3532   @m68kus~1_14:
08001FB2  0D0A 0A45 3533          dc.b      13,10,10,69,110,116,101,114,32,108,111,119,101
08001FB6  6E74 6572 
08001FBA  206C 6F77 
08001FBE  65        
08001FBF  7220 6279 3534          dc.b      114,32,98,121,116,101,58,0
08001FC3  7465 3A00 
                    3535   @m68kus~1_15:
08001FC8  0D0A 0A4C 3536          dc.b      13,10,10,76,79,87,69,82,32,66,89,84,69,58,32
08001FCC  4F57 4552 
08001FD0  2042 5954 
08001FD4  453A 20   
08001FD7  2578 00   3537          dc.b      37,120,0
                    3538   @m68kus~1_16:
08001FDA  0D0A 5265 3539          dc.b      13,10,82,101,97,100,105,110,103,32,102,108,97
08001FDE  6164 696E 
08001FE2  6720 666C 
08001FE6  61        
08001FE7  7368 2063 3540          dc.b      115,104,32,99,104,105,112,32,102,111,114,32
08001FEB  6869 7020 
08001FEF  666F 7220 
08001FF3  7665 7269 3541          dc.b      118,101,114,105,102,105,99,97,116,105,111,110
08001FF7  6669 6361 
08001FFB  7469 6F6E 
08001FFF  00        3542          dc.b      0
                    3543   @m68kus~1_17:
08002000  0D0A 506F 3544          dc.b      13,10,80,111,108,108,105,110,103,32,102,108
08002004  6C6C 696E 
08002008  6720 666C 
0800200C  6173 6820 3545          dc.b      97,115,104,32,99,104,105,112,32,116,111,32,115
08002010  6368 6970 
08002014  2074 6F20 
08002018  73        
08002019  6565 2069 3546          dc.b      101,101,32,105,102,32,114,101,97,100,121,32
0800201D  6620 7265 
08002021  6164 7920 
08002025  0A0A 00   3547          dc.b      10,10,0
                    3548   @m68kus~1_18:
08002028  0D0A 4572 3549          dc.b      13,10,69,114,97,115,101,32,99,104,105,112,0
0800202C  6173 6520 
08002030  6368 6970 
08002034  00        
                    3550   @m68kus~1_19:
08002036  0D0A 0A45 3551          dc.b      13,10,10,69,110,116,101,114,32,83,80,73,32,111
0800203A  6E74 6572 
0800203E  2053 5049 
08002042  206F      
08002044  7065 7261 3552          dc.b      112,101,114,97,116,105,111,110,40,49,32,45,32
08002048  7469 6F6E 
0800204C  2831 202D 
08002050  20        
08002051  4572 6173 3553          dc.b      69,114,97,115,101,32,67,104,105,112,44,32,50
08002055  6520 4368 
08002059  6970 2C20 
0800205D  32        
0800205E  202D 2057 3554          dc.b      32,45,32,87,114,105,116,101,32,116,111,32,83
08002062  7269 7465 
08002066  2074 6F20 
0800206A  53        
0800206B  5049 2C20 3555          dc.b      80,73,44,32,51,32,45,32,82,101,97,100,32,102
0800206F  3320 2D20 
08002073  5265 6164 
08002077  2066      
08002079  726F 6D20 3556          dc.b      114,111,109,32,83,80,73,41,58,32,0
0800207D  5350 4929 
08002081  3A20 00   
                    3557   @m68kus~1_20:
08002084  0D0A 0A53 3558          dc.b      13,10,10,83,80,73,32,111,112,101,114,97,116
08002088  5049 206F 
0800208C  7065 7261 
08002090  74        
08002091  696F 6E3A 3559          dc.b      105,111,110,58,32,37,120,32,0
08002095  2025 7820 
08002099  00        
                    3560   @m68kus~1_21:
0800209A  0D0A 4368 3561          dc.b      13,10,67,104,105,112,32,101,114,97,115,101,32
0800209E  6970 2065 
080020A2  7261 7365 
080020A6  20        
080020A7  6F70 6572 3562          dc.b      111,112,101,114,97,116,105,111,110,32,115,101
080020AB  6174 696F 
080020AF  6E20 7365 
080020B3  6C65 6374 3563          dc.b      108,101,99,116,101,100,0
080020B7  6564 00   
                    3564   @m68kus~1_22:
080020BA  0D0A 456E 3565          dc.b      13,10,69,110,100,32,111,102,32,101,114,97,115
080020BE  6420 6F66 
080020C2  2065 7261 
080020C6  73        
080020C7  6520 6F70 3566          dc.b      101,32,111,112,101,114,97,116,105,111,110,32
080020CB  6572 6174 
080020CF  696F 6E20 
080020D3  2E2E 2E00 3567          dc.b      46,46,46,0
                    3568   @m68kus~1_23:
080020D8  0D0A 0A57 3569          dc.b      13,10,10,87,114,105,116,101,32,111,112,101,114
080020DC  7269 7465 
080020E0  206F 7065 
080020E4  72        
080020E5  6174 696F 3570          dc.b      97,116,105,111,110,32,115,101,108,101,99,116
080020E9  6E20 7365 
080020ED  6C65 6374 
080020F1  6564 200A 3571          dc.b      101,100,32,10,10,0
080020F5  0A00      
                    3572   @m68kus~1_24:
080020F8  0D0A 0A45 3573          dc.b      13,10,10,69,110,116,101,114,32,97,32,118,97
080020FC  6E74 6572 
08002100  2061 2076 
08002104  61        
08002105  6C75 6520 3574          dc.b      108,117,101,32,102,111,114,32,119,114,105,116
08002109  666F 7220 
0800210D  7772 6974 
08002111  653A 2000 3575          dc.b      101,58,32,0
                    3576   @m68kus~1_25:
08002116  0D0A 5661 3577          dc.b      13,10,86,97,108,117,101,32,116,111,32,119,114
0800211A  6C75 6520 
0800211E  746F 2077 
08002122  72        
08002123  6974 653A 3578          dc.b      105,116,101,58,32,37,120,0
08002127  2025 7800 
                    3579   @m68kus~1_26:
0800212C  0D0A 5661 3580          dc.b      13,10,86,97,108,117,101,32,114,101,116,117,114
08002130  6C75 6520 
08002134  7265 7475 
08002138  72        
08002139  6E65 643A 3581          dc.b      110,101,100,58,32,37,120,0
0800213D  2025 7800 
                    3582   @m68kus~1_27:
08002142  0D0A 656E 3583          dc.b      13,10,101,110,100,32,111,102,32,119,114,105
08002146  6420 6F66 
0800214A  2077 7269 
0800214E  7465 206F 3584          dc.b      116,101,32,111,112,101,114,97,116,105,111,110
08002152  7065 7261 
08002156  7469 6F6E 
0800215A  202E 2E2E 3585          dc.b      32,46,46,46,0
0800215E  00        
                    3586   @m68kus~1_28:
08002160  0D0A 0A52 3587          dc.b      13,10,10,82,101,97,100,32,111,112,101,114,97
08002164  6561 6420 
08002168  6F70 6572 
0800216C  61        
0800216D  7469 6F6E 3588          dc.b      116,105,111,110,32,115,101,108,101,99,116,101
08002171  2073 656C 
08002175  6563 7465 
08002179  6400      3589          dc.b      100,0
                    3590   @m68kus~1_29:
0800217C  0D0A 0A56 3591          dc.b      13,10,10,86,97,108,117,101,32,114,101,116,117
08002180  616C 7565 
08002184  2072 6574 
08002188  75        
08002189  726E 6564 3592          dc.b      114,110,101,100,58,32,37,120,32,0
0800218D  3A20 2578 
08002191  2000      
                    3593   @m68kus~1_30:
08002194  0D0A 0A65 3594          dc.b      13,10,10,101,110,100,32,111,102,32,114,101,97
08002198  6E64 206F 
0800219C  6620 7265 
080021A0  61        
080021A1  6420 6F70 3595          dc.b      100,32,111,112,101,114,97,116,105,111,110,32
080021A5  6572 6174 
080021A9  696F 6E20 
080021AD  2E2E 2E00 3596          dc.b      46,46,46,0
                    3597   @m68kus~1_31:
080021B2  0D0A 0A49 3598          dc.b      13,10,10,73,110,118,97,108,105,100,32,111,112
080021B6  6E76 616C 
080021BA  6964 206F 
080021BE  70        
080021BF  6572 6174 3599          dc.b      101,114,97,116,105,111,110,32,46,46,46,0
080021C3  696F 6E20 
080021C7  2E2E 2E00 
                    3600   @m68kus~1_32:
080021CC  0D0A 0A54 3601          dc.b      13,10,10,84,114,121,32,97,103,97,105,110,33
080021D0  7279 2061 
080021D4  6761 696E 
080021D8  21        
080021D9  2121 2121 3602          dc.b      33,33,33,33,0
080021DD  00        
                    3603   @m68kus~1_33:
080021DE  0D0A 496E 3604          dc.b      13,10,73,110,116,105,97,108,105,122,105,110
080021E2  7469 616C 
080021E6  697A 696E 
080021EA  6720 5350 3605          dc.b      103,32,83,80,73,10,0
080021EE  490A 00   
                    3606   @m68kus~1_34:
080021F2  5245 4144 3607          dc.b      82,69,65,68,73,78,71,32,73,68,32,33,33,33,33
080021F6  494E 4720 
080021FA  4944 2021 
080021FE  2121 21   
08002201  2121 2020 3608          dc.b      33,33,32,32,10,10,0
08002205  0A0A 00   
                    3609   @m68kus~1_35:
08002208  0D0A 0A4D 3610          dc.b      13,10,10,77,97,110,58,32,37,120,32,0
0800220C  616E 3A20 
08002210  2578 2000 
                    3611   @m68kus~1_36:
08002214  0D0A 0A44 3612          dc.b      13,10,10,68,101,118,58,32,37,120,32,0
08002218  6576 3A20 
0800221C  2578 2000 
                    3613          section   data
08002220            3614                   align
                    3615   
                    3616   *********************************************************************************************************************************************************
                    3617   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    3618   ********************************************************************************************************************************************************
                    3619   
          0800 2220 3620   DataStart       equ       *
08002220            3621   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08002224            3622   __allocp:       ds.l      1                    start of free memory block list
08002228            3623   __heap:         ds.l      1                    begin of free memory
                    3624   
                    3625   
                    3626   @vsscanf_bufx:
0800222C  0800 235C 3627          dc.l      @vsscanf_buf
                    3628   @vsscanf_1:
08002230  0A00      3629          dc.b      10,0
                    3630   __ctype:
08002232  0040 4040 3631          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08002236  4040 4040 
0800223A  4040 5050 
0800223E  5050 50   
08002241  4040 4040 3632          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08002245  4040 4040 
08002249  4040 4040 
0800224D  4040 40   
08002250  4040 40D0 3633          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08002254  A0A0 A0A0 
08002258  A0A0 A0A0 
0800225C  A0A0 A0A0 3634          dc.b      160,160,160,160,160,160,160,140,140,140,140
08002260  A0A0 A08C 
08002264  8C8C 8C   
08002267  8C8C 8C8C 3635          dc.b      140,140,140,140,140,140,160,160,160,160,160
0800226B  8C8C A0A0 
0800226F  A0A0 A0   
08002272  A0A0 8A8A 3636          dc.b      160,160,138,138,138,138,138,138,130,130,130
08002276  8A8A 8A8A 
0800227A  8282 82   
0800227D  8282 8282 3637          dc.b      130,130,130,130,130,130,130,130,130,130,130
08002281  8282 8282 
08002285  8282 82   
08002288  8282 8282 3638          dc.b      130,130,130,130,130,130,160,160,160,160,160
0800228C  8282 A0A0 
08002290  A0A0 A0   
08002293  A089 8989 3639          dc.b      160,137,137,137,137,137,137,129,129,129,129
08002297  8989 8981 
0800229B  8181 81   
0800229E  8181 8181 3640          dc.b      129,129,129,129,129,129,129,129,129,129,129
080022A2  8181 8181 
080022A6  8181 81   
080022A9  8181 8181 3641          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
080022AD  81A0 A0A0 
080022B1  A040 0000 
080022B5  00        
080022B6  0000 0000 3642          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080022BA  0000 0000 
080022BE  0000 0000 
080022C2  0000 0000 
080022C6  0000 0000 
080022CA  0000      
080022CC  0000 0000 3643          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080022D0  0000 0000 
080022D4  0000 0000 
080022D8  0000 0000 
080022DC  0000 0000 
080022E0  0000      
080022E2  0000 0000 3644          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080022E6  0000 0000 
080022EA  0000 0000 
080022EE  0000 0000 
080022F2  0000 0000 
080022F6  0000      
080022F8  0000 0000 3645          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080022FC  0000 0000 
08002300  0000 0000 
08002304  0000 0000 
08002308  0000 0000 
0800230C  0000      
0800230E  0000 0000 3646          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08002312  0000 0000 
08002316  0000 0000 
0800231A  0000 0000 
0800231E  0000 0000 
08002322  0000      
08002324  0000 0000 3647          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08002328  0000 0000 
0800232C  0000 0000 
08002330  0000 00   
                    3648   @itoa_1:
08002334  2D32 3134 3649          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08002338  3734 3833 
0800233C  3634 3800 
                    3650          section   bss
08002340            3651                   align
                    3652   
          0800 2340 3653   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 3654   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    3655   
                    3656   *********************************************************************************************************
                    3657   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    3658   *********************************************************************************************************
          0800 2340 3659   BssStart       equ       *
                    3660   
                    3661   _i:
08002340            3662          ds.b      4
                    3663   _x:
08002344            3664          ds.b      4
                    3665   _y:
08002348            3666          ds.b      4
                    3667   _z:
0800234C            3668          ds.b      4
                    3669   _PortA_Count:
08002350            3670          ds.b      4
                    3671   _Timer1Count:
08002354            3672          ds.b      1
                    3673   _Timer2Count:
08002356            3674          ds.b      1
                    3675   _Timer3Count:
08002358            3676          ds.b      1
                    3677   _Timer4Count:
0800235A            3678          ds.b      1
                    3679   @vsscanf_buf:
0800235C            3680          ds.b      80
                    3681          section   heap
080023AC            3682                  align
                    3683   
          0800 23AC 3684   BssEnd         equ       *
          0000 006C 3685   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    3686   
                    3687   *********************************************************************************************************
                    3688   * Section for Heap
                    3689   *********************************************************************************************************
                    3690   
          0800 23AC 3691   heap           equ       *
080023AC            3692                  align
          0800 0000

Assembly errors: 0
